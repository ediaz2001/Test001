//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Erp.BO.ConfigurationRuntime.Resources
{
    using System;
    
    
    /// <summary>
    /// A strongly-typed resource class for looking up localized (formatted) strings.
    ///This is a Server Side Strings Resource File. It may contain only string entries.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Ice.Explorer.SingleFileGenerators.StringsDesignerGenerator", "4.1.100.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Strings : Ice.Resources.StringsBase<Erp.BO.ConfigurationRuntime.Resources.Strings>
    {
        
        protected Strings()
        {
        }
        
        /// <summary>
        /// String: 'At least one input control should exist in the configurator design.'.
        /// </summary>
        internal static string ConfiguratorHasNoInputs
        {
            get
            {
                return GetString("ConfiguratorHasNoInputs");
            }
        }
        
        /// <summary>
        /// String: 'Input {0} - Position  {1} - Character &apos;&apos; - {2} - {3}'.
        /// </summary>
        internal static string InputPositionCharacter(object arg0, object arg1, object arg2, object arg3)
        {
            return GetString("InputPositionCharacter", arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// String: 'Job does not exist.'.
        /// </summary>
        internal static string JobDoesNotExist
        {
            get
            {
                return GetString("JobDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'Part Revision for newly created part {0} was not found.'.
        /// </summary>
        internal static string MissingPartRev(object arg0)
        {
            return GetString("MissingPartRev", arg0);
        }
        
        /// <summary>
        /// String: 'Must be a digit.'.
        /// </summary>
        internal static string MustBeADigit
        {
            get
            {
                return GetString("MustBeADigit");
            }
        }
        
        /// <summary>
        /// String: 'Must be a letter.'.
        /// </summary>
        internal static string MustBeALetter
        {
            get
            {
                return GetString("MustBeALetter");
            }
        }
        
        /// <summary>
        /// String: 'Must be a letter or digit'.
        /// </summary>
        internal static string MustBeALetterOrDigit
        {
            get
            {
                return GetString("MustBeALetterOrDigit");
            }
        }
        
        /// <summary>
        /// String: 'When saving input values, configuration cannot be saved unless a part number is entered.  Unable to save configuration.'.
        /// </summary>
        internal static string NewConfigPartIsEmpty
        {
            get
            {
                return GetString("NewConfigPartIsEmpty");
            }
        }
        
        /// <summary>
        /// String: 'The new configured part number must differ from the base part number when saving input values.'.
        /// </summary>
        internal static string NewConfPartMustDifferBasePart
        {
            get
            {
                return GetString("NewConfPartMustDifferBasePart");
            }
        }
        
        /// <summary>
        /// String: 'There are no rules to test.'.
        /// </summary>
        internal static string NoRulesToTest
        {
            get
            {
                return GetString("NoRulesToTest");
            }
        }
        
        /// <summary>
        /// String: 'Order does not exist.'.
        /// </summary>
        internal static string OrderDoesNotExist
        {
            get
            {
                return GetString("OrderDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'Order line does not exist'.
        /// </summary>
        internal static string OrderLineDoesNotExist
        {
            get
            {
                return GetString("OrderLineDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'Part Creation is not valid for Configurator {0}'.
        /// </summary>
        internal static string PartCreateNotValid(object arg0)
        {
            return GetString("PartCreateNotValid", arg0);
        }
        
        /// <summary>
        /// String: 'Part creation is not valid for target {0} of Configurator {1}'.
        /// </summary>
        internal static string PartCreateNotValidForTarget(object arg0, object arg1)
        {
            return GetString("PartCreateNotValidForTarget", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Part Revision {0}, {1} not found.  Cannot check syntax.'.
        /// </summary>
        internal static string PartRevNotFound(object arg0, object arg1)
        {
            return GetString("PartRevNotFound", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Configuration {0} is not approved.  Cannot configure.'.
        /// </summary>
        internal static string PcStatusNotApproved(object arg0)
        {
            return GetString("PcStatusNotApproved", arg0);
        }
        
        /// <summary>
        /// String: 'Configuration &apos;{0}&apos; does not exist.'.
        /// </summary>
        internal static string PcStatusNotFound(object arg0)
        {
            return GetString("PcStatusNotFound", arg0);
        }
        
        /// <summary>
        /// String: 'Configuration was not found in the configuration sequence table, a valid StructTag is required.'.
        /// </summary>
        internal static string PcStructNofFoundInTS
        {
            get
            {
                return GetString("PcStructNofFoundInTS");
            }
        }
        
        /// <summary>
        /// String: 'Target entity &apos;{0}&apos; was not found defined in configuration &apos;{1}&apos;. Cannot start configuration for this entity.'.
        /// </summary>
        internal static string PcTargetEntityNotFound(object arg0, object arg1)
        {
            return GetString("PcTargetEntityNotFound", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'No ttPcValueGrp record was found, at least one ttPcValueGrp record is needed.'.
        /// </summary>
        internal static string PcValueGrpNotFound
        {
            get
            {
                return GetString("PcValueGrpNotFound");
            }
        }
        
        /// <summary>
        /// String: 'PcValueGroup {0} was not found.'.
        /// </summary>
        internal static string PcValueGrpNotFound1(object arg0)
        {
            return GetString("PcValueGrpNotFound1", arg0);
        }
        
        /// <summary>
        /// String: 'PcValueHead {0} was not found.'.
        /// </summary>
        internal static string PcValueHeadNotFound(object arg0)
        {
            return GetString("PcValueHeadNotFound", arg0);
        }
        
        /// <summary>
        /// String: 'Quote does not exist'.
        /// </summary>
        internal static string QuoteDoesNotExist
        {
            get
            {
                return GetString("QuoteDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'Quote Line does not exist.'.
        /// </summary>
        internal static string QuoteLineDoesNotExist
        {
            get
            {
                return GetString("QuoteLineDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'Related information was not found with table name &apos;{0}&apos; and SysRowID &apos;{1}&apos;.'.
        /// </summary>
        internal static string RelatedToRowNotFound(object arg0, object arg1)
        {
            return GetString("RelatedToRowNotFound", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Target entity {0} was not found. '.
        /// </summary>
        internal static string TargetEntityNotFound(object arg0)
        {
            return GetString("TargetEntityNotFound", arg0);
        }
        
        /// <summary>
        /// String: 'Unable to resolve configuration &apos;{0}&apos;, configuration was not loaded.'.
        /// </summary>
        internal static string UnableToResolveConfiguration(object arg0)
        {
            return GetString("UnableToResolveConfiguration", arg0);
        }
        
        /// <summary>
        /// String: 'JobAsmbl does not exist'.
        /// </summary>
        internal static string JobAsmblDoesNotExist
        {
            get
            {
                return GetString("JobAsmblDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'JobMtl does not exist'.
        /// </summary>
        internal static string JobMtlDoesNotExist
        {
            get
            {
                return GetString("JobMtlDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'CanConfigureOnce'.
        /// </summary>
        internal static string CanConfigureOnce
        {
            get
            {
                return GetString("CanConfigureOnce");
            }
        }
        
        /// <summary>
        /// String: 'Demand header not found for given demand line.'.
        /// </summary>
        internal static string DemandHeadNotFound
        {
            get
            {
                return GetString("DemandHeadNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Attempted to reconfigure this line but the line is set to be configurable one time only.'.
        /// </summary>
        internal static string DemandOneTimeOnly
        {
            get
            {
                return GetString("DemandOneTimeOnly");
            }
        }
        
        /// <summary>
        /// String: 'Invalid smart string value at starting position {0}, ending position {1}: A valid value is required.'.
        /// </summary>
        internal static string EDIDecEnd(object arg0, object arg1)
        {
            return GetString("EDIDecEnd", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Invalid smart string value at starting position {0}, ending position {1}: Value must increment by {2}.'.
        /// </summary>
        internal static string EDIDecIncr(object arg0, object arg1, object arg2)
        {
            return GetString("EDIDecIncr", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Invalid smart string value at starting position {0}, ending position {1}: Value must have a minimum value of {2}, a maximum value of {3}, and increment by {4}.'.
        /// </summary>
        internal static string EDIDecMinMaxIncr(object arg0, object arg1, object arg2, object arg3, object arg4)
        {
            return GetString("EDIDecMinMaxIncr", arg0, arg1, arg2, arg3, arg4);
        }
        
        /// <summary>
        /// String: 'Invalid smart string value at starting position {0}, ending position {1}: Value must have a minimum date value of {2} and a maximum date value of {3}.'.
        /// </summary>
        internal static string EDIInvalidDateRange(object arg0, object arg1, object arg2, object arg3)
        {
            return GetString("EDIInvalidDateRange", arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// String: 'Invalid smart string value at starting position {0}, ending position {1}: Unable to convert value to date type input {2}'.
        /// </summary>
        internal static string EDIInvalidDateValue(object arg0, object arg1, object arg2)
        {
            return GetString("EDIInvalidDateValue", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Invalid smart string value at starting position {0}, ending position {1}: Unable to convert value to decimal type input {2}'.
        /// </summary>
        internal static string EDIInvalidDecimalValue(object arg0, object arg1, object arg2)
        {
            return GetString("EDIInvalidDecimalValue", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Invalid smart string value at starting position {0}, ending position {1}: Value not found in valid value list for input {2}.'.
        /// </summary>
        internal static string EDIStringValList(object arg0, object arg1, object arg2)
        {
            return GetString("EDIStringValList", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'A valid smart string is required.'.
        /// </summary>
        internal static string EDIValidSmartStringRequired
        {
            get
            {
                return GetString("EDIValidSmartStringRequired");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Demand Line.'.
        /// </summary>
        internal static string InvalidDemandLine
        {
            get
            {
                return GetString("InvalidDemandLine");
            }
        }
        
        /// <summary>
        /// String: 'SmartStringValidation'.
        /// </summary>
        internal static string SmartStringValidation
        {
            get
            {
                return GetString("SmartStringValidation");
            }
        }
        
        /// <summary>
        /// String: 'Warning'.
        /// </summary>
        internal static string Warning
        {
            get
            {
                return GetString("Warning");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Purchase Order Line'.
        /// </summary>
        internal static string PODetailNotFound
        {
            get
            {
                return GetString("PODetailNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Purchase Order'.
        /// </summary>
        internal static string POHeadNotFound
        {
            get
            {
                return GetString("POHeadNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Configuration ID is required'.
        /// </summary>
        internal static string ConfigIDRequired
        {
            get
            {
                return GetString("ConfigIDRequired");
            }
        }
        
        /// <summary>
        /// String: 'Part Revision was not found.  Cannot Test Rules.'.
        /// </summary>
        internal static string NoPartRevTestRules
        {
            get
            {
                return GetString("NoPartRevTestRules");
            }
        }
        
        /// <summary>
        /// String: 'Cannot resolve the configuration.'.
        /// </summary>
        internal static string ResolverError
        {
            get
            {
                return GetString("ResolverError");
            }
        }
        
        /// <summary>
        /// String: 'No PcValueSet data was found for Configuration {0} Target key {1}, source key {2}'.
        /// </summary>
        internal static string NoSavedPcValueSetFound(object arg0, object arg1, object arg2)
        {
            return GetString("NoSavedPcValueSetFound", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'No ttPcConfigurationParams record was found, at least one ttPcConfigurationParams record is needed.'.
        /// </summary>
        internal static string PcConfigurationNoParams
        {
            get
            {
                return GetString("PcConfigurationNoParams");
            }
        }
        
        /// <summary>
        /// String: 'Unable to update ECOMtl.PartNum from method rules, please select the correct column: &quot;ECOMtl.MtlPartNum&quot;'.
        /// </summary>
        internal static string UnableToUpdECOMtlPartNum
        {
            get
            {
                return GetString("UnableToUpdECOMtlPartNum");
            }
        }
        
        /// <summary>
        /// String: 'No PcValueGrp record was found.'.
        /// </summary>
        internal static string PcValueGrpRecordNotFound
        {
            get
            {
                return GetString("PcValueGrpRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Configuration {0} is not approved.  Cannot review.'.
        /// </summary>
        internal static string PcStatusNotApprovedTracker(object arg0)
        {
            return GetString("PcStatusNotApprovedTracker", arg0);
        }
        
        /// <summary>
        /// String: 'Invalid smart string value at starting position {0}, ending position {1}: Value not found in list items for input {2}.'.
        /// </summary>
        internal static string EDIStringListItems(object arg0, object arg1, object arg2)
        {
            return GetString("EDIStringListItems", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Epicor Web configurators cannot be deployed to EWA'.
        /// </summary>
        internal static string CannotDeployEWC
        {
            get
            {
                return GetString("CannotDeployEWC");
            }
        }
        
        /// <summary>
        /// String: 'Configuration values were not found, no PcValueGrp record was found for Configuration &apos;{0}&apos; on entity &apos;{1}&apos; from &apos;{2}&apos;.'.
        /// </summary>
        internal static string NoSavedPcValueGrpFound(object arg0, object arg1, object arg2)
        {
            return GetString("NoSavedPcValueGrpFound", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Configuration Params were not found.  Cannot proceed with the configuration session.'.
        /// </summary>
        internal static string ConfigurationParamsRequired
        {
            get
            {
                return GetString("ConfigurationParamsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Only Epicor Web configurators can be processed by this method.'.
        /// </summary>
        internal static string EpicorWebOnly
        {
            get
            {
                return GetString("EpicorWebOnly");
            }
        }
        
        /// <summary>
        /// String: 'Cannot find the target being configured.'.
        /// </summary>
        internal static string SourceRowIsNull
        {
            get
            {
                return GetString("SourceRowIsNull");
            }
        }
        
        /// <summary>
        /// String: 'EWA does not support the Layered Image Input.  Cannot deploy.'.
        /// </summary>
        internal static string CannotDeployLayeredImage
        {
            get
            {
                return GetString("CannotDeployLayeredImage");
            }
        }
        
        /// <summary>
        /// String: 'Cannot process an Epicor Web Configurator using EDI Demand.  Configuration ID {0} bypassed.'.
        /// </summary>
        internal static string EDIDemandConfigNotValidForEWC(object arg0)
        {
            return GetString("EDIDemandConfigNotValidForEWC", arg0);
        }
        
        /// <summary>
        /// String: 'Error processing Test Rules.  Unable to continue.  Please try again.'.
        /// </summary>
        internal static string EWCTestRulesFileStoreFoundWhenItShouldNotExist
        {
            get
            {
                return GetString("EWCTestRulesFileStoreFoundWhenItShouldNotExist");
            }
        }
        
        /// <summary>
        /// String: 'Test Rules result data was not found for Configuration {0}, Part {1}, Revision {2}.'.
        /// </summary>
        internal static string EWCTestRulesResultsNotFound(object arg0, object arg1, object arg2)
        {
            return GetString("EWCTestRulesResultsNotFound", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'CPQ Configurator Type cannot be configured outside of the CPQ embedded slider.'.
        /// </summary>
        internal static string KBMaxConfiguratorTypeCannotBeConfigured
        {
            get
            {
                return GetString("KBMaxConfiguratorTypeCannotBeConfigured");
            }
        }
        
        /// <summary>
        /// String: 'The configuration type is invalid for Epicor Web.  Cannot process.'.
        /// </summary>
        internal static string ConfigurationTypeMustBeEWC
        {
            get
            {
                return GetString("ConfigurationTypeMustBeEWC");
            }
        }

        /// <summary>
        /// String: 'Unable to resolve configuration URL.'.
        /// </summary>
        internal static string ECCCfgURLResolverError
        {
            get
            {
                return GetString("ECCCfgURLResolverError");
            }
        }

        /// <summary>
        /// String: 'Unable to resolve CSS URL.'.
        /// </summary>
        internal static string ECCCSSURLResolverError
        {
            get
            {
                return GetString("ECCCSSURLResolverError");
            }
        }

        /// <summary>
        /// String: 'An error occurred while getting access Token.'.
        /// </summary>
        internal static string ECCCfgTokenError
        {
            get
            {
                return GetString("ECCCfgTokenError");
            }
        }

        /// <summary>
        /// String: 'An error ocurred while getting parameters to launch Configurator.'.
        /// </summary>
        internal static string ECCBuildParamsError
        {
            get
            {
                return GetString("ECCBuildParamsError");
            }
        }
    }
}
