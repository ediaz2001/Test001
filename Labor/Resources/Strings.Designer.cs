//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Erp.BO.Labor.Resources
{
    using System;
    
    
    /// <summary>
    /// A strongly-typed resource class for looking up localized (formatted) strings.
    ///This is a Server Side Strings Resource File. It may contain only string entries.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Ice.Explorer.SingleFileGenerators.StringsDesignerGenerator", "4.2.100.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Strings : Ice.Resources.StringsBase<Erp.BO.Labor.Resources.Strings>
    {
        
        protected Strings()
        {
        }
        
        /// <summary>
        /// String: 'Labor Equipment record has not changed.'.
        /// </summary>
        internal static string LaborEquipRecordHasNotChanged
        {
            get
            {
                return GetString("LaborEquipRecordHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'EquipID does not exist.'.
        /// </summary>
        internal static string EquipIDDoesNotExist
        {
            get
            {
                return GetString("EquipIDDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'EquipID is Inactive.'.
        /// </summary>
        internal static string EquipIDIsInactive
        {
            get
            {
                return GetString("EquipIDIsInactive");
            }
        }
        
        /// <summary>
        /// String: 'Labor has not changed.'.
        /// </summary>
        internal static string LaborHasNotChanged
        {
            get
            {
                return GetString("LaborHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'Labor Detail has not changed.'.
        /// </summary>
        internal static string LaborDetailHasNotChanged
        {
            get
            {
                return GetString("LaborDetailHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'Resource ID'.
        /// </summary>
        internal static string ResourceID
        {
            get
            {
                return GetString("ResourceID");
            }
        }
        
        /// <summary>
        /// String: 'The Resource is inactive and may not be selected.'.
        /// </summary>
        internal static string TheResouIsInactAndMayNotBeSelec
        {
            get
            {
                return GetString("TheResouIsInactAndMayNotBeSelec");
            }
        }
        
        /// <summary>
        /// String: 'The Resource {0} is not a location and may not be selected.'.
        /// </summary>
        internal static string TheResouIsNotALocatAndMayNotBeSelec(object arg0)
        {
            return GetString("TheResouIsNotALocatAndMayNotBeSelec", arg0);
        }
        
        /// <summary>
        /// String: 'Resource {0} belongs to a different ResourceGroup.  ResourceGroup will be changed.  Do you wish to continue?'.
        /// </summary>
        internal static string ResouBelongsToADiffeResouResouWillBeChangedDoYou(object arg0)
        {
            return GetString("ResouBelongsToADiffeResouResouWillBeChangedDoYou", arg0);
        }
        
        /// <summary>
        /// String: 'Employee is already active on this sequence.'.
        /// </summary>
        internal static string EmploIsAlreadyActiveOnThisSeque
        {
            get
            {
                return GetString("EmploIsAlreadyActiveOnThisSeque");
            }
        }
        
        /// <summary>
        /// String: 'Unable to start production until First Article inspection has been approved.'.
        /// </summary>
        internal static string UnableToStartProduUntilFirstArticleInspeHasBeen
        {
            get
            {
                return GetString("UnableToStartProduUntilFirstArticleInspeHasBeen");
            }
        }
        
        /// <summary>
        /// String: 'Do you want to continue?'.
        /// </summary>
        internal static string DoYouWantToContinue
        {
            get
            {
                return GetString("DoYouWantToContinue");
            }
        }
        
        /// <summary>
        /// String: 'No LaborDtl record available'.
        /// </summary>
        internal static string NoLaborDtlRecordAvailable
        {
            get
            {
                return GetString("NoLaborDtlRecordAvailable");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Resource.'.
        /// </summary>
        internal static string InvalidResource
        {
            get
            {
                return GetString("InvalidResource");
            }
        }
        
        /// <summary>
        /// String: 'Resource {0} belongs to another Resource Group. OK to switch the Resource Group?'.
        /// </summary>
        internal static string ResouBelongsToAnotherResouGroupOKToSwitchTheResou(object arg0)
        {
            return GetString("ResouBelongsToAnotherResouGroupOKToSwitchTheResou", arg0);
        }
        
        /// <summary>
        /// String: 'The quantity entered will result in a negative total quantity posted to this job operation.  Entry not allowed.'.
        /// </summary>
        internal static string TheQuantEnteredWillResultInANegatTotalQuantPosted
        {
            get
            {
                return GetString("TheQuantEnteredWillResultInANegatTotalQuantPosted");
            }
        }
        
        /// <summary>
        /// String: 'The hours entered will result in a negative total hours posted to this job operations.  Entry not allowed.'.
        /// </summary>
        internal static string TheHoursEnteredWillResultInANegatTotalHoursPosted
        {
            get
            {
                return GetString("TheHoursEnteredWillResultInANegatTotalHoursPosted");
            }
        }
        
        /// <summary>
        /// String: 'The hours entered will result in a negative total rework hours posted to this job operation.  Entry not allowed.'.
        /// </summary>
        internal static string TheHoursEnteredWillResultInANegatTotalReworkHours
        {
            get
            {
                return GetString("TheHoursEnteredWillResultInANegatTotalReworkHours");
            }
        }
        
        /// <summary>
        /// String: 'The total co-parts production quantity and labor quantity do not balance.'.
        /// </summary>
        internal static string TheTotalCoPartsProduQuantAndLaborQuantDoNotBalance
        {
            get
            {
                return GetString("TheTotalCoPartsProduQuantAndLaborQuantDoNotBalance");
            }
        }
        
        /// <summary>
        /// String: 'This employee is not assigned to any Role Code required by this Job Operation.'.
        /// </summary>
        internal static string ThisEmploIsNotAssigToAnyRoleCodeRequiByThisJob
        {
            get
            {
                return GetString("ThisEmploIsNotAssigToAnyRoleCodeRequiByThisJob");
            }
        }
        
        /// <summary>
        /// String: 'One record can be selected to Copy.'.
        /// </summary>
        internal static string OneRecordCanBeSelectedToCopy
        {
            get
            {
                return GetString("OneRecordCanBeSelectedToCopy");
            }
        }
        
        /// <summary>
        /// String: '{0} Employee(s) are already working on this operation'.
        /// </summary>
        internal static string EmploSAreAlreadyWorkingOnThisOpera(object arg0)
        {
            return GetString("EmploSAreAlreadyWorkingOnThisOpera", arg0);
        }
        
        /// <summary>
        /// String: 'Labor Header has not changed.'.
        /// </summary>
        internal static string LaborHeaderHasNotChanged
        {
            get
            {
                return GetString("LaborHeaderHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Discrepancy Reason Code.'.
        /// </summary>
        internal static string InvalidDiscrepancyReasonCode
        {
            get
            {
                return GetString("InvalidDiscrepancyReasonCode");
            }
        }
        
        /// <summary>
        /// String: 'This Job has been closed. Entry not allowed.'.
        /// </summary>
        internal static string ThisJobHasBeenClosedEntryNotAllowed
        {
            get
            {
                return GetString("ThisJobHasBeenClosedEntryNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'This Job has not been released.  Entry not allowed.'.
        /// </summary>
        internal static string ThisJobHasNotBeenReleaEntryNotAllowed
        {
            get
            {
                return GetString("ThisJobHasNotBeenReleaEntryNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'This Job is a job type of Project.  Entry not allowed for non-project related transactions.'.
        /// </summary>
        internal static string ThisJobIsAJobTypeOfProjectEntryNotAllowedForNon
        {
            get
            {
                return GetString("ThisJobIsAJobTypeOfProjectEntryNotAllowedForNon");
            }
        }
        
        /// <summary>
        /// String: 'Job Number'.
        /// </summary>
        internal static string JobNumber
        {
            get
            {
                return GetString("JobNumber");
            }
        }
        
        /// <summary>
        /// String: 'Labor Qty should not be directly updated. There are co-parts'.
        /// </summary>
        internal static string LaborQtyShouldNotBeDirecUpdatedThereAreCoParts
        {
            get
            {
                return GetString("LaborQtyShouldNotBeDirecUpdatedThereAreCoParts");
            }
        }
        
        /// <summary>
        /// String: 'This is a Quantity Only Operation. Rework not allowed.'.
        /// </summary>
        internal static string ThisIsAQuantOnlyOperaReworkNotAllowed
        {
            get
            {
                return GetString("ThisIsAQuantOnlyOperaReworkNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Project Phase.'.
        /// </summary>
        internal static string InvalidProjectPhase
        {
            get
            {
                return GetString("InvalidProjectPhase");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Job Operation Sequence.'.
        /// </summary>
        internal static string InvalidJobOperationSequence
        {
            get
            {
                return GetString("InvalidJobOperationSequence");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Project.'.
        /// </summary>
        internal static string InvalidProject
        {
            get
            {
                return GetString("InvalidProject");
            }
        }
        
        /// <summary>
        /// String: 'Project must be active.'.
        /// </summary>
        internal static string ProjectMustBeActive
        {
            get
            {
                return GetString("ProjectMustBeActive");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Resource for capability.'.
        /// </summary>
        internal static string InvalidResourceForCapability
        {
            get
            {
                return GetString("InvalidResourceForCapability");
            }
        }
        
        /// <summary>
        /// String: 'Role Code cannot be entered, Project Billing is not licensed.'.
        /// </summary>
        internal static string RoleCodeCannotBeEnteredProjectBillingIsNotLicen
        {
            get
            {
                return GetString("RoleCodeCannotBeEnteredProjectBillingIsNotLicen");
            }
        }
        
        /// <summary>
        /// String: 'Role Code cannot be entered for indirect labor.'.
        /// </summary>
        internal static string RoleCodeCannotBeEnteredForIndirLabor
        {
            get
            {
                return GetString("RoleCodeCannotBeEnteredForIndirLabor");
            }
        }
        
        /// <summary>
        /// String: 'JobHead is not available.'.
        /// </summary>
        internal static string JobHeadIsNotAvailable
        {
            get
            {
                return GetString("JobHeadIsNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'Role Code is not valid for this employee and operation.'.
        /// </summary>
        internal static string RoleCodeIsNotValidForThisEmploAndOpera
        {
            get
            {
                return GetString("RoleCodeIsNotValidForThisEmploAndOpera");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Scrap Reason Code.'.
        /// </summary>
        internal static string InvalidScrapReasonCode
        {
            get
            {
                return GetString("InvalidScrapReasonCode");
            }
        }
        
        /// <summary>
        /// String: 'The percentage cannot be greater than 100.'.
        /// </summary>
        internal static string ThePerceCannotBeGreaterThan
        {
            get
            {
                return GetString("ThePerceCannotBeGreaterThan");
            }
        }
        
        /// <summary>
        /// String: 'Shift'.
        /// </summary>
        internal static string Shift
        {
            get
            {
                return GetString("Shift");
            }
        }
        
        /// <summary>
        /// String: 'Time Type Code cannot be entered for indirect labor.'.
        /// </summary>
        internal static string TimeTypeCodeCannotBeEnteredForIndirLabor
        {
            get
            {
                return GetString("TimeTypeCodeCannotBeEnteredForIndirLabor");
            }
        }
        
        /// <summary>
        /// String: 'Labor Detail record has not changed.'.
        /// </summary>
        internal static string LaborDetailRecordHasNotChanged
        {
            get
            {
                return GetString("LaborDetailRecordHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'Labor record not found.'.
        /// </summary>
        internal static string LaborRecordNotFound
        {
            get
            {
                return GetString("LaborRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Labor Detail record not found.'.
        /// </summary>
        internal static string LaborDetailRecordNotFound
        {
            get
            {
                return GetString("LaborDetailRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Operation Seqence.'.
        /// </summary>
        internal static string InvalidOperationSeqence
        {
            get
            {
                return GetString("InvalidOperationSeqence");
            }
        }
        
        /// <summary>
        /// String: 'Labor Header does not exist.'.
        /// </summary>
        internal static string LaborHeaderDoesNotExist
        {
            get
            {
                return GetString("LaborHeaderDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'ttLaborDtl record not found.'.
        /// </summary>
        internal static string TtLaborDtlRecordNotFound
        {
            get
            {
                return GetString("TtLaborDtlRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'JobAsmbl record not found.'.
        /// </summary>
        internal static string JobAsmblRecordNotFound
        {
            get
            {
                return GetString("JobAsmblRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Scrap'.
        /// </summary>
        internal static string Scrap
        {
            get
            {
                return GetString("Scrap");
            }
        }
        
        /// <summary>
        /// String: 'Nonconformance'.
        /// </summary>
        internal static string Nonconformance
        {
            get
            {
                return GetString("Nonconformance");
            }
        }
        
        /// <summary>
        /// String: 'Completed'.
        /// </summary>
        internal static string Completed
        {
            get
            {
                return GetString("Completed");
            }
        }
        
        /// <summary>
        /// String: 'Time Management License not active.  Add not allowed'.
        /// </summary>
        internal static string TimeManagLicenseNotActiveAddNotAllowed
        {
            get
            {
                return GetString("TimeManagLicenseNotActiveAddNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Employee not found.'.
        /// </summary>
        internal static string EmployeeNotFound
        {
            get
            {
                return GetString("EmployeeNotFound");
            }
        }
        
        /// <summary>
        /// String: 'You have chosen to retrieve records by day.  Weekly time view is not enabled with this option selected.'.
        /// </summary>
        internal static string YouHaveChosenToRetriRecordsByDayWeeklyTimeView
        {
            get
            {
                return GetString("YouHaveChosenToRetriRecordsByDayWeeklyTimeView");
            }
        }
        
        /// <summary>
        /// String: 'JobAsmbl not found, cannot retrieve serial numbers.'.
        /// </summary>
        internal static string JobAsNotFoundCannotRetriSerialNumbers
        {
            get
            {
                return GetString("JobAsNotFoundCannotRetriSerialNumbers");
            }
        }
        
        /// <summary>
        /// String: 'A valid Assembly is required.'.
        /// </summary>
        internal static string AValidAssemblyIsRequired
        {
            get
            {
                return GetString("AValidAssemblyIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Invalid to delete an active transaction.'.
        /// </summary>
        internal static string InvalidToDeleteAnActiveTrans
        {
            get
            {
                return GetString("InvalidToDeleteAnActiveTrans");
            }
        }
        
        /// <summary>
        /// String: 'Can&apos;t update record after information has been transferred to payroll.'.
        /// </summary>
        internal static string CanTUpdateRecordAfterInforHasBeenTransToPayroll
        {
            get
            {
                return GetString("CanTUpdateRecordAfterInforHasBeenTransToPayroll");
            }
        }
        
        /// <summary>
        /// String: 'Invalid to modify an active transaction.'.
        /// </summary>
        internal static string InvalidToModifyAnActiveTrans
        {
            get
            {
                return GetString("InvalidToModifyAnActiveTrans");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Labor Type when Allow to book to direct jobs flag is false for this employee.'.
        /// </summary>
        internal static string InvalidLaborTypeWhenAllowToBookToDirectJobsFlag
        {
            get
            {
                return GetString("InvalidLaborTypeWhenAllowToBookToDirectJobsFlag");
            }
        }
        
        /// <summary>
        /// String: 'Invalid to modify a transaction that has been Submitted for Approval.'.
        /// </summary>
        internal static string InvalidToModifyATransThatHasBeenSubmiForAppro
        {
            get
            {
                return GetString("InvalidToModifyATransThatHasBeenSubmiForAppro");
            }
        }
        
        /// <summary>
        /// String: 'Role Code cannot be entered.'.
        /// </summary>
        internal static string RoleCodeCannotBeEntered
        {
            get
            {
                return GetString("RoleCodeCannotBeEntered");
            }
        }
        
        /// <summary>
        /// String: 'Not enough serial numbers assigned.'.
        /// </summary>
        internal static string NotEnoughSerialNumbersAssigned
        {
            get
            {
                return GetString("NotEnoughSerialNumbersAssigned");
            }
        }
        
        /// <summary>
        /// String: 'Total Labor Hours Cannot Be Negative.'.
        /// </summary>
        internal static string TotalLaborHoursCannotBeNegat
        {
            get
            {
                return GetString("TotalLaborHoursCannotBeNegat");
            }
        }
        
        /// <summary>
        /// String: 'Resource Group is Mandatory.'.
        /// </summary>
        internal static string ResourceGroupIsMandatory
        {
            get
            {
                return GetString("ResourceGroupIsMandatory");
            }
        }
        
        /// <summary>
        /// String: 'Setup Percent complete can&apos;t be greater than 100.'.
        /// </summary>
        internal static string SetupPercentComplCanTBeGreaterThan
        {
            get
            {
                return GetString("SetupPercentComplCanTBeGreaterThan");
            }
        }
        
        /// <summary>
        /// String: 'Expense Code is mandatory.'.
        /// </summary>
        internal static string ExpenseCodeIsMandatory
        {
            get
            {
                return GetString("ExpenseCodeIsMandatory");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Labor Expense Code.'.
        /// </summary>
        internal static string InvalidLaborExpenseCode
        {
            get
            {
                return GetString("InvalidLaborExpenseCode");
            }
        }
        
        /// <summary>
        /// String: 'The Resource Group is inactive and may not be selected.'.
        /// </summary>
        internal static string TheResouGroupIsInactAndMayNotBeSelec
        {
            get
            {
                return GetString("TheResouGroupIsInactAndMayNotBeSelec");
            }
        }
        
        /// <summary>
        /// String: 'Labor Comments cannot be deleted.'.
        /// </summary>
        internal static string LaborCommentsCannotBeDeleted
        {
            get
            {
                return GetString("LaborCommentsCannotBeDeleted");
            }
        }
        
        /// <summary>
        /// String: 'Comment Type cannot be changed.'.
        /// </summary>
        internal static string CommentTypeCannotBeChanged
        {
            get
            {
                return GetString("CommentTypeCannotBeChanged");
            }
        }
        
        /// <summary>
        /// String: 'An Invoice comment type already exists for this time record.'.
        /// </summary>
        internal static string AnInvoiceCommentTypeAlreadyExistsForThisTimeRecord
        {
            get
            {
                return GetString("AnInvoiceCommentTypeAlreadyExistsForThisTimeRecord");
            }
        }
        
        /// <summary>
        /// String: 'Employee ID'.
        /// </summary>
        internal static string EmployeeID
        {
            get
            {
                return GetString("EmployeeID");
            }
        }
        
        /// <summary>
        /// String: 'Employee not Active'.
        /// </summary>
        internal static string EmployeeNotActive
        {
            get
            {
                return GetString("EmployeeNotActive");
            }
        }
        
        /// <summary>
        /// String: 'Labor Time not found.'.
        /// </summary>
        internal static string LaborTimeNotFound
        {
            get
            {
                return GetString("LaborTimeNotFound");
            }
        }
        
        /// <summary>
        /// String: 'LaborPartGetNew method not to be used. LaborPart records will be created automatically as part of the LaborDtl.'.
        /// </summary>
        internal static string LaborMethodNotToBeUsedLaborRecordsWillBeCreated
        {
            get
            {
                return GetString("LaborMethodNotToBeUsedLaborRecordsWillBeCreated");
            }
        }
        
        /// <summary>
        /// String: 'Labor not found.'.
        /// </summary>
        internal static string LaborNotFound
        {
            get
            {
                return GetString("LaborNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Quick Entry Code does not exist.'.
        /// </summary>
        internal static string QuickEntryCodeDoesNotExist
        {
            get
            {
                return GetString("QuickEntryCodeDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'Quick Entry Code must have a Labor Type of Indirect or Service as this employee is set to Allow to book to direct labor = false.'.
        /// </summary>
        internal static string QuickEntryCodeMustHaveALaborTypeOfIndirOrService
        {
            get
            {
                return GetString("QuickEntryCodeMustHaveALaborTypeOfIndirOrService");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Resource Group.'.
        /// </summary>
        internal static string InvalidResourceGroup
        {
            get
            {
                return GetString("InvalidResourceGroup");
            }
        }
        
        /// <summary>
        /// String: 'The Resource Group is not a location and may not be selected.'.
        /// </summary>
        internal static string TheResouGroupIsNotALocatAndMayNotBeSelec
        {
            get
            {
                return GetString("TheResouGroupIsNotALocatAndMayNotBeSelec");
            }
        }
        
        /// <summary>
        /// String: 'Can&apos;t add time to a row with a rejected status.'.
        /// </summary>
        internal static string CanTAddTimeToARowWithARejecStatus
        {
            get
            {
                return GetString("CanTAddTimeToARowWithARejecStatus");
            }
        }
        
        /// <summary>
        /// String: 'Hours for at least one day of the week must be entered to save a new row in Weekly Time.'.
        /// </summary>
        internal static string HoursForAtLeastOneDayOfTheWeekMustBeEnteredToSave
        {
            get
            {
                return GetString("HoursForAtLeastOneDayOfTheWeekMustBeEnteredToSave");
            }
        }
        
        /// <summary>
        /// String: 'Can only modify time that hasn&apos;t been submitted.'.
        /// </summary>
        internal static string CanOnlyModifyTimeThatHasnTBeenSubmi
        {
            get
            {
                return GetString("CanOnlyModifyTimeThatHasnTBeenSubmi");
            }
        }
        
        /// <summary>
        /// String: 'Time Weekly field with {0} Correct your Weekly Time before saving or use Daily Time Tab.'.
        /// </summary>
        internal static string TimeWeeklyFieldWithCorrectYourWeeklyTimeBefore(object arg0)
        {
            return GetString("TimeWeeklyFieldWithCorrectYourWeeklyTimeBefore", arg0);
        }
        
        /// <summary>
        /// String: 'Cannot build query.'.
        /// </summary>
        internal static string CannotBuildQuery
        {
            get
            {
                return GetString("CannotBuildQuery");
            }
        }
        
        /// <summary>
        /// String: 'SelectForWork method is for MES only.'.
        /// </summary>
        internal static string SelecMethodIsForMESOnly
        {
            get
            {
                return GetString("SelecMethodIsForMESOnly");
            }
        }
        
        /// <summary>
        /// String: 'Resource Group change has not been approved.'.
        /// </summary>
        internal static string ResouGroupChangeHasNotBeenAppro
        {
            get
            {
                return GetString("ResouGroupChangeHasNotBeenAppro");
            }
        }
        
        /// <summary>
        /// String: 'Job Operation'.
        /// </summary>
        internal static string JobOperation
        {
            get
            {
                return GetString("JobOperation");
            }
        }
        
        /// <summary>
        /// String: 'Labor Type'.
        /// </summary>
        internal static string LaborType
        {
            get
            {
                return GetString("LaborType");
            }
        }
        
        /// <summary>
        /// String: 'One retrieve option must be selected.'.
        /// </summary>
        internal static string OneRetriOptionMustBeSelec
        {
            get
            {
                return GetString("OneRetriOptionMustBeSelec");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Labor Header record.'.
        /// </summary>
        internal static string InvalidLaborHeaderRecord
        {
            get
            {
                return GetString("InvalidLaborHeaderRecord");
            }
        }
        
        /// <summary>
        /// String: 'The Labor Header record is inactive.'.
        /// </summary>
        internal static string TheLaborHeaderRecordIsInactive
        {
            get
            {
                return GetString("TheLaborHeaderRecordIsInactive");
            }
        }
        
        /// <summary>
        /// String: 'An indirect labor activity already exists.'.
        /// </summary>
        internal static string AnIndirLaborActivAlreadyExists
        {
            get
            {
                return GetString("AnIndirLaborActivAlreadyExists");
            }
        }
        
        /// <summary>
        /// String: 'Labor Type must be Indirect. Employee is not allowed to book direct labor.'.
        /// </summary>
        internal static string LaborTypeMustBeIndirEmploIsNotAllowedToBookDirect
        {
            get
            {
                return GetString("LaborTypeMustBeIndirEmploIsNotAllowedToBookDirect");
            }
        }
        
        /// <summary>
        /// String: 'Capability &apos;{0}&apos; not found
        ///in Company &apos;{1}&apos;  Plant ID &apos;{2}&apos;'.
        /// </summary>
        internal static string CapabNotFoundInCompanyPlantID(object arg0, object arg1, object arg2)
        {
            return GetString("CapabNotFoundInCompanyPlantID", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Indirect code is mandatory.'.
        /// </summary>
        internal static string IndirectCodeIsMandatory
        {
            get
            {
                return GetString("IndirectCodeIsMandatory");
            }
        }
        
        /// <summary>
        /// String: 'Invalid indirect code.'.
        /// </summary>
        internal static string InvalidIndirectCode
        {
            get
            {
                return GetString("InvalidIndirectCode");
            }
        }
        
        /// <summary>
        /// String: 'Labor cannot be reported to a non-location resource.'.
        /// </summary>
        internal static string LaborCannotBeReporToANonLocatResou
        {
            get
            {
                return GetString("LaborCannotBeReporToANonLocatResou");
            }
        }
        
        /// <summary>
        /// String: 'Service Call Job Number'.
        /// </summary>
        internal static string ServiceCallJobNumber
        {
            get
            {
                return GetString("ServiceCallJobNumber");
            }
        }
        
        /// <summary>
        /// String: 'The Service Call has been invoiced.  Entry not allowed.'.
        /// </summary>
        internal static string TheServiceCallHasBeenInvoiEntryNotAllowed
        {
            get
            {
                return GetString("TheServiceCallHasBeenInvoiEntryNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Assembly Sequence Number ...'.
        /// </summary>
        internal static string InvalidAssemblySequenceNumber
        {
            get
            {
                return GetString("InvalidAssemblySequenceNumber");
            }
        }
        
        /// <summary>
        /// String: 'Invalide Machine ID.'.
        /// </summary>
        internal static string InvalideMachineID
        {
            get
            {
                return GetString("InvalideMachineID");
            }
        }
        
        /// <summary>
        /// String: 'Reason Code'.
        /// </summary>
        internal static string ReasonCode
        {
            get
            {
                return GetString("ReasonCode");
            }
        }
        
        /// <summary>
        /// String: 'Scrap Quantity Cannot Be Negative'.
        /// </summary>
        internal static string ScrapQuantityCannotBeNegative
        {
            get
            {
                return GetString("ScrapQuantityCannotBeNegative");
            }
        }
        
        /// <summary>
        /// String: 'Non-Conform Quantity Cannot Be Negative'.
        /// </summary>
        internal static string NonConformQuantCannotBeNegat
        {
            get
            {
                return GetString("NonConformQuantCannotBeNegat");
            }
        }
        
        /// <summary>
        /// String: 'Rework Reason Code'.
        /// </summary>
        internal static string ReworkReasonCode
        {
            get
            {
                return GetString("ReworkReasonCode");
            }
        }
        
        /// <summary>
        /// String: 'Job Operation Sequence'.
        /// </summary>
        internal static string JobOperationSequence
        {
            get
            {
                return GetString("JobOperationSequence");
            }
        }
        
        /// <summary>
        /// String: 'This is a Backflush Operation.  Entry Not Allowed.'.
        /// </summary>
        internal static string ThisIsABackfOperaEntryNotAllowed
        {
            get
            {
                return GetString("ThisIsABackfOperaEntryNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Job Operation Subcontract Sequence.  Entry Not Allowed.'.
        /// </summary>
        internal static string JobOperaSubcoSequeEntryNotAllowed
        {
            get
            {
                return GetString("JobOperaSubcoSequeEntryNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Default Job Operation Detail'.
        /// </summary>
        internal static string DefaultJobOperationDetail
        {
            get
            {
                return GetString("DefaultJobOperationDetail");
            }
        }
        
        /// <summary>
        /// String: 'Invalid operation code.'.
        /// </summary>
        internal static string InvalidOperationCode
        {
            get
            {
                return GetString("InvalidOperationCode");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Labor Type.'.
        /// </summary>
        internal static string InvalidLaborType
        {
            get
            {
                return GetString("InvalidLaborType");
            }
        }
        
        /// <summary>
        /// String: 'The job is for a time and materials Project or Phase, Role Code is required.'.
        /// </summary>
        internal static string TheJobIsForATimeAndMaterProjectOrPhaseRoleCode
        {
            get
            {
                return GetString("TheJobIsForATimeAndMaterProjectOrPhaseRoleCode");
            }
        }
        
        /// <summary>
        /// String: 'This entry has already been processed by Project Billing, Role Code cannot be changed.'.
        /// </summary>
        internal static string ThisEntryHasAlreadyBeenProceByProjectBillingRole
        {
            get
            {
                return GetString("ThisEntryHasAlreadyBeenProceByProjectBillingRole");
            }
        }
        
        /// <summary>
        /// String: 'This entry has already been processed by Project Billing, Time Type Code cannot be changed.'.
        /// </summary>
        internal static string ThisEntryHasAlreadyBeenProceByProjectBillingTime
        {
            get
            {
                return GetString("ThisEntryHasAlreadyBeenProceByProjectBillingTime");
            }
        }
        
        /// <summary>
        /// String: 'Serial Number cannot be blank.'.
        /// </summary>
        internal static string SerialNumberCannotBeBlank
        {
            get
            {
                return GetString("SerialNumberCannotBeBlank");
            }
        }
        
        /// <summary>
        /// String: 'Not enough scrap serial numbers specified.'.
        /// </summary>
        internal static string NotEnoughScrapSerialNumbersSpeci
        {
            get
            {
                return GetString("NotEnoughScrapSerialNumbersSpeci");
            }
        }
        
        /// <summary>
        /// String: 'Too many scrap serial numbers specified.'.
        /// </summary>
        internal static string TooManyScrapSerialNumbersSpeci
        {
            get
            {
                return GetString("TooManyScrapSerialNumbersSpeci");
            }
        }
        
        /// <summary>
        /// String: 'Not enough nonconformance serial numbers specified.'.
        /// </summary>
        internal static string NotEnoughNoncoSerialNumbersSpeci
        {
            get
            {
                return GetString("NotEnoughNoncoSerialNumbersSpeci");
            }
        }
        
        /// <summary>
        /// String: 'Too many noncomformance serial numbers specified.'.
        /// </summary>
        internal static string TooManyNoncoSerialNumbersSpeci
        {
            get
            {
                return GetString("TooManyNoncoSerialNumbersSpeci");
            }
        }
        
        /// <summary>
        /// String: 'Not enough complete serial numbers specified.'.
        /// </summary>
        internal static string NotEnoughComplSerialNumbersSpeci
        {
            get
            {
                return GetString("NotEnoughComplSerialNumbersSpeci");
            }
        }
        
        /// <summary>
        /// String: 'Too many complete serial numbers specified.'.
        /// </summary>
        internal static string TooManyComplSerialNumbersSpeci
        {
            get
            {
                return GetString("TooManyComplSerialNumbersSpeci");
            }
        }
        
        /// <summary>
        /// String: 'Job not found.'.
        /// </summary>
        internal static string JobNotFound
        {
            get
            {
                return GetString("JobNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Serial tracking is not enabled in this site.'.
        /// </summary>
        internal static string SerialTrackIsNotEnabledInThisPlant
        {
            get
            {
                return GetString("SerialTrackIsNotEnabledInThisPlant");
            }
        }
        
        /// <summary>
        /// String: 'Part number is not serial tracked.'.
        /// </summary>
        internal static string PartNumberIsNotSerialTracked
        {
            get
            {
                return GetString("PartNumberIsNotSerialTracked");
            }
        }
        
        /// <summary>
        /// String: 'You must specify a quantity.'.
        /// </summary>
        internal static string YouMustSpecifyAQuantity
        {
            get
            {
                return GetString("YouMustSpecifyAQuantity");
            }
        }
        
        /// <summary>
        /// String: 'Time Type Code cannot be entered if Project Billing is not licensed.'.
        /// </summary>
        internal static string TimeTypeCodeCannotBeEnteredIfProjectBillingIsNot
        {
            get
            {
                return GetString("TimeTypeCodeCannotBeEnteredIfProjectBillingIsNot");
            }
        }
        
        /// <summary>
        /// String: 'A Role Code must be entered before the Time Type Code.'.
        /// </summary>
        internal static string ARoleCodeMustBeEnteredBeforeTheTimeTypeCode
        {
            get
            {
                return GetString("ARoleCodeMustBeEnteredBeforeTheTimeTypeCode");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Project. Time Type Code cannot be entered.'.
        /// </summary>
        internal static string InvalidProjectTimeTypeCodeCannotBeEntered
        {
            get
            {
                return GetString("InvalidProjectTimeTypeCodeCannotBeEntered");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Project or WBS Phase Invoicing Method. Time Type Code cannot be entered.'.
        /// </summary>
        internal static string InvalidProjectOrWBSPhaseInvoiMethodTimeTypeCode
        {
            get
            {
                return GetString("InvalidProjectOrWBSPhaseInvoiMethodTimeTypeCode");
            }
        }
        
        /// <summary>
        /// String: 'There is no charge rate defined for the selected Time Type. A charge rate should be defined before this labor transaction is approved.'.
        /// </summary>
        internal static string ThereIsNoChargeRateDefinedForTheSelecTimeTypePlease
        {
            get
            {
                return GetString("ThereIsNoChargeRateDefinedForTheSelecTimeTypePlease");
            }
        }
        
        /// <summary>
        /// String: 'There is no charge rate defined on the Project for the selected Time Type. A charge rate should be defined before this labor transaction is approved.'.
        /// </summary>
        internal static string ThereIsNoChargeRateDefinedOnTheProjectForTheSelec
        {
            get
            {
                return GetString("ThereIsNoChargeRateDefinedOnTheProjectForTheSelec");
            }
        }
        
        /// <summary>
        /// String: 'There is no charge rate defined on the Employee for the selected Time Type. A charge rate should be defined before this labor transaction is approved.'.
        /// </summary>
        internal static string ThereIsNoChargeRateDefinedOnTheEmploForTheSelec
        {
            get
            {
                return GetString("ThereIsNoChargeRateDefinedOnTheEmploForTheSelec");
            }
        }
        
        /// <summary>
        /// String: 'There is no charge rate defined on the Role Code for the selected Time Type. A charge rate should be defined before this labor transaction is approved.'.
        /// </summary>
        internal static string ThereIsNoChargeRateDefinedOnTheRoleCodeForTheSelec
        {
            get
            {
                return GetString("ThereIsNoChargeRateDefinedOnTheRoleCodeForTheSelec");
            }
        }
        
        /// <summary>
        /// String: 'Resource Group not valid.'.
        /// </summary>
        internal static string ResourceGroupNotValid
        {
            get
            {
                return GetString("ResourceGroupNotValid");
            }
        }
        
        /// <summary>
        /// String: 'Resource Group not valid for the Site.'.
        /// </summary>
        internal static string ResouGroupNotValidForThePlant
        {
            get
            {
                return GetString("ResouGroupNotValidForThePlant");
            }
        }
        
        /// <summary>
        /// String: 'Date'.
        /// </summary>
        internal static string Date
        {
            get
            {
                return GetString("Date");
            }
        }
        
        /// <summary>
        /// String: 'Hour'.
        /// </summary>
        internal static string Hour
        {
            get
            {
                return GetString("Hour");
            }
        }
        
        /// <summary>
        /// String: 'Minute'.
        /// </summary>
        internal static string Minute
        {
            get
            {
                return GetString("Minute");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Job Number'.
        /// </summary>
        internal static string InvalidJobNumber
        {
            get
            {
                return GetString("InvalidJobNumber");
            }
        }
        
        /// <summary>
        /// String: 'Site Configuration Control record not found.'.
        /// </summary>
        internal static string PlantConfiControlRecordNotFound
        {
            get
            {
                return GetString("PlantConfiControlRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Invalid SerialNumber Number'.
        /// </summary>
        internal static string InvalidSerialNumberNumber
        {
            get
            {
                return GetString("InvalidSerialNumberNumber");
            }
        }
        
        /// <summary>
        /// String: 'There is at least one serial number which has not been matched. Continue?'.
        /// </summary>
        internal static string ThereIsAtLeastOneSerialNumberWhichHasNotBeenMatched
        {
            get
            {
                return GetString("ThereIsAtLeastOneSerialNumberWhichHasNotBeenMatched");
            }
        }
        
        /// <summary>
        /// String: 'Lower Level serial matching is required for the receipt serial numbers'.
        /// </summary>
        internal static string LowerLevelSerialMatchIsRequiForTheReceiptSerial
        {
            get
            {
                return GetString("LowerLevelSerialMatchIsRequiForTheReceiptSerial");
            }
        }
        
        /// <summary>
        /// String: 'Manufacture'.
        /// </summary>
        internal static string Manufacture
        {
            get
            {
                return GetString("Manufacture");
            }
        }
        
        /// <summary>
        /// String: 'Service'.
        /// </summary>
        internal static string Service
        {
            get
            {
                return GetString("Service");
            }
        }
        
        /// <summary>
        /// String: 'Project'.
        /// </summary>
        internal static string Project
        {
            get
            {
                return GetString("Project");
            }
        }
        
        /// <summary>
        /// String: 'Maintenance'.
        /// </summary>
        internal static string Maintenance
        {
            get
            {
                return GetString("Maintenance");
            }
        }
        
        /// <summary>
        /// String: 'Production'.
        /// </summary>
        internal static string Production
        {
            get
            {
                return GetString("Production");
            }
        }
        
        /// <summary>
        /// String: 'Setup'.
        /// </summary>
        internal static string Setup
        {
            get
            {
                return GetString("Setup");
            }
        }
        
        /// <summary>
        /// String: 'Indirect'.
        /// </summary>
        internal static string Indirect
        {
            get
            {
                return GetString("Indirect");
            }
        }
        
        /// <summary>
        /// String: 'The labor hours you have selected (updated) for {0} are comprised of multiple labor detail records.                                      Please use the Daily Time view to make any updates to these labor hours.'.
        /// </summary>
        internal static string TheLaborHoursYouHaveSelecUpdatedForAreComprOfMulti(object arg0)
        {
            return GetString("TheLaborHoursYouHaveSelecUpdatedForAreComprOfMulti", arg0);
        }
        
        /// <summary>
        /// String: 'More than one entry for {0} is not allowed'.
        /// </summary>
        internal static string MoreThanOneEntryForIsNotAllowed(object arg0)
        {
            return GetString("MoreThanOneEntryForIsNotAllowed", arg0);
        }
        
        /// <summary>
        /// String: 'Serial Number {0} is not valid for this job and part.'.
        /// </summary>
        internal static string SerialNumberIsNotValidForThisJobAndPart(object arg0)
        {
            return GetString("SerialNumberIsNotValidForThisJobAndPart", arg0);
        }
        
        /// <summary>
        /// String: 'Serial Number {0} already has a status other than WIP, Scrap, or Nonconformance.'.
        /// </summary>
        internal static string SerialNumberAlreadyHasAStatusOtherThanWIPScrap(object arg0)
        {
            return GetString("SerialNumberAlreadyHasAStatusOtherThanWIPScrap", arg0);
        }
        
        /// <summary>
        /// String: 'Serial Number {0} has already been assigned to this operation.'.
        /// </summary>
        internal static string SerialNumberHasAlreadyBeenAssigToThisOpera(object arg0)
        {
            return GetString("SerialNumberHasAlreadyBeenAssigToThisOpera", arg0);
        }
        
        /// <summary>
        /// String: 'Serial Number {0} already rejected by DMR: {1}'.
        /// </summary>
        internal static string SerialNumberAlreadyRejecByDMR(object arg0, object arg1)
        {
            return GetString("SerialNumberAlreadyRejecByDMR", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Serial Number {0} was scrapped on operation: {1}'.
        /// </summary>
        internal static string SerialNumberWasScrapOnOpera(object arg0, object arg1)
        {
            return GetString("SerialNumberWasScrapOnOpera", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Serial Number {0} is in inspection under NonConformance Number: {1}'.
        /// </summary>
        internal static string SerialNumberIsInInspeUnderNonCoNumber(object arg0, object arg1)
        {
            return GetString("SerialNumberIsInInspeUnderNonCoNumber", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Not enough serial numbers assigned to job. Need {0} more serial numbers assigned. Assign them now?'.
        /// </summary>
        internal static string NotEnoughSerialNumbersAssigToJobNeedMoreSerial(object arg0)
        {
            return GetString("NotEnoughSerialNumbersAssigToJobNeedMoreSerial", arg0);
        }
        
        /// <summary>
        /// String: 'The total combined quantity ({0}) must be a whole number.'.
        /// </summary>
        internal static string TheTotalCombiQuantMustBeAWholeNumber(object arg0)
        {
            return GetString("TheTotalCombiQuantMustBeAWholeNumber", arg0);
        }
        
        /// <summary>
        /// String: 'The modules required to access &apos;BO.Labor&apos; are not licensed.'.
        /// </summary>
        internal static string TheModulesRequiToAccessBOLaborAreNotLicen
        {
            get
            {
                return GetString("TheModulesRequiToAccessBOLaborAreNotLicen");
            }
        }
        
        /// <summary>
        /// String: 'Equipment ID must be unique.'.
        /// </summary>
        internal static string EquipMustBeUnique
        {
            get
            {
                return GetString("EquipMustBeUnique");
            }
        }
        
        /// <summary>
        /// String: 'Current Time Format'.
        /// </summary>
        internal static string CurrTimeFormat
        {
            get
            {
                return GetString("CurrTimeFormat");
            }
        }
        
        /// <summary>
        /// String: 'INVENTORY'.
        /// </summary>
        internal static string InventoryStatus
        {
            get
            {
                return GetString("InventoryStatus");
            }
        }
        
        /// <summary>
        /// String: 'There is a Nonconformance entry linked to this labor. Are you sure you want to delete the labor and nonconformance records?'.
        /// </summary>
        internal static string ExistingNonConformanceRecordsQuestion
        {
            get
            {
                return GetString("ExistingNonConformanceRecordsQuestion");
            }
        }
        
        /// <summary>
        /// String: 'Serial Number {0} has not been assigned to this operation previously.'.
        /// </summary>
        internal static string SerialNumberHasNotBeenAssigToThisOp(object arg0)
        {
            return GetString("SerialNumberHasNotBeenAssigToThisOp", arg0);
        }
        
        /// <summary>
        /// String: 'Not enough serial numbers to be selected as rework, you only have completed {0} previously'.
        /// </summary>
        internal static string NotEnoughSerialNumbersToBeSelectAsRW(object arg0)
        {
            return GetString("NotEnoughSerialNumbersToBeSelectAsRW", arg0);
        }
        
        /// <summary>
        /// String: 'Invalid to delete as there is a rework operation for same serial number'.
        /// </summary>
        internal static string InvalidToDeleteRWExists
        {
            get
            {
                return GetString("InvalidToDeleteRWExists");
            }
        }
        
        /// <summary>
        /// String: 'Please select a Downtime Code.'.
        /// </summary>
        internal static string ExternalMESIndirectCodeNotBlank
        {
            get
            {
                return GetString("ExternalMESIndirectCodeNotBlank");
            }
        }
        
        /// <summary>
        /// String: 'Noncomformance quantity has been already processed in Inspection. Change not allowed.'.
        /// </summary>
        internal static string NonConfAlreadyProcessed
        {
            get
            {
                return GetString("NonConfAlreadyProcessed");
            }
        }
        
        /// <summary>
        /// String: 'Please select a Time Type.'.
        /// </summary>
        internal static string TimeTypeCodeCannotBeBlank
        {
            get
            {
                return GetString("TimeTypeCodeCannotBeBlank");
            }
        }
        
        /// <summary>
        /// String: 'There is no charge rate defined for this labor transaction. If it is approved it will result in a $0.00 charge amount. Do you wish to continue?'.
        /// </summary>
        internal static string TimeTypeChangeRateWarning
        {
            get
            {
                return GetString("TimeTypeChangeRateWarning");
            }
        }
        
        /// <summary>
        /// String: 'Serial Number {0} has already been assigned to this operation as rework.'.
        /// </summary>
        internal static string SerialNumberHasAlreadyBeenAssigToThisOperaRework(object arg0)
        {
            return GetString("SerialNumberHasAlreadyBeenAssigToThisOperaRework", arg0);
        }
        
        /// <summary>
        /// String: 'Invalid to delete an approved labor detail.'.
        /// </summary>
        internal static string InvalidToDeleteAnApprovedTrans
        {
            get
            {
                return GetString("InvalidToDeleteAnApprovedTrans");
            }
        }
        
        /// <summary>
        /// String: 'Shift Information from current employee not available'.
        /// </summary>
        internal static string ShiftInformationFromCurrentEmployeeNotAvailable
        {
            get
            {
                return GetString("ShiftInformationFromCurrentEmployeeNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'Serial Number {0} is associated with a PCID.'.
        /// </summary>
        internal static string CannotSelectSerialNoWithPCID(object arg0)
        {
            return GetString("CannotSelectSerialNoWithPCID", arg0);
        }
        
        /// <summary>
        /// String: 'Report Quantity not allowed for Time and Backflush Qty Operations.'.
        /// </summary>
        internal static string ReportQtyNotAllowedForTimeAndBackflushOperations
        {
            get
            {
                return GetString("ReportQtyNotAllowedForTimeAndBackflushOperations");
            }
        }
        
        /// <summary>
        /// String: 'Not allowed to change Next Operation for a Time - Backflush Qty.'.
        /// </summary>
        internal static string NotAllowedToChangeNextOperationForATimeBackflushQty
        {
            get
            {
                return GetString("NotAllowedToChangeNextOperationForATimeBackflushQty");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Range of Dates Selected.'.
        /// </summary>
        internal static string InvalidDateRangeSelected
        {
            get
            {
                return GetString("InvalidDateRangeSelected");
            }
        }
        
        /// <summary>
        /// String: 'Unable to Delete HCM Record, Review Status.'.
        /// </summary>
        internal static string HCMRecordDelete
        {
            get
            {
                return GetString("HCMRecordDelete");
            }
        }
        
        /// <summary>
        /// String: 'HCM record not found.'.
        /// </summary>
        internal static string HCMRecordNotFound
        {
            get
            {
                return GetString("HCMRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Incorrect Call From parameter.'.
        /// </summary>
        internal static string CallFromIncorrect
        {
            get
            {
                return GetString("CallFromIncorrect");
            }
        }
        
        /// <summary>
        /// String: 'Invalid to delete a posted labor detail.'.
        /// </summary>
        internal static string InvalidToDeleteAPostedLabor
        {
            get
            {
                return GetString("InvalidToDeleteAPostedLabor");
            }
        }
        
        /// <summary>
        /// String: 'Invalid to modify a posted labor detail.'.
        /// </summary>
        internal static string InvalidToModifyAPostedLabor
        {
            get
            {
                return GetString("InvalidToModifyAPostedLabor");
            }
        }
        
        /// <summary>
        /// String: 'It is not allowed to mix HCM integration types in the same header. Please create a new header for the new type'.
        /// </summary>
        internal static string HCMLaborMustHaveSameType
        {
            get
            {
                return GetString("HCMLaborMustHaveSameType");
            }
        }
        
        /// <summary>
        /// String: 'Cannot delete backflushed labor transactions.'.
        /// </summary>
        internal static string InvalidToDeleteBackFlushedTrans
        {
            get
            {
                return GetString("InvalidToDeleteBackFlushedTrans");
            }
        }
        
        /// <summary>
        /// String: 'Action is only for use by the Epicor FSA integration.'.
        /// </summary>
        internal static string FSAActionOnlyForFSA
        {
            get
            {
                return GetString("FSAActionOnlyForFSA");
            }
        }
        
        /// <summary>
        /// String: 'Call Code is only for use by the Epicor FSA integration.'.
        /// </summary>
        internal static string FSACallCodeOnlyForFSA
        {
            get
            {
                return GetString("FSACallCodeOnlyForFSA");
            }
        }
        
        /// <summary>
        /// String: 'Contract Code is only for use by the Epicor FSA integration.'.
        /// </summary>
        internal static string FSAContractCodeOnlyForFSA
        {
            get
            {
                return GetString("FSAContractCodeOnlyForFSA");
            }
        }
        
        /// <summary>
        /// String: 'Contract Number is only for use by the Epicor FSA integration.'.
        /// </summary>
        internal static string FSAContractNumOnlyForFSA
        {
            get
            {
                return GetString("FSAContractNumOnlyForFSA");
            }
        }
        
        /// <summary>
        /// String: 'Equipment Install ID is only for use by the Epicor FSA integration.'.
        /// </summary>
        internal static string FSAEquipmentInstallIDOnlyForFSA
        {
            get
            {
                return GetString("FSAEquipmentInstallIDOnlyForFSA");
            }
        }
        
        /// <summary>
        /// String: 'Equipment ID is only for use by the Epicor FSA integration.'.
        /// </summary>
        internal static string FSAEquipmentPartNumOnlyForFSA
        {
            get
            {
                return GetString("FSAEquipmentPartNumOnlyForFSA");
            }
        }
        
        /// <summary>
        /// String: 'Service Order Number is only for use by the Epicor FSA integration.'.
        /// </summary>
        internal static string FSAServiceOrderNumberOnlyForFSA
        {
            get
            {
                return GetString("FSAServiceOrderNumberOnlyForFSA");
            }
        }
        
        /// <summary>
        /// String: 'Service Order Resource Number is only for use by the Epicor FSA integration.'.
        /// </summary>
        internal static string FSAServiceOrderResourceNumberOnlyForFSA
        {
            get
            {
                return GetString("FSAServiceOrderResourceNumberOnlyForFSA");
            }
        }
        
        /// <summary>
        /// String: 'Warranty Code is only for use by the Epicor FSA integration.'.
        /// </summary>
        internal static string FSAWarrantyCodeOnlyForFSA
        {
            get
            {
                return GetString("FSAWarrantyCodeOnlyForFSA");
            }
        }
        
        /// <summary>
        /// String: 'This transaction cannot be processed into a PCID that contains a different part if the PCID is not Allow Mixed Parts.'.
        /// </summary>
        internal static string PCIDContainsADifferentItemPartNum
        {
            get
            {
                return GetString("PCIDContainsADifferentItemPartNum");
            }
        }
        
        /// <summary>
        /// String: 'This transaction cannot be processed into a PCID that contains a different job if the PCID is Label Print Controlled.'.
        /// </summary>
        internal static string PCIDContainsADifferentJob
        {
            get
            {
                return GetString("PCIDContainsADifferentJob");
            }
        }
        
        /// <summary>
        /// String: 'PCID cannot be used for this transaction.'.
        /// </summary>
        internal static string PCIDCannotBeUsedForThisTransaction
        {
            get
            {
                return GetString("PCIDCannotBeUsedForThisTransaction");
            }
        }
        
        /// <summary>
        /// String: 'Lot must be entered for Lot tracked parts when using a PCID'.
        /// </summary>
        internal static string LotMustBeEnteredWhenUsingPCID
        {
            get
            {
                return GetString("LotMustBeEnteredWhenUsingPCID");
            }
        }
        
        /// <summary>
        /// String: 'You cannot end Downtime without existing Downtime.'.
        /// </summary>
        internal static string CannotEndDowntimeWithoutDowntime
        {
            get
            {
                return GetString("CannotEndDowntimeWithoutDowntime");
            }
        }
        
        /// <summary>
        /// String: 'You cannot start Downtime when Downtime already exists.'.
        /// </summary>
        internal static string CannotStartDowntimeWhenDowntimeAlreadyExists
        {
            get
            {
                return GetString("CannotStartDowntimeWhenDowntimeAlreadyExists");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Rework Reason Code.'.
        /// </summary>
        internal static string InvalidReworkReasonCode
        {
            get
            {
                return GetString("InvalidReworkReasonCode");
            }
        }
        
        /// <summary>
        /// String: 'A valid resource must be selected to continue.'.
        /// </summary>
        internal static string NeedResource
        {
            get
            {
                return GetString("NeedResource");
            }
        }
        
        /// <summary>
        /// String: 'Employee is unable to update Non-Conformance Quantity.'.
        /// </summary>
        internal static string EmployeeUnableToUpdateDiscrepQty
        {
            get
            {
                return GetString("EmployeeUnableToUpdateDiscrepQty");
            }
        }
        
        /// <summary>
        /// String: 'Employee is unable to update Scrap Quantity.'.
        /// </summary>
        internal static string EmployeeUnableToUpdateScrapQty
        {
            get
            {
                return GetString("EmployeeUnableToUpdateScrapQty");
            }
        }
        
        /// <summary>
        /// String: 'You cannot enter comments to an approved time'.
        /// </summary>
        internal static string CannotEnterCommentForApproved
        {
            get
            {
                return GetString("CannotEnterCommentForApproved");
            }
        }
        
        /// <summary>
        /// String: 'Project {0} is closed and must be reopened to proceed with this action.'.
        /// </summary>
        internal static string ProjectClosed(object arg0)
        {
            return GetString("ProjectClosed", arg0);
        }
        
        /// <summary>
        /// String: 'Beginning week date must be a Sunday.'.
        /// </summary>
        internal static string WeekBeginDateSunday
        {
            get
            {
                return GetString("WeekBeginDateSunday");
            }
        }
        
        /// <summary>
        /// String: 'Invoice'.
        /// </summary>
        internal static string Invoice
        {
            get
            {
                return GetString("Invoice");
            }
        }
        
        /// <summary>
        /// String: 'Submit'.
        /// </summary>
        internal static string Submit
        {
            get
            {
                return GetString("Submit");
            }
        }
        
        /// <summary>
        /// String: 'Approve'.
        /// </summary>
        internal static string Approve
        {
            get
            {
                return GetString("Approve");
            }
        }
        
        /// <summary>
        /// String: 'Reject'.
        /// </summary>
        internal static string Reject
        {
            get
            {
                return GetString("Reject");
            }
        }
        
        /// <summary>
        /// String: 'Approved'.
        /// </summary>
        internal static string Approved
        {
            get
            {
                return GetString("Approved");
            }
        }
        
        /// <summary>
        /// String: 'Clock In Date'.
        /// </summary>
        internal static string ClockInDate
        {
            get
            {
                return GetString("ClockInDate");
            }
        }
        
        /// <summary>
        /// String: 'Entered'.
        /// </summary>
        internal static string Entered
        {
            get
            {
                return GetString("Entered");
            }
        }
        
        /// <summary>
        /// String: 'Job'.
        /// </summary>
        internal static string Job
        {
            get
            {
                return GetString("Job");
            }
        }
        
        /// <summary>
        /// String: 'Labor Hours'.
        /// </summary>
        internal static string LaborHours
        {
            get
            {
                return GetString("LaborHours");
            }
        }
        
        /// <summary>
        /// String: 'Opr'.
        /// </summary>
        internal static string Opr
        {
            get
            {
                return GetString("Opr");
            }
        }
        
        /// <summary>
        /// String: 'Partially Approved'.
        /// </summary>
        internal static string PartiallyApproved
        {
            get
            {
                return GetString("PartiallyApproved");
            }
        }
        
        /// <summary>
        /// String: 'Phase ID'.
        /// </summary>
        internal static string PhaseID
        {
            get
            {
                return GetString("PhaseID");
            }
        }
        
        /// <summary>
        /// String: 'Rejected'.
        /// </summary>
        internal static string Rejected
        {
            get
            {
                return GetString("Rejected");
            }
        }
        
        /// <summary>
        /// String: 'Role'.
        /// </summary>
        internal static string Role
        {
            get
            {
                return GetString("Role");
            }
        }
        
        /// <summary>
        /// String: 'Status'.
        /// </summary>
        internal static string Status
        {
            get
            {
                return GetString("Status");
            }
        }
        
        /// <summary>
        /// String: 'Submitted'.
        /// </summary>
        internal static string Submitted
        {
            get
            {
                return GetString("Submitted");
            }
        }
        
        /// <summary>
        /// String: 'Time Type'.
        /// </summary>
        internal static string TimeType
        {
            get
            {
                return GetString("TimeType");
            }
        }
        
        /// <summary>
        /// String: 'Cannot Complete Operation. Need to complete every required Action first.'.
        /// </summary>
        internal static string CannotCompleteOpActionReq
        {
            get
            {
                return GetString("CannotCompleteOpActionReq");
            }
        }
        
        /// <summary>
        /// String: 'Job Operation Action record not found.'.
        /// </summary>
        internal static string JobOperActionNotFound
        {
            get
            {
                return GetString("JobOperActionNotFound");
            }
        }
        
        /// <summary>
        /// String: 'The total co-parts nonconformance quantity and labor nonconformance quantity do not balance.'.
        /// </summary>
        internal static string TheTotalCoPartsDiscrepQuantAndLaborQuantDoNotBalance
        {
            get
            {
                return GetString("TheTotalCoPartsDiscrepQuantAndLaborQuantDoNotBalance");
            }
        }
        
        /// <summary>
        /// String: 'The total co-parts scrap quantity and labor scrap quantity do not balance.'.
        /// </summary>
        internal static string TheTotalCoPartsScrapAndLaborQuantDoNotBalance
        {
            get
            {
                return GetString("TheTotalCoPartsScrapAndLaborQuantDoNotBalance");
            }
        }
        
        /// <summary>
        /// String: 'Co-part record has not changed.'.
        /// </summary>
        internal static string LaborPartHasNotChanged
        {
            get
            {
                return GetString("LaborPartHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'When part is serial tracked, all attribute sets must be the same.'.
        /// </summary>
        internal static string AllAttrSetsMustBeTheSame
        {
            get
            {
                return GetString("AllAttrSetsMustBeTheSame");
            }
        }
        
        /// <summary>
        /// String: 'Attribute sets must be entered for all quantities.'.
        /// </summary>
        internal static string AttributeSetsMustBeEnteredForAllQtys
        {
            get
            {
                return GetString("AttributeSetsMustBeEnteredForAllQtys");
            }
        }
        
        /// <summary>
        /// String: 'Job: {0} Assy: {1} OperSeq: {2} is a co-part operation and is not supported by Work Queue at this time. It may be processed in Labor Entry or End Activity.'.
        /// </summary>
        internal static string CoPartError(object arg0, object arg1, object arg2)
        {
            return GetString("CoPartError", arg0, arg1, arg2);
        }
    }
}
