//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Erp.Internal.PE.Resources
{
    using System;
    
    
    /// <summary>
    /// A strongly-typed resource class for looking up localized (formatted) strings.
    ///This is a Server Side Strings Resource File. It may contain only string entries.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Ice.Explorer.SingleFileGenerators.StringsDesignerGenerator", "4.1.100.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Strings : Ice.Resources.StringsBase<Erp.Internal.PE.Resources.Strings>
    {
        
        protected Strings()
        {
        }
        
        /// <summary>
        /// String: '[Line {0}]:  '.
        /// </summary>
        internal static string Line(object arg0)
        {
            return GetString("Line", arg0);
        }
        
        /// <summary>
        /// String: 'Non-zero financial amount for a statistical account'.
        /// </summary>
        internal static string Nonzerofinancialamountforastatisticalaccount
        {
            get
            {
                return GetString("Nonzerofinancialamountforastatisticalaccount");
            }
        }
        
        /// <summary>
        /// String: 'Non-zero statistical amount for a non-statistical account'.
        /// </summary>
        internal static string Nonzerostatisticalamountfornonstatisticalaccount
        {
            get
            {
                return GetString("Nonzerostatisticalamountfornonstatisticalaccount");
            }
        }
        
        /// <summary>
        /// String: 'Non-empty statistical code for non-statistical account'.
        /// </summary>
        internal static string NotEmptyStatisctialCode
        {
            get
            {
                return GetString("NotEmptyStatisctialCode");
            }
        }
        
        /// <summary>
        /// String: 'Details:  Transaction Type {0}. AbtUID {1}. OldAbtUID {2}.'.
        /// </summary>
        internal static string NTransTypeRevisAbtUIDOldAb(object arg0, object arg1, object arg2)
        {
            return GetString("NTransTypeRevisAbtUIDOldAb", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Reference account validation error:'.
        /// </summary>
        internal static string ReferAccountValidError
        {
            get
            {
                return GetString("ReferAccountValidError");
            }
        }
        
        /// <summary>
        /// String: ' Reference segment is empty. COACode {0}. SegmentNumber {1}.'.
        /// </summary>
        internal static string ReferSegmentIsEmptyCOACodeSegmeHBuffCOACode(object arg0, object arg1)
        {
            return GetString("ReferSegmentIsEmptyCOACodeSegmeHBuffCOACode", arg0, arg1);
        }
        
        /// <summary>
        /// String: ' Reference segment is not empty.  COACode {0}. SegmentNumber {1}.'.
        /// </summary>
        internal static string ReferSegmentIsNotEmptyCOACodeSegmeHBuffCOACode(object arg0, object arg1)
        {
            return GetString("ReferSegmentIsNotEmptyCOACodeSegmeHBuffCOACode", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Unknown statistical code &apos;{0}&apos;'.
        /// </summary>
        internal static string StatisticalCodeWrong(object arg0)
        {
            return GetString("StatisticalCodeWrong", arg0);
        }
        
        /// <summary>
        /// String: 'TranGLC duplicate found. Posting process aborted to prevent duplicate posting. 
        ///Please contact customer support to request the fix program.'.
        /// </summary>
        internal static string TranGLCDupliFoundPostingProcessAbortedToPrevent
        {
            get
            {
                return GetString("TranGLCDupliFoundPostingProcessAbortedToPrevent");
            }
        }
        
        /// <summary>
        /// String: 'Unknown Book &apos;{0}&apos;'.
        /// </summary>
        internal static string UnknownBook(object arg0)
        {
            return GetString("UnknownBook", arg0);
        }
        
        /// <summary>
        /// String: '[Warning!] Rounding transaction line has been created for &lt;btxt&gt;{0}&lt;/btxt&gt;  book, Book Amount = &lt;btxt&gt;{1}&lt;/btxt&gt;.'.
        /// </summary>
        internal static string WarningRoundingMessage(object arg0, object arg1)
        {
            return GetString("WarningRoundingMessage", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Non-empty statistical code for zero statistical amount'.
        /// </summary>
        internal static string Zerostatisticalamount
        {
            get
            {
                return GetString("Zerostatisticalamount");
            }
        }
        
        /// <summary>
        /// String: 'Invalid validation rules data. Please run conversionID cvpe0001. &apos;Check Validation Rules for GL Books&apos;'.
        /// </summary>
        internal static string InvalidvalidationrulesdataPleaserunconversionID1180
        {
            get
            {
                return GetString("InvalidvalidationrulesdataPleaserunconversionID1180");
            }
        }
        
        /// <summary>
        /// String: 'Autocorrection logic for validation rule &apos;{0}&apos;  assigned 0 for closing period number.'.
        /// </summary>
        internal static string Autocorrectionlogicforvalidationrule(object arg0)
        {
            return GetString("Autocorrectionlogicforvalidationrule", arg0);
        }
        
        /// <summary>
        /// String: 'Autocorrection logic for validation rule &apos;{0}&apos;  failed. Unable to find ordinary period for JEDate {1}.'.
        /// </summary>
        internal static string Autocorrectionlogicforvalidationrulefailed(object arg0, object arg1)
        {
            return GetString("Autocorrectionlogicforvalidationrulefailed", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Transaction Line {0} - data &apos;{1}&apos; for UD field {2} ({3}({4})) was truncated.'.
        /// </summary>
        internal static string DataWasTrancatedForStringUDField(object arg0, object arg1, object arg2, object arg3, object arg4)
        {
            return GetString("DataWasTrancatedForStringUDField", arg0, arg1, arg2, arg3, arg4);
        }
        
        /// <summary>
        /// String: 'Transaction Line {0} - incorrect data &apos;{1}&apos; for UD field {2} ({3}): {4}.'.
        /// </summary>
        internal static string IncorrectDataForUDField(object arg0, object arg1, object arg2, object arg3, object arg4)
        {
            return GetString("IncorrectDataForUDField", arg0, arg1, arg2, arg3, arg4);
        }
        
        /// <summary>
        /// String: 'Field {0} has different data types or formats in GLJrnDtl ({1} : {2}) and RvJrnTrDtl ({3} : {4})'.
        /// </summary>
        internal static string IncorrectDataTypes(object arg0, object arg1, object arg2, object arg3, object arg4)
        {
            return GetString("IncorrectDataTypes", arg0, arg1, arg2, arg3, arg4);
        }
        
        /// <summary>
        /// String: '{0} table doesn&apos;t contain {1} UD field'.
        /// </summary>
        internal static string NoUDFieldInTable(object arg0, object arg1)
        {
            return GetString("NoUDFieldInTable", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Check UD Fields definitions and regenerate Data Model.'.
        /// </summary>
        internal static string NoUDFields
        {
            get
            {
                return GetString("NoUDFields");
            }
        }
        
        /// <summary>
        /// String: 'Required User Defined field is not populated. Line: {0}, Column name: {1}'.
        /// </summary>
        internal static string RequiredUserDefinedfieldisnotpopulated(object arg0, object arg1)
        {
            return GetString("RequiredUserDefinedfieldisnotpopulated", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Different settings of Required or Initial Value parameters between {0}.{1} and {2}.{1} fields.'.
        /// </summary>
        internal static string ThereAreDifferentSettingsRequiredInitialValue(object arg0, object arg1, object arg2)
        {
            return GetString("ThereAreDifferentSettingsRequiredInitialValue", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'There is no field {0} in table {1} in Data Model'.
        /// </summary>
        internal static string ThereIsNoFieldInTable(object arg0, object arg1)
        {
            return GetString("ThereIsNoFieldInTable", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Direct correspondence accounting type should have 2 lines only: Group: {0}.'.
        /// </summary>
        internal static string DirectCorrespondenceAccountingTypeShouldHaveTwoLinesOnly(object arg0)
        {
            return GetString("DirectCorrespondenceAccountingTypeShouldHaveTwoLinesOnly", arg0);
        }
        
        /// <summary>
        /// String: 'JournalNum {0}.'.
        /// </summary>
        internal static string JournalNum(object arg0)
        {
            return GetString("JournalNum", arg0);
        }
        
        /// <summary>
        /// String: 'Correspondence accounting group includes lines with type 0 only: Group: {0}.'.
        /// </summary>
        internal static string VNCorrespondenceAccountingGroupIncludesLinesWithZeroTypeOnly(object arg0)
        {
            return GetString("VNCorrespondenceAccountingGroupIncludesLinesWithZeroTypeOnly", arg0);
        }
        
        /// <summary>
        /// String: 'Correspondence accounting group includes more than 1 line with type 1: Group: {0}.'.
        /// </summary>
        internal static string VNCorrespondenceAccountingGroupIncludesMoreThanOneLineWithTypeOne(object arg0)
        {
            return GetString("VNCorrespondenceAccountingGroupIncludesMoreThanOneLineWithTypeOne", arg0);
        }
        
        /// <summary>
        /// String: 'Correspondence accounting group includes 1 line only: Group: {0}.'.
        /// </summary>
        internal static string VNCorrespondenceAccountingGroupIncludesOneLineOnly(object arg0)
        {
            return GetString("VNCorrespondenceAccountingGroupIncludesOneLineOnly", arg0);
        }
        
        /// <summary>
        /// String: 'Correspondence accounting type value should be 0, 1 or 2: Group: {0}.'.
        /// </summary>
        internal static string VNCorrespondenceAccountingTypeValueShouldBeZeroOneOrTwo(object arg0)
        {
            return GetString("VNCorrespondenceAccountingTypeValueShouldBeZeroOneOrTwo", arg0);
        }
        
        /// <summary>
        /// String: 'Mixture of direct and one-to-many correspondence accounting types is not allowed: Group: {0}.'.
        /// </summary>
        internal static string VNMixtureOfDirectAndOneToManyCorrespondenceAccountingTypesIsNotAllowed(object arg0)
        {
            return GetString("VNMixtureOfDirectAndOneToManyCorrespondenceAccountingTypesIsNotAllowed", arg0);
        }
        
        /// <summary>
        /// String: ' The reference code {0} is invalid for this account. COACode {1}. SegmentNumber {2}.'.
        /// </summary>
        internal static string ReferenceCodeInvalidForThisAccount(object arg0, object arg1, object arg2)
        {
            return GetString("ReferenceCodeInvalidForThisAccount", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: '{0} table is system and can not be used.'.
        /// </summary>
        internal static string RestrictedTable(object arg0)
        {
            return GetString("RestrictedTable", arg0);
        }
        
        /// <summary>
        /// String: 'You need to be authorized in the Site {0} in order to use accounts linked to this Site'.
        /// </summary>
        internal static string YouneedtobeauthorizedintheSite(object arg0)
        {
            return GetString("YouneedtobeauthorizedintheSite", arg0);
        }
        
        /// <summary>
        /// String: 'Inter-Site Balancing transaction'.
        /// </summary>
        internal static string InterSiteBalancingtransaction
        {
            get
            {
                return GetString("InterSiteBalancingtransaction");
            }
        }
    }
}
