<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Line" xml:space="preserve">
    <value>[Line {0}]:  </value>
  </data>
  <data name="Nonzerofinancialamountforastatisticalaccount" xml:space="preserve">
    <value>Non-zero financial amount for a statistical account</value>
  </data>
  <data name="Nonzerostatisticalamountfornonstatisticalaccount" xml:space="preserve">
    <value>Non-zero statistical amount for a non-statistical account</value>
  </data>
  <data name="NotEmptyStatisctialCode" xml:space="preserve">
    <value>Non-empty statistical code for non-statistical account</value>
  </data>
  <data name="NTransTypeRevisAbtUIDOldAb" xml:space="preserve">
    <value>Details:  Transaction Type {0}. AbtUID {1}. OldAbtUID {2}.</value>
  </data>
  <data name="ReferAccountValidError" xml:space="preserve">
    <value>Reference account validation error:</value>
  </data>
  <data name="ReferSegmentIsEmptyCOACodeSegmeHBuffCOACode" xml:space="preserve">
    <value> Reference segment is empty. COACode {0}. SegmentNumber {1}.</value>
  </data>
  <data name="ReferSegmentIsNotEmptyCOACodeSegmeHBuffCOACode" xml:space="preserve">
    <value> Reference segment is not empty.  COACode {0}. SegmentNumber {1}.</value>
  </data>
  <data name="StatisticalCodeWrong" xml:space="preserve">
    <value>Unknown statistical code '{0}'</value>
  </data>
  <data name="TranGLCDupliFoundPostingProcessAbortedToPrevent" xml:space="preserve">
    <value>TranGLC duplicate found. Posting process aborted to prevent duplicate posting. 
Please contact customer support to request the fix program.</value>
  </data>
  <data name="UnknownBook" xml:space="preserve">
    <value>Unknown Book '{0}'</value>
  </data>
  <data name="WarningRoundingMessage" xml:space="preserve">
    <value>[Warning!] Rounding transaction line has been created for &lt;btxt&gt;{0}&lt;/btxt&gt;  book, Book Amount = &lt;btxt&gt;{1}&lt;/btxt&gt;.</value>
  </data>
  <data name="Zerostatisticalamount" xml:space="preserve">
    <value>Non-empty statistical code for zero statistical amount</value>
  </data>
  <data name="InvalidvalidationrulesdataPleaserunconversionID1180" xml:space="preserve">
    <value>Invalid validation rules data. Please run conversionID cvpe0001. 'Check Validation Rules for GL Books'</value>
  </data>
  <data name="Autocorrectionlogicforvalidationrule" xml:space="preserve">
    <value>Autocorrection logic for validation rule '{0}'  assigned 0 for closing period number.</value>
  </data>
  <data name="Autocorrectionlogicforvalidationrulefailed" xml:space="preserve">
    <value>Autocorrection logic for validation rule '{0}'  failed. Unable to find ordinary period for JEDate {1}.</value>
  </data>
  <data name="DataWasTrancatedForStringUDField" xml:space="preserve">
    <value>Transaction Line {0} - data '{1}' for UD field {2} ({3}({4})) was truncated.</value>
  </data>
  <data name="IncorrectDataForUDField" xml:space="preserve">
    <value>Transaction Line {0} - incorrect data '{1}' for UD field {2} ({3}): {4}.</value>
  </data>
  <data name="IncorrectDataTypes" xml:space="preserve">
    <value>Field {0} has different data types or formats in GLJrnDtl ({1} : {2}) and RvJrnTrDtl ({3} : {4})</value>
  </data>
  <data name="NoUDFieldInTable" xml:space="preserve">
    <value>{0} table doesn't contain {1} UD field</value>
  </data>
  <data name="NoUDFields" xml:space="preserve">
    <value>Check UD Fields definitions and regenerate Data Model.</value>
  </data>
  <data name="RequiredUserDefinedfieldisnotpopulated" xml:space="preserve">
    <value>Required User Defined field is not populated. Line: {0}, Column name: {1}</value>
  </data>
  <data name="ThereAreDifferentSettingsRequiredInitialValue" xml:space="preserve">
    <value>Different settings of Required or Initial Value parameters between {0}.{1} and {2}.{1} fields.</value>
  </data>
  <data name="ThereIsNoFieldInTable" xml:space="preserve">
    <value>There is no field {0} in table {1} in Data Model</value>
  </data>
  <data name="DirectCorrespondenceAccountingTypeShouldHaveTwoLinesOnly" xml:space="preserve">
    <value>Direct correspondence accounting type should have 2 lines only: Group: {0}.</value>
  </data>
  <data name="JournalNum" xml:space="preserve">
    <value>JournalNum {0}.</value>
  </data>
  <data name="VNCorrespondenceAccountingGroupIncludesLinesWithZeroTypeOnly" xml:space="preserve">
    <value>Correspondence accounting group includes lines with type 0 only: Group: {0}.</value>
  </data>
  <data name="VNCorrespondenceAccountingGroupIncludesMoreThanOneLineWithTypeOne" xml:space="preserve">
    <value>Correspondence accounting group includes more than 1 line with type 1: Group: {0}.</value>
  </data>
  <data name="VNCorrespondenceAccountingGroupIncludesOneLineOnly" xml:space="preserve">
    <value>Correspondence accounting group includes 1 line only: Group: {0}.</value>
  </data>
  <data name="VNCorrespondenceAccountingTypeValueShouldBeZeroOneOrTwo" xml:space="preserve">
    <value>Correspondence accounting type value should be 0, 1 or 2: Group: {0}.</value>
  </data>
  <data name="VNMixtureOfDirectAndOneToManyCorrespondenceAccountingTypesIsNotAllowed" xml:space="preserve">
    <value>Mixture of direct and one-to-many correspondence accounting types is not allowed: Group: {0}.</value>
  </data>
  <data name="ReferenceCodeInvalidForThisAccount" xml:space="preserve">
    <value> The reference code {0} is invalid for this account. COACode {1}. SegmentNumber {2}.</value>
  </data>
  <data name="RestrictedTable" xml:space="preserve">
    <value>{0} table is system and can not be used.</value>
  </data>
  <data name="YouneedtobeauthorizedintheSite" xml:space="preserve">
    <value>You need to be authorized in the Site {0} in order to use accounts linked to this Site</value>
  </data>
  <data name="InterSiteBalancingtransaction" xml:space="preserve">
    <value>Inter-Site Balancing transaction</value>
  </data>
</root>