//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//
//     Changes to this file will be lost when regenerated
// </autogenerated>
//------------------------------------------------------------------------------

#pragma warning disable CS1572
#pragma warning disable CS1573
#pragma warning disable CS1591
#pragma warning disable CS1734

using Epicor.Cloud;
using Erp.Contracts;
using Erp.Models.BO.APInvoice;
using Erp.Tablesets;
using Ice.Hosting.AspNetCore.Controller;
using Microsoft.AspNetCore.Mvc;

namespace Erp.Controllers.BO
{
    /// <summary>
    /// ASP.NET Core API controller for the Erp.BO.APInvoice service.
    /// </summary>
    [Route("api/rpc/Erp.BO.[controller]")]
    [ApiController]
    public class APInvoiceController : ApiControllerBase
    {
        #region Initialize

        private APInvoiceSvcContract ___service;

        /// <summary>
        /// Initializes a new instance of the <see cref="APInvoiceController"/> class.
        /// </summary>
        public APInvoiceController(IOperationBoundClassProvider<APInvoiceSvcContract> provider) : base(provider.ServiceAsOperationBoundClass)
        {
            this.___service = provider.Service;
        }

        #endregion

        /// <summary>
        /// Find Group Id for invoice. For Locate INv. group form.
        /// </summary>
        [Route("InvokeLocateGroupID")]
        [HttpPost]
        public InvokeLocateGroupID_OutputModel InvokeLocateGroupID(InvokeLocateGroupID_InputModel model)
        {
            string outLocGrpVendorID;
            string GroupID;

            ___service.InvokeLocateGroupID(model.IpLocGrpInvoiceNum, model.IpLocGrpVendorID, out outLocGrpVendorID, out GroupID);

            return new InvokeLocateGroupID_OutputModel
            {
                OutLocGrpVendorID = outLocGrpVendorID,
                GroupID = GroupID
            };
        }

        /// <summary>
        /// Transfer Selected AP Invoices between groups.
        /// </summary>
        [Route("TransferAPInvoices")]
        [HttpPost]
        public TransferAPInvoices_OutputModel TransferAPInvoices(TransferAPInvoices_InputModel model)
        {
            string grpNotFound;

            ___service.TransferAPInvoices(model.TransferGroupID, model.CurrentGroupID, ref model.Ds, out grpNotFound);

            return new TransferAPInvoices_OutputModel
            {
                Ds = model.Ds,
                GrpNotFound = grpNotFound
            };
        }

        /// <summary>
        /// Validate Invoice Number - find an invoice by number or inform that the number is incorrect (for the Create Cancellation Invoice form).
        /// </summary>
        [Route("ValidateOriginalInvoice")]
        [HttpPost]
        public ValidateOriginalInvoice_OutputModel ValidateOriginalInvoice(ValidateOriginalInvoice_InputModel model)
        {
            int opVendorNum;
            bool opMultipleInvcsFound;

            ___service.ValidateOriginalInvoice(model.IpInvoiceNum, out opVendorNum, out opMultipleInvcsFound);

            return new ValidateOriginalInvoice_OutputModel
            {
                OpVendorNum = opVendorNum,
                OpMultipleInvcsFound = opMultipleInvcsFound
            };
        }

        /// <summary>
        /// Set rowMods before Uninvoiced Rcpt Lines Selection
        /// </summary>
        [Route("SelectUninvoicedRcptLines_AdditionalActions")]
        [HttpPost]
        public SelectUninvoicedRcptLines_AdditionalActions_OutputModel SelectUninvoicedRcptLines_AdditionalActions(SelectUninvoicedRcptLines_AdditionalActions_InputModel model)
        {
            ___service.SelectUninvoicedRcptLines_AdditionalActions(ref model.Ds, model.InVendorNum, model.InPurPoint, model.InPONum, model.InPackSlip, model.InDropShip, model.InvoiceNum, model.InGRNIClearing);

            return new SelectUninvoicedRcptLines_AdditionalActions_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Set RowMods before Deselect Selected Rcpt Lines
        /// </summary>
        [Route("DeselectSelectedRcptLines_AdditionalActions")]
        [HttpPost]
        public DeselectSelectedRcptLines_AdditionalActions_OutputModel DeselectSelectedRcptLines_AdditionalActions(DeselectSelectedRcptLines_AdditionalActions_InputModel model)
        {
            ___service.DeselectSelectedRcptLines_AdditionalActions(ref model.Ds, model.VendorNum, model.PurPoint, model.PackSlip, model.IsDropShip, model.InvoiceNum, model.IPONum);

            return new DeselectSelectedRcptLines_AdditionalActions_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Invoke InvoiceSelectedLines with additional actions.
        /// </summary>
        [Route("InvokeInvoiceSelectedLines")]
        [HttpPost]
        public InvokeInvoiceSelectedLines_OutputModel InvokeInvoiceSelectedLines(InvokeInvoiceSelectedLines_InputModel model)
        {
            string opLOCMsg;

            ___service.InvokeInvoiceSelectedLines(ref model.Ds, out opLOCMsg);

            return new InvokeInvoiceSelectedLines_OutputModel
            {
                Ds = model.Ds,
                OpLOCMsg = opLOCMsg
            };
        }

        /// <summary>
        /// Method to call when adding a po miscellaneous charge to an ap invoice line.
        /// </summary>
        [Route("AddPOMiscChrgToInvoiceHead")]
        [HttpPost]
        public AddPOMiscChrgToInvoiceHead_OutputModel AddPOMiscChrgToInvoiceHead(AddPOMiscChrgToInvoiceHead_InputModel model)
        {
            ___service.AddPOMiscChrgToInvoiceHead(model.InvHedVendorNum, model.InvHedInvoiceNum, model.PoMiscMiscCode, model.PoMiscPONum, model.PoMiscSeqNum, ref model.Ds);

            return new AddPOMiscChrgToInvoiceHead_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a po miscellaneous charge to an ap invoice line.
        /// </summary>
        [Route("AddPOMiscChrgToInvoiceLine")]
        [HttpPost]
        public AddPOMiscChrgToInvoiceLine_OutputModel AddPOMiscChrgToInvoiceLine(AddPOMiscChrgToInvoiceLine_InputModel model)
        {
            ___service.AddPOMiscChrgToInvoiceLine(model.InvDtlVendorNum, model.InvDtlInvoiceNum, model.InvDtlInvoiceLine, model.POMiscPOLine, model.POMiscSeqNum, ref model.Ds);

            return new AddPOMiscChrgToInvoiceLine_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to allocate late cost.
        /// </summary>
        [Route("AllocateLateCost")]
        [HttpPost]
        public AllocateLateCost_OutputModel AllocateLateCost(AllocateLateCost_InputModel model)
        {
            ___service.AllocateLateCost(ref model.Ds);

            return new AllocateLateCost_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Optimized method to retrieve large number of APInvHed Records.
        /// </summary>
        [Route("GetRowsForTracker")]
        [HttpPost]
        public GetRowsForTracker_OutputModel GetRowsForTracker(GetRowsForTracker_InputModel model)
        {
            var ___result = ___service.GetRowsForTracker(model.Vendnum, model.All, model.Open, model.FromDays, model.InRange);

            return new GetRowsForTracker_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Optimized method to retrieve large number of APInvHed Records.
        /// </summary>
        [Route("GetRowsForTrackerSite")]
        [HttpPost]
        public GetRowsForTrackerSite_OutputModel GetRowsForTrackerSite(GetRowsForTrackerSite_InputModel model)
        {
            var ___result = ___service.GetRowsForTrackerSite(model.Vendnum, model.All, model.Open, model.FromDays, model.InRange, model.Plant);

            return new GetRowsForTrackerSite_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        ///
        /// </summary>
        [Route("GetSiteIsLegalEntity")]
        [HttpPost]
        public GetSiteIsLegalEntity_OutputModel GetSiteIsLegalEntity()
        {
            var ___result = ___service.GetSiteIsLegalEntity();

            return new GetSiteIsLegalEntity_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Assigns a legal number to the invoice.
        /// </summary>
        [Route("AssignLegalNumber")]
        [HttpPost]
        public AssignLegalNumber_OutputModel AssignLegalNumber(AssignLegalNumber_InputModel model)
        {
            string opLegalNumMsg;

            ___service.AssignLegalNumber(model.InGroupID, model.InVendor, model.InInvNum, out opLegalNumMsg, ref model.Ds);

            return new AssignLegalNumber_OutputModel
            {
                OpLegalNumMsg = opLegalNumMsg,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Calculate IFRS Present Value
        /// </summary>
        [Route("CalculateCOIFRS_PV")]
        [HttpPost]
        public CalculateCOIFRS_PV_OutputModel CalculateCOIFRS_PV(CalculateCOIFRS_PV_InputModel model)
        {
            ___service.CalculateCOIFRS_PV(model.VendorNum, model.InvoiceNum, ref model.Ds);

            return new CalculateCOIFRS_PV_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Calculate IFRS Present Value
        /// </summary>
        [Route("Update_ttAPInvHed")]
        [HttpPost]
        public Update_ttAPInvHed_OutputModel Update_ttAPInvHed(Update_ttAPInvHed_InputModel model)
        {
            ___service.Update_ttAPInvHed(model.VendorNum, model.InvoiceNum, ref model.Ds);

            return new Update_ttAPInvHed_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to update Amount values in the APInvSched record and update last APInvSched record when it's needed.
        /// </summary>
        [Route("ChangeAPInvSchedPercent")]
        [HttpPost]
        public ChangeAPInvSchedPercent_OutputModel ChangeAPInvSchedPercent(ChangeAPInvSchedPercent_InputModel model)
        {
            ___service.ChangeAPInvSchedPercent(model.PaySeqEdited, ref model.Ts);

            return new ChangeAPInvSchedPercent_OutputModel
            {
                Ts = model.Ts
            };
        }

        /// <summary>
        /// Method to update Precent value in the APInvSched record and update last APInvSched record when it's needed.
        /// </summary>
        [Route("ChangeAPInvSchedAmount")]
        [HttpPost]
        public ChangeAPInvSchedAmount_OutputModel ChangeAPInvSchedAmount(ChangeAPInvSchedAmount_InputModel model)
        {
            ___service.ChangeAPInvSchedAmount(model.PaySeqEdited, ref model.Ts);

            return new ChangeAPInvSchedAmount_OutputModel
            {
                Ts = model.Ts
            };
        }

        /// <summary>
        /// Method to update DueDate value in the APInvSched record and update following APInvSched records when it's needed.
        /// </summary>
        [Route("ChangeAPInvSchedDays")]
        [HttpPost]
        public ChangeAPInvSchedDays_OutputModel ChangeAPInvSchedDays(ChangeAPInvSchedDays_InputModel model)
        {
            ___service.ChangeAPInvSchedDays(model.PaySeqEdited, ref model.Ts);

            return new ChangeAPInvSchedDays_OutputModel
            {
                Ts = model.Ts
            };
        }

        /// <summary>
        /// Method to update PayDays value in the APInvSched record and update following APInvSched records when it's needed.
        /// </summary>
        [Route("ChangeAPInvSchedDueDate")]
        [HttpPost]
        public ChangeAPInvSchedDueDate_OutputModel ChangeAPInvSchedDueDate(ChangeAPInvSchedDueDate_InputModel model)
        {
            ___service.ChangeAPInvSchedDueDate(model.PaySeqEdited, ref model.Ts);

            return new ChangeAPInvSchedDueDate_OutputModel
            {
                Ts = model.Ts
            };
        }

        /// <summary>
        /// Method to call when changing the adjustment value on the invoice detail.
        /// It is used only for correction invoice in adjustment line.
        /// </summary>
        [Route("ChangeAdjustmentValue")]
        [HttpPost]
        public ChangeAdjustmentValue_OutputModel ChangeAdjustmentValue(ChangeAdjustmentValue_InputModel model)
        {
            ___service.ChangeAdjustmentValue(model.ProposedValue, ref model.Ds);

            return new ChangeAdjustmentValue_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the advance pay amount on the invoice detail.  Updates APInvDtl
        /// with default values based on the new pay amount.
        /// </summary>
        [Route("ChangeAdvancePayAmt")]
        [HttpPost]
        public ChangeAdvancePayAmt_OutputModel ChangeAdvancePayAmt(ChangeAdvancePayAmt_InputModel model)
        {
            ___service.ChangeAdvancePayAmt(model.ProposedAdvancePayAmt, ref model.Ds);

            return new ChangeAdvancePayAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the assembly sequence on the job miscellaneous charge.
        /// Validates the assembly sequence and updates APInvJob with values from the new assembly sequence.
        /// </summary>
        [Route("ChangeAssemblySeq")]
        [HttpPost]
        public ChangeAssemblySeq_OutputModel ChangeAssemblySeq(ChangeAssemblySeq_InputModel model)
        {
            ___service.ChangeAssemblySeq(model.ProposedAssemblySeq, ref model.Ds);

            return new ChangeAssemblySeq_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the cost per code on the invoice detail.  Updates APInvDtl
        /// with default values based on the new code.
        /// </summary>
        [Route("ChangeCostPerCode")]
        [HttpPost]
        public ChangeCostPerCode_OutputModel ChangeCostPerCode(ChangeCostPerCode_InputModel model)
        {
            ___service.ChangeCostPerCode(model.ProposedCostPerCode, ref model.Ds);

            return new ChangeCostPerCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the currency on the invoice.  Validates the currency code and
        /// updates APInvHed with default values based on the currency.
        /// </summary>
        [Route("ChangeCurrency")]
        [HttpPost]
        public ChangeCurrency_OutputModel ChangeCurrency(ChangeCurrency_InputModel model)
        {
            ___service.ChangeCurrency(model.ProposedCurrencyCode, ref model.Ds);

            return new ChangeCurrency_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the currency on the invoice.  Validates the currency code and
        /// updates APInvHed with default values based on the currency.
        /// </summary>
        [Route("ChangeCurrencyMaster")]
        [HttpPost]
        public ChangeCurrencyMaster_OutputModel ChangeCurrencyMaster(ChangeCurrencyMaster_InputModel model)
        {
            System.Decimal vExchangeRate;
            string vXRateLabel;

            ___service.ChangeCurrencyMaster(model.ProposedCurrencyCode, model.VRateGrpCode, out vExchangeRate, out vXRateLabel, ref model.Ds);

            return new ChangeCurrencyMaster_OutputModel
            {
                VExchangeRate = vExchangeRate,
                VXRateLabel = vXRateLabel,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method recalculates base/document and report currencies amount of Header
        /// GL Expence distribution amount changed by the user
        /// </summary>
        [Route("ChangeExpHeaderAmt")]
        [HttpPost]
        public ChangeExpHeaderAmt_OutputModel ChangeExpHeaderAmt(ChangeExpHeaderAmt_InputModel model)
        {
            ___service.ChangeExpHeaderAmt(model.ProposedAmt, ref model.Ds);

            return new ChangeExpHeaderAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method recalculates base/document and report currencies amount of Line
        /// GL Expence distribution amount changed by the user
        /// </summary>
        [Route("ChangeExpLineAmt")]
        [HttpPost]
        public ChangeExpLineAmt_OutputModel ChangeExpLineAmt(ChangeExpLineAmt_InputModel model)
        {
            ___service.ChangeExpLineAmt(model.ProposedAmt, ref model.Ds);

            return new ChangeExpLineAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Returns a serialized json string to show a Relationship Map for AP Invoice
        /// </summary>
        [Route("GetAPInvoiceRelationshipMap")]
        [HttpPost]
        public GetAPInvoiceRelationshipMap_OutputModel GetAPInvoiceRelationshipMap(GetAPInvoiceRelationshipMap_InputModel model)
        {
            var ___result = ___service.GetAPInvoiceRelationshipMap(model.VendorNum, model.InvoiceNum, model.MaxNumOfCards);

            return new GetAPInvoiceRelationshipMap_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// This method gets the GL Account Description from the GLAcctDisp Table
        /// </summary>
        [Route("GetGLAccountDesc")]
        [HttpPost]
        public GetGLAccountDesc_OutputModel GetGLAccountDesc(GetGLAccountDesc_InputModel model)
        {
            var ___result = ___service.GetGLAccountDesc(model.Company, model.COACode, model.GLAcctDisp);

            return new GetGLAccountDesc_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// This method gets the Global GL Account Description from the GLBGLAcctDisp Table
        /// </summary>
        [Route("GetGBLGLAccountDesc")]
        [HttpPost]
        public GetGBLGLAccountDesc_OutputModel GetGBLGLAccountDesc(GetGBLGLAccountDesc_InputModel model)
        {
            var ___result = ___service.GetGBLGLAccountDesc(model.IpCompany, model.IpExtCompany, model.IpCOACode, model.IpGLAccount);

            return new GetGBLGLAccountDesc_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// This method resets the regular Expense and Multi-Company G/L Accounts and the
        /// Reference Codes when the External Company ID changes.  This should only be called
        /// when updating APInvExp and not the APIHAPInvExp.
        /// </summary>
        [Route("ChangeExtCompanyID")]
        [HttpPost]
        public ChangeExtCompanyID_OutputModel ChangeExtCompanyID(ChangeExtCompanyID_InputModel model)
        {
            ___service.ChangeExtCompanyID(model.ProposedExtCompID, ref model.Ds);

            return new ChangeExtCompanyID_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the ext cost on the invoice detail.  Validates the
        /// ext cost and updates APInvDtl with default values based on the new cost.
        /// </summary>
        [Route("ChangeExtCost")]
        [HttpPost]
        public ChangeExtCost_OutputModel ChangeExtCost(ChangeExtCost_InputModel model)
        {
            ___service.ChangeExtCost(model.ProposedExtCost, ref model.Ds);

            return new ChangeExtCost_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the fixed amount on a tax record.  Updates APInvTax
        /// tax amounts based on the new fixed amount.
        /// </summary>
        [Route("ChangeFixedAmount")]
        [HttpPost]
        public ChangeFixedAmount_OutputModel ChangeFixedAmount(ChangeFixedAmount_InputModel model)
        {
            ___service.ChangeFixedAmount(model.ProposedFixedAmt, ref model.Ds);

            return new ChangeFixedAmount_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the fixed amount on a header tax record.  Updates APInvHedMscTax
        /// tax amounts based on the new fixed amount.
        /// </summary>
        [Route("ChangeFixedHedMscAmount")]
        [HttpPost]
        public ChangeFixedHedMscAmount_OutputModel ChangeFixedHedMscAmount(ChangeFixedHedMscAmount_InputModel model)
        {
            ___service.ChangeFixedHedMscAmount(model.ProposedFixedAmt, ref model.Ds);

            return new ChangeFixedHedMscAmount_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the fixed amount on a line tax record.  Updates APLnTax
        /// tax amounts based on the new fixed amount.
        /// </summary>
        [Route("ChangeFixedLineAmount")]
        [HttpPost]
        public ChangeFixedLineAmount_OutputModel ChangeFixedLineAmount(ChangeFixedLineAmount_InputModel model)
        {
            ___service.ChangeFixedLineAmount(model.ProposedFixedAmt, ref model.Ds);

            return new ChangeFixedLineAmount_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the fixed amount on a line tax record.  Updates APInvLnMscTax
        /// tax amounts based on the new fixed amount.
        /// </summary>
        [Route("ChangeFixedLnMscAmount")]
        [HttpPost]
        public ChangeFixedLnMscAmount_OutputModel ChangeFixedLnMscAmount(ChangeFixedLnMscAmount_InputModel model)
        {
            ___service.ChangeFixedLnMscAmount(model.ProposedFixedAmt, ref model.Ds);

            return new ChangeFixedLnMscAmount_OutputModel
            {
                Ds = model.Ds
            };
        }

        ///
        /// <summary>
        /// Method to call when changing the Tax Basis Amount - Taiwan Localization on an invoice record.  Updates APInvHed
        /// amounts based on the new invoice vendor amount.
        /// </summary>
        [Route("ChangeGUITaxBasisAmt")]
        [HttpPost]
        public ChangeGUITaxBasisAmt_OutputModel ChangeGUITaxBasisAmt(ChangeGUITaxBasisAmt_InputModel model)
        {
            ___service.ChangeGUITaxBasisAmt(model.ProposedGUITaxBasisAmt, ref model.Ds);

            return new ChangeGUITaxBasisAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the invoice date on the invoice.  Updates APInvHed
        /// with default values based on the new date.
        /// </summary>
        [Route("ChangeInvoiceDate")]
        [HttpPost]
        public ChangeInvoiceDate_OutputModel ChangeInvoiceDate(ChangeInvoiceDate_InputModel model)
        {
            ___service.ChangeInvoiceDate(model.ProposedInvoiceDate, model.RecalcAmts, ref model.Ds);

            return new ChangeInvoiceDate_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the invoice date on the invoice.  Updates APInvHed
        /// with default values based on the new date.
        /// </summary>
        [Route("ChangeInvoiceDateEx")]
        [HttpPost]
        public ChangeInvoiceDateEx_OutputModel ChangeInvoiceDateEx(ChangeInvoiceDateEx_InputModel model)
        {
            string cMessageText;

            ___service.ChangeInvoiceDateEx(model.ProposedInvoiceDate, model.RecalcAmts, out cMessageText, ref model.Ds);

            return new ChangeInvoiceDateEx_OutputModel
            {
                CMessageText = cMessageText,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the invoice date on the invoice.  Updates APInvHed
        /// with default values based on the new date.
        /// This method will additionally return a message to present to the user if the date is greater than
        /// the client today date.
        /// </summary>
        [Route("ChangeInvoiceDateWithDateCheck")]
        [HttpPost]
        public ChangeInvoiceDateWithDateCheck_OutputModel ChangeInvoiceDateWithDateCheck(ChangeInvoiceDateWithDateCheck_InputModel model)
        {
            string cMessageText;
            string DateMessage;

            ___service.ChangeInvoiceDateWithDateCheck(model.ProposedInvoiceDate, model.RecalcAmts, out cMessageText, out DateMessage, ref model.Ds);

            return new ChangeInvoiceDateWithDateCheck_OutputModel
            {
                CMessageText = cMessageText,
                DateMessage = DateMessage,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the Due date on the invoice.
        /// </summary>
        [Route("ChangeDueDate")]
        [HttpPost]
        public ChangeDueDate_OutputModel ChangeDueDate(ChangeDueDate_InputModel model)
        {
            ___service.ChangeDueDate(model.ProposedDueDate, ref model.Ds);

            return new ChangeDueDate_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the Purchase Point on the invoice.
        /// </summary>
        [Route("ChangeInvoicePurPoint")]
        [HttpPost]
        public ChangeInvoicePurPoint_OutputModel ChangeInvoicePurPoint(ChangeInvoicePurPoint_InputModel model)
        {
            ___service.ChangeInvoicePurPoint(model.PurPoint, ref model.Ds);

            return new ChangeInvoicePurPoint_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the invoice reference.  Validates the
        /// invoice reference number id and updates APInvHed with values from the new invoice reference.
        /// </summary>
        [Route("ChangeInvoiceRef")]
        [HttpPost]
        public ChangeInvoiceRef_OutputModel ChangeInvoiceRef(ChangeInvoiceRef_InputModel model)
        {
            ___service.ChangeInvoiceRef(model.ProposedInvoiceRef, ref model.Ds);

            return new ChangeInvoiceRef_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the invoice vendor amount on an invoice record.  Updates APInvHed
        /// amounts based on the new invoice vendor amount.
        /// </summary>
        [Route("ChangeInvoiceVendorAmt")]
        [HttpPost]
        public ChangeInvoiceVendorAmt_OutputModel ChangeInvoiceVendorAmt(ChangeInvoiceVendorAmt_InputModel model)
        {
            ___service.ChangeInvoiceVendorAmt(model.ProposedInvoiceVendorAmt, ref model.Ds);

            return new ChangeInvoiceVendorAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// Purpose:
        /// Parameters:  none
        /// Notes:
        /// /// <summary>
        /// /// </summary>
        [Route("ChangeJobMiscCode")]
        [HttpPost]
        public ChangeJobMiscCode_OutputModel ChangeJobMiscCode(ChangeJobMiscCode_InputModel model)
        {
            ___service.ChangeJobMiscCode(model.ProposedJobMisc, ref model.Ds);

            return new ChangeJobMiscCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the projectID.  Updates APInvJob
        ///
        /// </summary>
        [Route("ChangeJobMiscProject")]
        [HttpPost]
        public ChangeJobMiscProject_OutputModel ChangeJobMiscProject(ChangeJobMiscProject_InputModel model)
        {
            ___service.ChangeJobMiscProject(model.PropProject, ref model.Ds);

            return new ChangeJobMiscProject_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the job number on the job miscellaneous charge.
        /// Validates the job number and updates APInvJob with values from the new job.
        /// </summary>
        [Route("ChangeJobNum")]
        [HttpPost]
        public ChangeJobNum_OutputModel ChangeJobNum(ChangeJobNum_InputModel model)
        {
            ___service.ChangeJobNum(model.ProposedJobNum, ref model.Ds);

            return new ChangeJobNum_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the discount amount on the invoice detail.  Updates APInvDtl
        /// with default values based on the new discount amount.
        /// </summary>
        [Route("ChangeLineDiscAmt")]
        [HttpPost]
        public ChangeLineDiscAmt_OutputModel ChangeLineDiscAmt(ChangeLineDiscAmt_InputModel model)
        {
            ___service.ChangeLineDiscAmt(model.ProposedLineDiscAmt, ref model.Ds);

            return new ChangeLineDiscAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the LOC ID on the invoice.  Validates the LOC ID and
        /// updates APInvHed with default values based on the new code.
        /// </summary>
        [Route("ChangeLOCID")]
        [HttpPost]
        public ChangeLOCID_OutputModel ChangeLOCID(ChangeLOCID_InputModel model)
        {
            string outMsg;
            string outTermsDiff;
            string outLocTerms;

            ___service.ChangeLOCID(model.ProposedLOCID, out outMsg, out outTermsDiff, out outLocTerms, ref model.Ds);

            return new ChangeLOCID_OutputModel
            {
                OutMsg = outMsg,
                OutTermsDiff = outTermsDiff,
                OutLocTerms = outLocTerms,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the LOC ID on Posted AP Invoice Maintenance EXCLUSIVE.
        /// Validates the proposed LOC ID vs Vendor and Currency, then updates APInvHed
        /// with default values based on the new code.
        /// </summary>
        [Route("ChangeLOCIDInvPosted")]
        [HttpPost]
        public ChangeLOCIDInvPosted_OutputModel ChangeLOCIDInvPosted(ChangeLOCIDInvPosted_InputModel model)
        {
            ___service.ChangeLOCIDInvPosted(model.ProposedLOCID, ref model.Ds);

            return new ChangeLOCIDInvPosted_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the lock rate flag on the invoice.  Updates
        /// APInvHed.EnableExchangeRate field.
        /// </summary>
        [Route("ChangeLockRate")]
        [HttpPost]
        public ChangeLockRate_OutputModel ChangeLockRate(ChangeLockRate_InputModel model)
        {
            ___service.ChangeLockRate(ref model.Ds);

            return new ChangeLockRate_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the manual tax calculation value on a tax record.  Updates APInvTax
        /// tax amounts based on the new value of the flag.
        /// </summary>
        [Route("ChangeManualTaxCalculation")]
        [HttpPost]
        public ChangeManualTaxCalculation_OutputModel ChangeManualTaxCalculation(ChangeManualTaxCalculation_InputModel model)
        {
            ___service.ChangeManualTaxCalculation(ref model.Ds);

            return new ChangeManualTaxCalculation_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the manual tax calculation value on a header misc charge tax record.  Updates APInvHedMscTax
        /// tax amounts based on the new value of the flag back to system-calculated tax.
        /// </summary>
        [Route("ChangeManualTaxHedMscCalculation")]
        [HttpPost]
        public ChangeManualTaxHedMscCalculation_OutputModel ChangeManualTaxHedMscCalculation(ChangeManualTaxHedMscCalculation_InputModel model)
        {
            ___service.ChangeManualTaxHedMscCalculation(ref model.Ds);

            return new ChangeManualTaxHedMscCalculation_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the manual tax calculation value on a line tax record.  Updates APLnTax
        /// tax amounts based on the new value of the flag back to system-calculated tax.
        /// </summary>
        [Route("ChangeManualTaxLineCalculation")]
        [HttpPost]
        public ChangeManualTaxLineCalculation_OutputModel ChangeManualTaxLineCalculation(ChangeManualTaxLineCalculation_InputModel model)
        {
            ___service.ChangeManualTaxLineCalculation(ref model.Ds);

            return new ChangeManualTaxLineCalculation_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the manual tax calculation value on a line misc charge tax record.  Updates APInvLnMscTax
        /// tax amounts based on the new value of the flag back to system-calculated tax.
        /// </summary>
        [Route("ChangeManualTaxLnMscCalculation")]
        [HttpPost]
        public ChangeManualTaxLnMscCalculation_OutputModel ChangeManualTaxLnMscCalculation(ChangeManualTaxLnMscCalculation_InputModel model)
        {
            ___service.ChangeManualTaxLnMscCalculation(ref model.Ds);

            return new ChangeManualTaxLnMscCalculation_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the miscellanous amount on a miscellaneous charge.  This method
        /// can be called for both the APInvMsc table and APIHAPInvMsc table.
        /// Updates the respective miscellanous charge table with default values based on the new amount.
        /// </summary>
        [Route("ChangeMiscAmt")]
        [HttpPost]
        public ChangeMiscAmt_OutputModel ChangeMiscAmt(ChangeMiscAmt_InputModel model)
        {
            ___service.ChangeMiscAmt(model.ProposedMiscAmt, model.TableName, ref model.Ds);

            return new ChangeMiscAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the miscellanous code on a miscellaneous charge.  This method
        /// can be called for both the APInvMsc table and APIHAPInvMsc table.  Validates the code and
        /// updates the respective miscellanous charge table with default values based on the new code.
        /// </summary>
        [Route("ChangeMiscCode")]
        [HttpPost]
        public ChangeMiscCode_OutputModel ChangeMiscCode(ChangeMiscCode_InputModel model)
        {
            ___service.ChangeMiscCode(model.ProposedMiscCode, model.TableName, ref model.Ds);

            return new ChangeMiscCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the LCFLag on a miscellaneous charge.  This method
        /// can be called for both the APInvMsc table and APIHAPInvMsc table.  Validates the
        /// code if can be flagged as Landed Cost Charge.
        /// </summary>
        [Route("ChangeMiscLCFlag")]
        [HttpPost]
        public ChangeMiscLCFlag_OutputModel ChangeMiscLCFlag(ChangeMiscLCFlag_InputModel model)
        {
            ___service.ChangeMiscLCFlag(model.IpLCFlag, model.TableName, ref model.Ds);

            return new ChangeMiscLCFlag_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to change 1099 Code on AP Invoice Line, displays the correct description.
        /// </summary>
        [Route("Change1099Code")]
        [HttpPost]
        public Change1099Code_OutputModel Change1099Code(Change1099Code_InputModel model)
        {
            ___service.Change1099Code(model.FormTypeID, model.ProposedCode1099ID, ref model.Ds);

            return new Change1099Code_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to change 1099 Code on AP Invoice Header Misc Charge, displays the correct description.
        /// </summary>
        [Route("ChangeAPIHAPInvMsc1099Code")]
        [HttpPost]
        public ChangeAPIHAPInvMsc1099Code_OutputModel ChangeAPIHAPInvMsc1099Code(ChangeAPIHAPInvMsc1099Code_InputModel model)
        {
            ___service.ChangeAPIHAPInvMsc1099Code(model.FormTypeID, model.ProposedCode1099ID, ref model.Ds);

            return new ChangeAPIHAPInvMsc1099Code_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to change 1099 Form Type on AP Invoice Line, displays the correct description.
        /// </summary>
        [Route("ChangeFormType")]
        [HttpPost]
        public ChangeFormType_OutputModel ChangeFormType(ChangeFormType_InputModel model)
        {
            ___service.ChangeFormType(model.FormType, ref model.Ds);

            return new ChangeFormType_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to change 1099 Form Type on AP Invoice Header Misc Charge, displays the correct description.
        /// </summary>
        [Route("ChangeAPIHAPInvMscFormType")]
        [HttpPost]
        public ChangeAPIHAPInvMscFormType_OutputModel ChangeAPIHAPInvMscFormType(ChangeAPIHAPInvMscFormType_InputModel model)
        {
            ___service.ChangeAPIHAPInvMscFormType(model.FormType, ref model.Ds);

            return new ChangeAPIHAPInvMscFormType_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method recalculates Misc Charges Amounts when Percentage was changed.
        /// </summary>
        [Route("ChangeMiscPercent")]
        [HttpPost]
        public ChangeMiscPercent_OutputModel ChangeMiscPercent(ChangeMiscPercent_InputModel model)
        {
            ___service.ChangeMiscPercent(model.ProposedPrcnt, model.TableName, ref model.Ds);

            return new ChangeMiscPercent_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the material sequence on the job miscellaneous charge.
        /// Validates the material sequence and updates APInvJob with values from the new material sequence.
        /// </summary>
        [Route("ChangeMtlSeq")]
        [HttpPost]
        public ChangeMtlSeq_OutputModel ChangeMtlSeq(ChangeMtlSeq_InputModel model)
        {
            ___service.ChangeMtlSeq(model.ProposedMtlSeq, ref model.Ds);

            return new ChangeMtlSeq_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method resets the External Company ID, regular and Multi-Company G/L Accounts
        /// and the Reference Codes when the Multi-Company flag changes.
        /// </summary>
        [Route("ChangeMultiCompany")]
        [HttpPost]
        public ChangeMultiCompany_OutputModel ChangeMultiCompany(ChangeMultiCompany_InputModel model)
        {
            ___service.ChangeMultiCompany(model.ProposedMulti, ref model.Ds);

            return new ChangeMultiCompany_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the override reverse charge.  If override flag
        /// is unchecked then default the original value of RevChargeMethod back.
        /// </summary>
        [Route("ChangeOverrideRevCharge")]
        [HttpPost]
        public ChangeOverrideRevCharge_OutputModel ChangeOverrideRevCharge(ChangeOverrideRevCharge_InputModel model)
        {
            ___service.ChangeOverrideRevCharge(model.ProposedOverrideRC, ref model.Ds);

            return new ChangeOverrideRevCharge_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the part number on a detail record.  Updates APInvDtl
        /// with defaults from the part.
        /// </summary>
        [Route("ChangePartNum")]
        [HttpPost]
        public ChangePartNum_OutputModel ChangePartNum(ChangePartNum_InputModel model)
        {
            ___service.ChangePartNum(model.ProposedPartNum, ref model.Ds);

            return new ChangePartNum_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Purpose:
        /// Parameters:  none
        /// Notes:
        /// <param name="proposedInvDtlValue">The proposed value</param>
        /// <param name="ds">The APInvoice data set</param>
        /// </summary>
        [Route("ChangePBDtlValue")]
        [HttpPost]
        public ChangePBDtlValue_OutputModel ChangePBDtlValue(ChangePBDtlValue_InputModel model)
        {
            ___service.ChangePBDtlValue(model.ProposedInvDtlValue, ref model.Ds);

            return new ChangePBDtlValue_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Purpose:
        /// Parameters:  none
        /// Notes:
        /// <param name="proposedMtlChrg">The proposed value</param>
        /// <param name="ds">The APInvoice data set</param>
        /// </summary>
        [Route("ChangePBMtlCharge")]
        [HttpPost]
        public ChangePBMtlCharge_OutputModel ChangePBMtlCharge(ChangePBMtlCharge_InputModel model)
        {
            ___service.ChangePBMtlCharge(model.ProposedMtlChrg, ref model.Ds);

            return new ChangePBMtlCharge_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the phase on a detail record.  Updates APInvJob
        /// with defaults from the part.
        /// </summary>
        [Route("ChangePhaseID")]
        [HttpPost]
        public ChangePhaseID_OutputModel ChangePhaseID(ChangePhaseID_InputModel model)
        {
            ___service.ChangePhaseID(model.PropPhase, ref model.Ds);

            return new ChangePhaseID_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the Payment Method.
        /// </summary>
        [Route("ChangePMUID")]
        [HttpPost]
        public ChangePMUID_OutputModel ChangePMUID(ChangePMUID_InputModel model)
        {
            ___service.ChangePMUID(ref model.Ds);

            return new ChangePMUID_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the Payment Method.
        /// </summary>
        [Route("ChangePMUIDMaster")]
        [HttpPost]
        public ChangePMUIDMaster_OutputModel ChangePMUIDMaster(ChangePMUIDMaster_InputModel model)
        {
            ___service.ChangePMUIDMaster(model.IpPaymentMethod, ref model.Ds);

            return new ChangePMUIDMaster_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This Method will check if the invoice can be cancelled if is not central payment or Intercompany.
        /// </summary>
        [Route("ValidateCreateCancellationInvoice")]
        [HttpPost]
        public ValidateCreateCancellationInvoice_OutputModel ValidateCreateCancellationInvoice(ValidateCreateCancellationInvoice_InputModel model)
        {
            string OpError;

            ___service.ValidateCreateCancellationInvoice(model.VendorNum, model.InvoiceNum, out OpError);

            return new ValidateCreateCancellationInvoice_OutputModel
            {
                OpError = OpError
            };
        }

        /// <summary>
        /// Method to call to validate the WBS Phase.
        /// </summary>
        [Route("ValidateWBSPhase")]
        [HttpPost]
        public ValidateWBSPhase_OutputModel ValidateWBSPhase(ValidateWBSPhase_InputModel model)
        {
            string OpMessage;

            ___service.ValidateWBSPhase(model.PropPhase, ref model.Ds, out OpMessage);

            return new ValidateWBSPhase_OutputModel
            {
                Ds = model.Ds,
                OpMessage = OpMessage
            };
        }

        /// <summary>
        /// This Method will check if the current PO line already has an unreceived line Invoice created and send a warning message if so.
        /// </summary>
        [Route("ValidateUnreceivedLineForPOBeforeChangePOLine")]
        [HttpPost]
        public ValidateUnreceivedLineForPOBeforeChangePOLine_OutputModel ValidateUnreceivedLineForPOBeforeChangePOLine(ValidateUnreceivedLineForPOBeforeChangePOLine_InputModel model)
        {
            string OpMessage;

            ___service.ValidateUnreceivedLineForPOBeforeChangePOLine(model.ProposedPOLine, ref model.Ds, out OpMessage);

            return new ValidateUnreceivedLineForPOBeforeChangePOLine_OutputModel
            {
                Ds = model.Ds,
                OpMessage = OpMessage
            };
        }

        /// <summary>
        /// Method to call when changing the po line on a detail record.  Validates the po line and
        /// updates APInvDtl with defaults from the purchase order line.
        /// </summary>
        [Route("ChangePOLine")]
        [HttpPost]
        public ChangePOLine_OutputModel ChangePOLine(ChangePOLine_InputModel model)
        {
            ___service.ChangePOLine(model.ProposedPOLine, ref model.Ds);

            return new ChangePOLine_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the po number on a detail record.  Validates the po number
        /// and updates APInvDtl with defaults from the purchase order.
        /// </summary>
        [Route("ChangePONum")]
        [HttpPost]
        public ChangePONum_OutputModel ChangePONum(ChangePONum_InputModel model)
        {
            ___service.ChangePONum(model.ProposedPONum, ref model.Ds);

            return new ChangePONum_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the po release number on a detail record.  Validates the
        /// po release number and updates APInvDtl with defaults from the purchase order release.
        /// </summary>
        [Route("ChangePORelNum")]
        [HttpPost]
        public ChangePORelNum_OutputModel ChangePORelNum(ChangePORelNum_InputModel model)
        {
            ___service.ChangePORelNum(model.ProposedPORelNum, ref model.Ds);

            return new ChangePORelNum_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the number of a prepayment invoice on the invoice header.
        /// </summary>
        [Route("ChangePrePayment")]
        [HttpPost]
        public ChangePrePayment_OutputModel ChangePrePayment(ChangePrePayment_InputModel model)
        {
            ___service.ChangePrePayment(model.PrepaymentNum, ref model.Ds);

            return new ChangePrePayment_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the prepayment amount.
        /// </summary>
        [Route("ChangePrePaymentAmt")]
        [HttpPost]
        public ChangePrePaymentAmt_OutputModel ChangePrePaymentAmt(ChangePrePaymentAmt_InputModel model)
        {
            ___service.ChangePrePaymentAmt(model.PrepaymentAmount, ref model.Ds);

            return new ChangePrePaymentAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax percent on a tax record.  Updates APInvTax
        /// tax amounts based on the new tax percent.
        /// </summary>
        [Route("ChangeRateCode")]
        [HttpPost]
        public ChangeRateCode_OutputModel ChangeRateCode(ChangeRateCode_InputModel model)
        {
            ___service.ChangeRateCode(ref model.Ds);

            return new ChangeRateCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the rate code on a tax record.  Validates the rate and tax code
        /// </summary>
        [Route("ChangeRateCodeMaster")]
        [HttpPost]
        public ChangeRateCodeMaster_OutputModel ChangeRateCodeMaster(ChangeRateCodeMaster_InputModel model)
        {
            ___service.ChangeRateCodeMaster(model.ProposedRateCode, ref model.Ds);

            return new ChangeRateCodeMaster_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the rate code on a tax record related to Invoice Header Misc Charge.  Validates the rate and tax code
        /// </summary>
        [Route("ChangeRateHedMscCode")]
        [HttpPost]
        public ChangeRateHedMscCode_OutputModel ChangeRateHedMscCode(ChangeRateHedMscCode_InputModel model)
        {
            ___service.ChangeRateHedMscCode(model.ProposedRateCode, ref model.Ds);

            return new ChangeRateHedMscCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the rate code on a tax record related to Invoice Line.  Validates the rate and tax code
        /// </summary>
        [Route("ChangeRateLineCode")]
        [HttpPost]
        public ChangeRateLineCode_OutputModel ChangeRateLineCode(ChangeRateLineCode_InputModel model)
        {
            ___service.ChangeRateLineCode(model.ProposedRateCode, ref model.Ds);

            return new ChangeRateLineCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the rate code on a tax record related to Invoice Line Misc Charge.  Validates the rate and tax code
        /// </summary>
        [Route("ChangeRateLnMscCode")]
        [HttpPost]
        public ChangeRateLnMscCode_OutputModel ChangeRateLnMscCode(ChangeRateLnMscCode_InputModel model)
        {
            ___service.ChangeRateLnMscCode(model.ProposedRateCode, ref model.Ds);

            return new ChangeRateLnMscCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the po number reference on the invoice.  Validates the
        /// po number reference and updates APInvHed with default values based on the po number.
        /// </summary>
        [Route("ChangeRefPONum")]
        [HttpPost]
        public ChangeRefPONum_OutputModel ChangeRefPONum(ChangeRefPONum_InputModel model)
        {
            string confirmMsg;

            ___service.ChangeRefPONum(model.ProposedRefPONum, model.ConfirmCheck, out confirmMsg, ref model.Ds);

            return new ChangeRefPONum_OutputModel
            {
                ConfirmMsg = confirmMsg,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the taxable amount on a tax record.  Updates APInvTax
        /// tax amounts based on the new taxable amount.
        /// </summary>
        [Route("ChangeReportableAmt")]
        [HttpPost]
        public ChangeReportableAmt_OutputModel ChangeReportableAmt(ChangeReportableAmt_InputModel model)
        {
            ___service.ChangeReportableAmt(model.ProposedReportableAmt, ref model.Ds);

            return new ChangeReportableAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the reportable amount on invoice header misc charge tax record.  Updates APInvHedMscTax
        /// reportable amounts based on the new reportable amount.
        /// </summary>
        [Route("ChangeReportableHedMscAmt")]
        [HttpPost]
        public ChangeReportableHedMscAmt_OutputModel ChangeReportableHedMscAmt(ChangeReportableHedMscAmt_InputModel model)
        {
            ___service.ChangeReportableHedMscAmt(model.ProposedReportableAmt, ref model.Ds);

            return new ChangeReportableHedMscAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the reportable amount on invoice line tax record.  Updates APLnTax
        /// reportable amounts based on the new reportable amount.
        /// </summary>
        [Route("ChangeReportableLineAmt")]
        [HttpPost]
        public ChangeReportableLineAmt_OutputModel ChangeReportableLineAmt(ChangeReportableLineAmt_InputModel model)
        {
            ___service.ChangeReportableLineAmt(model.ProposedReportableAmt, ref model.Ds);

            return new ChangeReportableLineAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the reportable amount on invoice line misc charge tax record.  Updates APInvLnMscTax
        /// reportable amounts based on the new reportable amount.
        /// </summary>
        [Route("ChangeReportableLnMscAmt")]
        [HttpPost]
        public ChangeReportableLnMscAmt_OutputModel ChangeReportableLnMscAmt(ChangeReportableLnMscAmt_InputModel model)
        {
            ___service.ChangeReportableLnMscAmt(model.ProposedReportableAmt, ref model.Ds);

            return new ChangeReportableLnMscAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the reverse charge method.  If override flag
        /// is true then check if the proposed method is valid.
        /// </summary>
        [Route("ChangeRevChargeMethod")]
        [HttpPost]
        public ChangeRevChargeMethod_OutputModel ChangeRevChargeMethod(ChangeRevChargeMethod_InputModel model)
        {
            ___service.ChangeRevChargeMethod(model.ProposedRevChrgMethod, ref model.Ds);

            return new ChangeRevChargeMethod_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the taxable amount on a tax record.  Updates APInvTax
        /// tax amounts based on the new taxable amount.
        /// </summary>
        [Route("ChangeTaxableAmt")]
        [HttpPost]
        public ChangeTaxableAmt_OutputModel ChangeTaxableAmt(ChangeTaxableAmt_InputModel model)
        {
            ___service.ChangeTaxableAmt(model.ProposedTaxableAmt, ref model.Ds);

            return new ChangeTaxableAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the taxable amount on invoice header tax record.  Updates APInvHedMscTax
        /// taxable amounts based on the new taxable amount.
        /// </summary>
        [Route("ChangeTaxableHedMscAmt")]
        [HttpPost]
        public ChangeTaxableHedMscAmt_OutputModel ChangeTaxableHedMscAmt(ChangeTaxableHedMscAmt_InputModel model)
        {
            ___service.ChangeTaxableHedMscAmt(model.ProposedTaxableAmt, ref model.Ds);

            return new ChangeTaxableHedMscAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the taxable amount on invoice line tax record.  Updates APLnTax
        /// taxable amounts based on the new taxable amount.
        /// </summary>
        [Route("ChangeTaxableLineAmt")]
        [HttpPost]
        public ChangeTaxableLineAmt_OutputModel ChangeTaxableLineAmt(ChangeTaxableLineAmt_InputModel model)
        {
            ___service.ChangeTaxableLineAmt(model.ProposedTaxableAmt, ref model.Ds);

            return new ChangeTaxableLineAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the taxable amount on invoice line tax record.  Updates APInvLnMscTax
        /// taxable amounts based on the new taxable amount.
        /// </summary>
        [Route("ChangeTaxableLnMscAmt")]
        [HttpPost]
        public ChangeTaxableLnMscAmt_OutputModel ChangeTaxableLnMscAmt(ChangeTaxableLnMscAmt_InputModel model)
        {
            ___service.ChangeTaxableLnMscAmt(model.ProposedTaxableAmt, ref model.Ds);

            return new ChangeTaxableLnMscAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the fixed tax amount on a tax record.  Updates APInvTax
        /// tax amounts based on the new tax amount.
        /// </summary>
        [Route("ChangeTaxAmt")]
        [HttpPost]
        public ChangeTaxAmt_OutputModel ChangeTaxAmt(ChangeTaxAmt_InputModel model)
        {
            ___service.ChangeTaxAmt(model.ProposedTaxAmt, ref model.Ds);

            return new ChangeTaxAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax amount on a invoice header misc charge tax record.  Updates APInvHedMscTax
        /// tax amounts based on the new tax amount.
        /// </summary>
        [Route("ChangeTaxHedMscAmt")]
        [HttpPost]
        public ChangeTaxHedMscAmt_OutputModel ChangeTaxHedMscAmt(ChangeTaxHedMscAmt_InputModel model)
        {
            ___service.ChangeTaxHedMscAmt(model.ProposedTaxAmt, ref model.Ds);

            return new ChangeTaxHedMscAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax amount on a invoice line tax record.  Updates APLnTax
        /// tax amounts based on the new tax amount.
        /// </summary>
        [Route("ChangeTaxLineAmt")]
        [HttpPost]
        public ChangeTaxLineAmt_OutputModel ChangeTaxLineAmt(ChangeTaxLineAmt_InputModel model)
        {
            ___service.ChangeTaxLineAmt(model.ProposedTaxAmt, ref model.Ds);

            return new ChangeTaxLineAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax amount on a invoice line misc charge tax record.  Updates APInvLnMscTax
        /// tax amounts based on the new tax amount.
        /// </summary>
        [Route("ChangeTaxLnMscAmt")]
        [HttpPost]
        public ChangeTaxLnMscAmt_OutputModel ChangeTaxLnMscAmt(ChangeTaxLnMscAmt_InputModel model)
        {
            ___service.ChangeTaxLnMscAmt(model.ProposedTaxAmt, ref model.Ds);

            return new ChangeTaxLnMscAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the Tax Category ID
        /// </summary>
        [Route("ChangeTaxCatID")]
        [HttpPost]
        public ChangeTaxCatID_OutputModel ChangeTaxCatID(ChangeTaxCatID_InputModel model)
        {
            ___service.ChangeTaxCatID(model.IpTaxCatID, ref model.Ds);

            return new ChangeTaxCatID_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax code on a tax record.  Validates the tax code and
        /// updates APInvTax tax amounts based on the new tax code.
        /// </summary>
        [Route("ChangeTaxCode")]
        [HttpPost]
        public ChangeTaxCode_OutputModel ChangeTaxCode(ChangeTaxCode_InputModel model)
        {
            ___service.ChangeTaxCode(model.ProposedTaxCode, ref model.Ds);

            return new ChangeTaxCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax code on a Invoice Header Misc charge tax record.  Validates the tax code and
        /// updates APInvHedMscTax tax amounts based on the new tax code.
        /// </summary>
        [Route("ChangeTaxHedMscCode")]
        [HttpPost]
        public ChangeTaxHedMscCode_OutputModel ChangeTaxHedMscCode(ChangeTaxHedMscCode_InputModel model)
        {
            ___service.ChangeTaxHedMscCode(model.ProposedTaxCode, ref model.Ds);

            return new ChangeTaxHedMscCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax code on a Invoice Line tax record.  Validates the tax code and
        /// updates APLnTax tax amounts based on the new tax code.
        /// </summary>
        [Route("ChangeTaxLineCode")]
        [HttpPost]
        public ChangeTaxLineCode_OutputModel ChangeTaxLineCode(ChangeTaxLineCode_InputModel model)
        {
            ___service.ChangeTaxLineCode(model.ProposedTaxCode, ref model.Ds);

            return new ChangeTaxLineCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax code on a Invoice Line Misc charge tax record.  Validates the tax code and
        /// updates APLnTax tax amounts based on the new tax code.
        /// </summary>
        [Route("ChangeTaxLnMscCode")]
        [HttpPost]
        public ChangeTaxLnMscCode_OutputModel ChangeTaxLnMscCode(ChangeTaxLnMscCode_InputModel model)
        {
            ___service.ChangeTaxLnMscCode(model.ProposedTaxCode, ref model.Ds);

            return new ChangeTaxLnMscCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax deductible on a tax record.  Updates APInvTax
        /// tax amounts based on the new tax percent.
        /// </summary>
        [Route("ChangeTaxDeductable")]
        [HttpPost]
        public ChangeTaxDeductable_OutputModel ChangeTaxDeductable(ChangeTaxDeductable_InputModel model)
        {
            ___service.ChangeTaxDeductable(model.ProposedTaxDeductable, ref model.Ds);

            return new ChangeTaxDeductable_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax deductible amount on a AP Invoice header msc charge tax record deductible amount.
        /// </summary>
        [Route("ChangeTaxHedMscDeductible")]
        [HttpPost]
        public ChangeTaxHedMscDeductible_OutputModel ChangeTaxHedMscDeductible(ChangeTaxHedMscDeductible_InputModel model)
        {
            ___service.ChangeTaxHedMscDeductible(model.ProposedTaxDeductable, ref model.Ds);

            return new ChangeTaxHedMscDeductible_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax deductible on a AP Invoice line tax record.
        /// </summary>
        [Route("ChangeTaxLineDeductible")]
        [HttpPost]
        public ChangeTaxLineDeductible_OutputModel ChangeTaxLineDeductible(ChangeTaxLineDeductible_InputModel model)
        {
            ___service.ChangeTaxLineDeductible(model.ProposedTaxDeductable, ref model.Ds);

            return new ChangeTaxLineDeductible_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax deductible amount on a AP Invoice line msc charge tax record.
        /// </summary>
        [Route("ChangeTaxLnMscDeductible")]
        [HttpPost]
        public ChangeTaxLnMscDeductible_OutputModel ChangeTaxLnMscDeductible(ChangeTaxLnMscDeductible_InputModel model)
        {
            ___service.ChangeTaxLnMscDeductible(model.ProposedTaxDeductable, ref model.Ds);

            return new ChangeTaxLnMscDeductible_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the lock rate flag on the invoice.  Updates
        /// APInvHed.EnableTaxExRate field.
        /// </summary>
        [Route("ChangeTaxLock")]
        [HttpPost]
        public ChangeTaxLock_OutputModel ChangeTaxLock(ChangeTaxLock_InputModel model)
        {
            ___service.ChangeTaxLock(ref model.Ds);

            return new ChangeTaxLock_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax percent on a tax record.  Updates APInvTax
        /// tax amounts based on the new tax percent.
        /// </summary>
        [Route("ChangeTaxPercent")]
        [HttpPost]
        public ChangeTaxPercent_OutputModel ChangeTaxPercent(ChangeTaxPercent_InputModel model)
        {
            ___service.ChangeTaxPercent(model.ProposedTaxPercent, ref model.Ds);

            return new ChangeTaxPercent_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax percent on a AP Invoice header misc charge tax record.  Updates APInvHedMscTax
        /// tax amounts based on the new tax percent only when one tax record exists.
        /// </summary>
        [Route("ChangeTaxHedMscPercent")]
        [HttpPost]
        public ChangeTaxHedMscPercent_OutputModel ChangeTaxHedMscPercent(ChangeTaxHedMscPercent_InputModel model)
        {
            ___service.ChangeTaxHedMscPercent(model.ProposedTaxPercent, ref model.Ds);

            return new ChangeTaxHedMscPercent_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax percent on a AP Invoice line tax record.  Updates APLnTax
        /// tax amounts based on the new tax percent only when one tax record exists.
        /// </summary>
        [Route("ChangeTaxLinePercent")]
        [HttpPost]
        public ChangeTaxLinePercent_OutputModel ChangeTaxLinePercent(ChangeTaxLinePercent_InputModel model)
        {
            ___service.ChangeTaxLinePercent(model.ProposedTaxPercent, ref model.Ds);

            return new ChangeTaxLinePercent_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the tax percent on a AP Invoice line misc charge tax record.  Updates APInvLnMscTax
        /// tax amounts based on the new tax percent only when one tax record exists.
        /// </summary>
        [Route("ChangeTaxLnMscPercent")]
        [HttpPost]
        public ChangeTaxLnMscPercent_OutputModel ChangeTaxLnMscPercent(ChangeTaxLnMscPercent_InputModel model)
        {
            ___service.ChangeTaxLnMscPercent(model.ProposedTaxPercent, ref model.Ds);

            return new ChangeTaxLnMscPercent_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the terms code on the invoice.  Validates the terms code and
        /// updates APInvHed with default values based on the new code.
        /// </summary>
        [Route("ChangeTermsCode")]
        [HttpPost]
        public ChangeTermsCode_OutputModel ChangeTermsCode(ChangeTermsCode_InputModel model)
        {
            ___service.ChangeTermsCode(model.ProposedTermsCode, ref model.Ds);

            return new ChangeTermsCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the DiscountAmt on the invoice.
        /// </summary>
        [Route("ChangeFixedDiscount")]
        [HttpPost]
        public ChangeFixedDiscount_OutputModel ChangeFixedDiscount(ChangeFixedDiscount_InputModel model)
        {
            ___service.ChangeFixedDiscount(model.ProposedDiscountAmt, ref model.Ds);

            return new ChangeFixedDiscount_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the unit cost on the invoice detail.  Updates APInvDtl
        /// with default values based on the new unit cost.
        /// </summary>
        [Route("ChangeUnitCost")]
        [HttpPost]
        public ChangeUnitCost_OutputModel ChangeUnitCost(ChangeUnitCost_InputModel model)
        {
            ___service.ChangeUnitCost(model.ProposedUnitCost, ref model.Ds);

            return new ChangeUnitCost_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the vendor id on the invoice.  Validates the vendor id and
        /// updates APInvHed with values from the new vendor.
        /// </summary>
        [Route("ChangeVendorID")]
        [HttpPost]
        public ChangeVendorID_OutputModel ChangeVendorID(ChangeVendorID_InputModel model)
        {
            string confirmMsg;

            ___service.ChangeVendorID(model.ProposedVendorID, model.ConfirmCheck, out confirmMsg, ref model.Ds);

            return new ChangeVendorID_OutputModel
            {
                ConfirmMsg = confirmMsg,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the vendor quantity on the invoice detail.  Updates APInvDtl
        /// with default values based on the new quantity.
        /// </summary>
        [Route("ChangeVendorQty")]
        [HttpPost]
        public ChangeVendorQty_OutputModel ChangeVendorQty(ChangeVendorQty_InputModel model)
        {
            ___service.ChangeVendorQty(model.ProposedVendorQty, ref model.Ds);

            return new ChangeVendorQty_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Before updating the APInvHed record, CheckBankRef will be called to check if the
        /// bank reference conforms to format standards.  If not, the user will be
        /// presented with a warning message and allowed to continue with the save.
        /// At this time this method is specific to Finland/Sweden localization
        /// </summary>
        [Route("CheckBankRef")]
        [HttpPost]
        public CheckBankRef_OutputModel CheckBankRef(CheckBankRef_InputModel model)
        {
            string OpMessage;

            ___service.CheckBankRef(ref model.Ds, out OpMessage);

            return new CheckBankRef_OutputModel
            {
                Ds = model.Ds,
                OpMessage = OpMessage
            };
        }

        /// <summary>
        /// Banking Reference check for required AP invoice
        /// </summary>
        [Route("CheckBankReference")]
        [HttpPost]
        public CheckBankReference_OutputModel CheckBankReference(CheckBankReference_InputModel model)
        {
            var ___result = ___service.CheckBankReference(model.IpVendorNum, model.IpInvoiceNum);

            return new CheckBankReference_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Before updating the APInvHed record, CheckCPayBeforeUpdate will have to be called.
        /// The CheckCPayBeforeUpdate method will pass back opMessage.
        /// - If opMessage is not equal to null then a Yes/No question will have to be asked to the
        /// user displaying the message in opMessage.
        /// - If the user answers "Yes", then call the Update method to continue else stop update.
        /// </summary>
        [Route("CheckCPayBeforeUpdate")]
        [HttpPost]
        public CheckCPayBeforeUpdate_OutputModel CheckCPayBeforeUpdate(CheckCPayBeforeUpdate_InputModel model)
        {
            string OpMessage;

            ___service.CheckCPayBeforeUpdate(ref model.Ds, out OpMessage);

            return new CheckCPayBeforeUpdate_OutputModel
            {
                Ds = model.Ds,
                OpMessage = OpMessage
            };
        }

        /// <summary>
        /// Method to call when it is necessary to check if document is lock, before doing smth.
        /// </summary>
        [Route("CheckDocumentIsLocked")]
        [HttpPost]
        public void CheckDocumentIsLocked(CheckDocumentIsLocked_InputModel model)
        {
            ___service.CheckDocumentIsLocked(model.KeyValue, model.KeyValue2);
        }

        /// <summary>
        /// Method for retrieving logical variable which shows is it neccessary to generate legal numbers for Debit Memos.
        /// </summary>
        [Route("CheckLegalNumsDisplay")]
        [HttpPost]
        public CheckLegalNumsDisplay_OutputModel CheckLegalNumsDisplay(CheckLegalNumsDisplay_InputModel model)
        {
            bool lEnabled;

            ___service.CheckLegalNumsDisplay(model.CGroupID, out lEnabled);

            return new CheckLegalNumsDisplay_OutputModel
            {
                LEnabled = lEnabled
            };
        }

        /// <summary>
        /// Purpose: Used to check whether purcase point can be set in line
        /// Parameters:
        /// <param name="purPoint">The purchase pint</param>
        /// <param name="ds">The APInvoice data set</param>
        /// </summary>
        [Route("CheckLinePurPoint")]
        [HttpPost]
        public CheckLinePurPoint_OutputModel CheckLinePurPoint(CheckLinePurPoint_InputModel model)
        {
            ___service.CheckLinePurPoint(model.PurPoint, ref model.Ds);

            return new CheckLinePurPoint_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Purpose:
        /// Parameters:  none
        /// Notes:
        /// <param name="ipVendNum">The group id</param>
        /// <param name="ipInvNum">The group id</param>
        /// <param name="ipInvLine">The group id</param>
        /// <param name="ipRoleCd">The group id</param>
        /// <param name="ipProposedValue">The group id</param>
        /// </summary>
        [Route("CheckLineSubTotal")]
        [HttpPost]
        public void CheckLineSubTotal(CheckLineSubTotal_InputModel model)
        {
            ___service.CheckLineSubTotal(model.IpVendNum, model.IpInvNum, model.IpInvLine, model.IpRoleCd, model.IpProposedValue);
        }

        /// <summary>
        /// Check for the correct Payment Method assigned.
        /// </summary>
        [Route("CheckPaymentMethod")]
        [HttpPost]
        public CheckPaymentMethod_OutputModel CheckPaymentMethod(CheckPaymentMethod_InputModel model)
        {
            ___service.CheckPaymentMethod(model.IpPaymentMethod, ref model.Ds);

            return new CheckPaymentMethod_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Update APInvoice Detail information when the RateGrp is changed.
        /// </summary>
        [Route("CheckRateGrpCode")]
        [HttpPost]
        public CheckRateGrpCode_OutputModel CheckRateGrpCode(CheckRateGrpCode_InputModel model)
        {
            ___service.CheckRateGrpCode(model.IpRateGrpCode, ref model.Ds);

            return new CheckRateGrpCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Before updating the APInvDtl record, CheckRevChrgBeforeUpdate will have to be called.
        /// The CheckRevChrgBeforeUpdate method will pass back opMessage.
        /// - If opMessage is not equal to null then a Yes/No question will have to be asked to the
        /// user displaying the message in opMessage.
        /// - If the user answers "Yes", then call the Update method to continue else stop update.
        /// </summary>
        [Route("CheckRevChrgBeforeUpdate")]
        [HttpPost]
        public CheckRevChrgBeforeUpdate_OutputModel CheckRevChrgBeforeUpdate(CheckRevChrgBeforeUpdate_InputModel model)
        {
            string OpMessage;

            ___service.CheckRevChrgBeforeUpdate(ref model.Ds, out OpMessage);

            return new CheckRevChrgBeforeUpdate_OutputModel
            {
                Ds = model.Ds,
                OpMessage = OpMessage
            };
        }

        /// <summary>
        /// Update APInvoice Detail information when the TaxRateGrp is changed.
        /// </summary>
        [Route("CheckTaxRateGrpCode")]
        [HttpPost]
        public CheckTaxRateGrpCode_OutputModel CheckTaxRateGrpCode(CheckTaxRateGrpCode_InputModel model)
        {
            ___service.CheckTaxRateGrpCode(model.IpRateGrpCode, ref model.Ds);

            return new CheckTaxRateGrpCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Update APInvoice Detail information when the Tax Liability is changed.
        /// </summary>
        [Route("CheckTaxRgn")]
        [HttpPost]
        public CheckTaxRgn_OutputModel CheckTaxRgn(CheckTaxRgn_InputModel model)
        {
            ___service.CheckTaxRgn(model.IpTaxRgnCode, ref model.Ds);

            return new CheckTaxRgn_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Gets list of Recurring Source Invoices
        /// </summary>
        [Route("GetRecurInvoiceSourceSearch")]
        [HttpPost]
        public GetRecurInvoiceSourceSearch_OutputModel GetRecurInvoiceSourceSearch(GetRecurInvoiceSourceSearch_InputModel model)
        {
            var ___result = ___service.GetRecurInvoiceSourceSearch(model.IpSuppList, model.IpCycleCodesList, model.IpGrpDate);

            return new GetRecurInvoiceSourceSearch_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Get list of DMR Debit Memos.
        /// </summary>
        [Route("GetDMRDMSourceSearch")]
        [HttpPost]
        public GetDMRDMSourceSearch_OutputModel GetDMRDMSourceSearch(GetDMRDMSourceSearch_InputModel model)
        {
            var ___result = ___service.GetDMRDMSourceSearch(model.IpSuppList);

            return new GetDMRDMSourceSearch_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Get List of Not Invoicing Receipts
        /// </summary>
        [Route("GetNotInvRecSourceSearch")]
        [HttpPost]
        public GetNotInvRecSourceSearch_OutputModel GetNotInvRecSourceSearch(GetNotInvRecSourceSearch_InputModel model)
        {
            bool alternateMessage;

            var ___result = ___service.GetNotInvRecSourceSearch(model.IpSuppList, model.InvoiceDate, out alternateMessage);

            return new GetNotInvRecSourceSearch_OutputModel
            {
                AlternateMessage = alternateMessage,
                _Return = ___result
            };
        }

        /// <summary>
        /// Return Get Not Invoiced Receipts screen values
        /// </summary>
        [Route("GetNotInvRecFilterSearch")]
        [HttpPost]
        public GetNotInvRecFilterSearch_OutputModel GetNotInvRecFilterSearch()
        {
            var ___result = ___service.GetNotInvRecFilterSearch();

            return new GetNotInvRecFilterSearch_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Method to validate if Mass Creation of GRNI documents Invoice can be created in the current group
        /// </summary>
        [Route("ValidateGNRIClearingCreation")]
        [HttpPost]
        public void ValidateGNRIClearingCreation(ValidateGNRIClearingCreation_InputModel model)
        {
            ___service.ValidateGNRIClearingCreation(model.GroupID);
        }

        /// <summary>
        /// Return Get DMR Debit Memo Screen Values
        /// </summary>
        [Route("GetDMRDMFilterSearch")]
        [HttpPost]
        public GetDMRDMFilterSearch_OutputModel GetDMRDMFilterSearch()
        {
            var ___result = ___service.GetDMRDMFilterSearch();

            return new GetDMRDMFilterSearch_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Creates a correction invoice from a another invoice.
        /// </summary>
        [Route("CreateCorrectionInvoice")]
        [HttpPost]
        public CreateCorrectionInvoice_OutputModel CreateCorrectionInvoice(CreateCorrectionInvoice_InputModel model)
        {
            System.Decimal grpTotalInvAmt;
            bool lEnableGenLegalNum;

            ___service.CreateCorrectionInvoice(model.GroupID, model.SourceInvoiceNum, model.SourceVendorNum, model.NewInvoiceNum, model.NewInvoiceDate, model.NewDocType, out grpTotalInvAmt, out lEnableGenLegalNum, model.Ds);

            return new CreateCorrectionInvoice_OutputModel
            {
                GrpTotalInvAmt = grpTotalInvAmt,
                LEnableGenLegalNum = lEnableGenLegalNum
            };
        }

        /// <summary>
        /// Creates a cancellation invoice from a another invoice.
        /// </summary>
        [Route("CreateCancellationInvoice")]
        [HttpPost]
        public CreateCancellationInvoice_OutputModel CreateCancellationInvoice(CreateCancellationInvoice_InputModel model)
        {
            System.Decimal grpTotalInvAmt;
            bool lEnableGenLegalNum;

            ___service.CreateCancellationInvoice(model.GroupID, model.SourceInvoiceNum, model.SourceVendorNum, model.NewInvoiceNum, model.NewInvoiceDate, model.NewDocType, out grpTotalInvAmt, out lEnableGenLegalNum, model.Ds);

            return new CreateCancellationInvoice_OutputModel
            {
                GrpTotalInvAmt = grpTotalInvAmt,
                LEnableGenLegalNum = lEnableGenLegalNum
            };
        }

        /// <summary>
        /// Purpose:
        /// Parameters:  none
        /// Notes:
        /// <param name="ds">The APInvoice data set</param>
        /// </summary>
        [Route("CreateJobMtl")]
        [HttpPost]
        public CreateJobMtl_OutputModel CreateJobMtl(CreateJobMtl_InputModel model)
        {
            ___service.CreateJobMtl(ref model.Ds);

            return new CreateJobMtl_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// </summary>
        [Route("DeleteMaster")]
        [HttpPost]
        public DeleteMaster_OutputModel DeleteMaster(DeleteMaster_InputModel model)
        {
            System.Decimal grpTotalInvAmt;
            bool lEnableGenLegalNum;

            ___service.DeleteMaster(ref model.Ds, model.CGroupID, model.KeyValue, model.KeyValue2, out grpTotalInvAmt, out lEnableGenLegalNum);

            return new DeleteMaster_OutputModel
            {
                Ds = model.Ds,
                GrpTotalInvAmt = grpTotalInvAmt,
                LEnableGenLegalNum = lEnableGenLegalNum
            };
        }

        /// <summary>
        /// Method to call to deselected selected lines.  This method will run through each
        /// APSelectedRcptLines where the DeselectLine flag is true and remove it from the
        /// APSelectedRcptLines table.  Also, if the APUninvoicedReceipts record for the receipt line
        /// being delesected is currently in the dataset, it will add the line back to the
        /// APUninvoicedRcptLines table.
        /// </summary>
        [Route("DeselectSelectedRcptLines")]
        [HttpPost]
        public DeselectSelectedRcptLines_OutputModel DeselectSelectedRcptLines(DeselectSelectedRcptLines_InputModel model)
        {
            ___service.DeselectSelectedRcptLines(ref model.Ds, model.VendorNum, model.PurPoint, model.PackSlip, model.IsDropShip, model.InvoiceNum, model.IPONum);

            return new DeselectSelectedRcptLines_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Decode ISR Code Line and return data for filling Invoice Header
        /// At this time this method is specific to Switzerland localization
        /// </summary>
        [Route("DecodeISRCodeLine")]
        [HttpPost]
        public DecodeISRCodeLine_OutputModel DecodeISRCodeLine(DecodeISRCodeLine_InputModel model)
        {
            string opSlipType;
            string opSlipCode;
            System.Decimal opAmount;
            string opCurrencyCode;
            string opCurrencyID;
            string opISRRefNum;
            int opVendorNum;
            string opVendorID;
            string opVendorName;

            ___service.DecodeISRCodeLine(model.IpISRCodeLine, out opSlipType, out opSlipCode, out opAmount, out opCurrencyCode, out opCurrencyID, out opISRRefNum, out opVendorNum, out opVendorID, out opVendorName);

            return new DecodeISRCodeLine_OutputModel
            {
                OpSlipType = opSlipType,
                OpSlipCode = opSlipCode,
                OpAmount = opAmount,
                OpCurrencyCode = opCurrencyCode,
                OpCurrencyID = opCurrencyID,
                OpISRRefNum = opISRRefNum,
                OpVendorNum = opVendorNum,
                OpVendorID = opVendorID,
                OpVendorName = opVendorName
            };
        }

        /// <summary>
        /// This method return wish dates have to be enable on AP Invoice.
        /// </summary>
        [Route("EnableAPDates")]
        [HttpPost]
        public EnableAPDates_OutputModel EnableAPDates()
        {
            bool EnApplyDate;
            bool EnTaxPDate;
            bool EnTaxRDate;

            ___service.EnableAPDates(out EnApplyDate, out EnTaxPDate, out EnTaxRDate);

            return new EnableAPDates_OutputModel
            {
                EnApplyDate = EnApplyDate,
                EnTaxPDate = EnTaxPDate,
                EnTaxRDate = EnTaxRDate
            };
        }

        /// <summary>
        /// Method to call to generate rebates.
        /// </summary>
        [Route("GenerateRebateInv")]
        [HttpPost]
        public GenerateRebateInv_OutputModel GenerateRebateInv(GenerateRebateInv_InputModel model)
        {
            string opMsg;

            ___service.GenerateRebateInv(model.InvoiceType, model.GroupID, out opMsg, model.Ds);

            return new GenerateRebateInv_OutputModel
            {
                OpMsg = opMsg
            };
        }

        /// <summary>
        /// Method to call to get a rebate list
        /// </summary>
        [Route("GetRebateInvList")]
        [HttpPost]
        public GetRebateInvList_OutputModel GetRebateInvList(GetRebateInvList_InputModel model)
        {
            var ___result = ___service.GetRebateInvList(model.InvoiceType);

            return new GetRebateInvList_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Method to call to retrieve the POMisc records that can be added to an AP Invoice Header
        /// or an AP Invoice Line.  This method will create the available po misc charges for the invoice
        /// and all lines of the invoice.
        /// </summary>
        [Route("GetAPInvPOMisc")]
        [HttpPost]
        public GetAPInvPOMisc_OutputModel GetAPInvPOMisc(GetAPInvPOMisc_InputModel model)
        {
            var ___result = ___service.GetAPInvPOMisc(model.InVendorNum, model.InInvoiceNum);

            return new GetAPInvPOMisc_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Method to call to get uninvoiced receipts for Receipt billing.
        /// </summary>
        [Route("GetAPUninvoicedReceipts")]
        [HttpPost]
        public GetAPUninvoicedReceipts_OutputModel GetAPUninvoicedReceipts(GetAPUninvoicedReceipts_InputModel model)
        {
            ___service.GetAPUninvoicedReceipts(ref model.Ds, model.InVendorNum, model.InInvoiceNum, model.InPONum);

            return new GetAPUninvoicedReceipts_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to get uninvoiced receipts for Receipt billing and select them for invoicing.
        /// </summary>
        [Route("GetAPUninvoicedReceiptsSelectAll")]
        [HttpPost]
        public GetAPUninvoicedReceiptsSelectAll_OutputModel GetAPUninvoicedReceiptsSelectAll(GetAPUninvoicedReceiptsSelectAll_InputModel model)
        {
            var ___result = ___service.GetAPUninvoicedReceiptsSelectAll(model.InVendorNum, model.InInvoiceNum, model.InPONumList);

            return new GetAPUninvoicedReceiptsSelectAll_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Method to call to get available tran doc types.
        /// </summary>
        [Route("GetAvailTranDocTypes")]
        [HttpPost]
        public GetAvailTranDocTypes_OutputModel GetAvailTranDocTypes()
        {
            string AvailTypes;

            ___service.GetAvailTranDocTypes(out AvailTypes);

            return new GetAvailTranDocTypes_OutputModel
            {
                AvailTypes = AvailTypes
            };
        }

        /// <summary>
        /// Method to call to get a Code Description list.
        /// </summary>
        [Route("GetCodeDescList")]
        [HttpPost]
        public GetCodeDescList_OutputModel GetCodeDescList(GetCodeDescList_InputModel model)
        {
            var ___result = ___service.GetCodeDescList(model.TableName, model.FieldName);

            return new GetCodeDescList_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Method to call to get DMR Correction Invoice Requests.
        /// </summary>
        [Route("GetDMRCorrInvRequests")]
        [HttpPost]
        public GetDMRCorrInvRequests_OutputModel GetDMRCorrInvRequests(GetDMRCorrInvRequests_InputModel model)
        {
            string ReturnMsg;

            ___service.GetDMRCorrInvRequests(model.AddToGroupID, out ReturnMsg, ref model.Ds);

            return new GetDMRCorrInvRequests_OutputModel
            {
                ReturnMsg = ReturnMsg,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to get DMR Debit Memos for invoicing.
        /// </summary>
        [Route("GetDMRDebitMemos")]
        [HttpPost]
        public GetDMRDebitMemos_OutputModel GetDMRDebitMemos(GetDMRDebitMemos_InputModel model)
        {
            string ReturnMsg;
            System.Decimal grpTotalInvAmt;
            bool lEnableGenLegalNum;

            ___service.GetDMRDebitMemos(model.SysRowIDList, model.SuppList, model.AddToGroupID, out ReturnMsg, out grpTotalInvAmt, out lEnableGenLegalNum, ref model.Ds);

            return new GetDMRDebitMemos_OutputModel
            {
                ReturnMsg = ReturnMsg,
                GrpTotalInvAmt = grpTotalInvAmt,
                LEnableGenLegalNum = lEnableGenLegalNum,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// </summary>
        [Route("GetvalidEAD")]
        [HttpPost]
        public GetvalidEAD_OutputModel GetvalidEAD(GetvalidEAD_InputModel model)
        {
            string cMessageText;

            ___service.GetvalidEAD(model.InTransType, model.InDateLabel, ref model.ProposedDate, out cMessageText);

            return new GetvalidEAD_OutputModel
            {
                ProposedDate = model.ProposedDate,
                CMessageText = cMessageText
            };
        }

        /// <summary>
        /// This method will return a record in the LegalNumGenOpts datatable that will
        /// be used to generate a legal number.
        /// </summary>
        [Route("GetLegalNumberOpts")]
        [HttpPost]
        public GetLegalNumberOpts_OutputModel GetLegalNumberOpts(GetLegalNumberOpts_InputModel model)
        {
            bool requiresUserInput;

            var ___result = ___service.GetLegalNumberOpts(model.InGroupID, model.InVendor, model.InInvNum, ref model.Ds, out requiresUserInput);

            return new GetLegalNumberOpts_OutputModel
            {
                Ds = model.Ds,
                RequiresUserInput = requiresUserInput,
                _Return = ___result
            };
        }

        /// <summary>
        /// Method for generating legal numbers for generated Debit Memo.
        /// </summary>
        [Route("GetLegalNumforDebitMemo")]
        [HttpPost]
        public void GetLegalNumforDebitMemo(GetLegalNumforDebitMemo_InputModel model)
        {
            ___service.GetLegalNumforDebitMemo(model.CGroupID);
        }

        /// <summary>
        /// Voids the legal number.
        /// </summary>
        [Route("VoidLegalNumber")]
        [HttpPost]
        public VoidLegalNumber_OutputModel VoidLegalNumber(VoidLegalNumber_InputModel model)
        {
            var ___result = ___service.VoidLegalNumber(model.IpInvoiceNum, model.IpVoidedReason, model.IpVendorNum);

            return new VoidLegalNumber_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Method to return invoice headers for asset addition UI
        /// </summary>
        [Route("GetListForAssetAdd")]
        [HttpPost]
        public GetListForAssetAdd_OutputModel GetListForAssetAdd(GetListForAssetAdd_InputModel model)
        {
            bool morePages;

            var ___result = ___service.GetListForAssetAdd(model.WhereClause, model.PageSize, model.AbsolutePage, out morePages);

            return new GetListForAssetAdd_OutputModel
            {
                MorePages = morePages,
                _Return = ___result
            };
        }

        /// <summary>
        ///
        /// </summary>
        [Route("GetApInvHeadListLoaded")]
        [HttpPost]
        public GetApInvHeadListLoaded_OutputModel GetApInvHeadListLoaded(GetApInvHeadListLoaded_InputModel model)
        {
            var ___result = ___service.GetApInvHeadListLoaded(model.GroupId, model.VendorId);

            return new GetApInvHeadListLoaded_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// This method called from Kinetic UI
        /// </summary>
        [Route("GetListForLandingPage")]
        [HttpPost]
        public GetListForLandingPage_OutputModel GetListForLandingPage(GetListForLandingPage_InputModel model)
        {
            bool morePages;

            var ___result = ___service.GetListForLandingPage(model.WhereClause, model.PageSize, model.AbsolutePage, out morePages);

            return new GetListForLandingPage_OutputModel
            {
                MorePages = morePages,
                _Return = ___result
            };
        }

        /// <summary>
        /// Method to call when adding a new Advance Billing line AP Invoice Detail record
        /// </summary>
        [Route("GetNewAPInvDtlAdvance")]
        [HttpPost]
        public GetNewAPInvDtlAdvance_OutputModel GetNewAPInvDtlAdvance(GetNewAPInvDtlAdvance_InputModel model)
        {
            ___service.GetNewAPInvDtlAdvance(ref model.Ds, model.IVendorNum, model.CInvoiceNum);

            return new GetNewAPInvDtlAdvance_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new Asset line AP Invoice Detail record
        /// </summary>
        [Route("GetNewAPInvDtlAsset")]
        [HttpPost]
        public GetNewAPInvDtlAsset_OutputModel GetNewAPInvDtlAsset(GetNewAPInvDtlAsset_InputModel model)
        {
            ___service.GetNewAPInvDtlAsset(ref model.Ds, model.IVendorNum, model.CInvoiceNum);

            return new GetNewAPInvDtlAsset_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new DMR Credit line AP Invoice Detail record
        /// </summary>
        [Route("GetNewAPInvDtlDMRCredit")]
        [HttpPost]
        public GetNewAPInvDtlDMRCredit_OutputModel GetNewAPInvDtlDMRCredit(GetNewAPInvDtlDMRCredit_InputModel model)
        {
            ___service.GetNewAPInvDtlDMRCredit(ref model.Ds, model.IVendorNum, model.CInvoiceNum, model.IDMRNum, model.IDMRActionNum);

            return new GetNewAPInvDtlDMRCredit_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new Job Miscellaneous line AP Invoice Detail record
        /// </summary>
        [Route("GetNewAPInvDtlJobMiscellaneous")]
        [HttpPost]
        public GetNewAPInvDtlJobMiscellaneous_OutputModel GetNewAPInvDtlJobMiscellaneous(GetNewAPInvDtlJobMiscellaneous_InputModel model)
        {
            ___service.GetNewAPInvDtlJobMiscellaneous(ref model.Ds, model.IVendorNum, model.CInvoiceNum);

            return new GetNewAPInvDtlJobMiscellaneous_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new Miscellaneous line AP Invoice Detail record
        /// </summary>
        [Route("GetNewAPInvDtlMiscellaneous")]
        [HttpPost]
        public GetNewAPInvDtlMiscellaneous_OutputModel GetNewAPInvDtlMiscellaneous(GetNewAPInvDtlMiscellaneous_InputModel model)
        {
            ___service.GetNewAPInvDtlMiscellaneous(ref model.Ds, model.IVendorNum, model.CInvoiceNum);

            return new GetNewAPInvDtlMiscellaneous_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new Unreceived Billing line AP Invoice Detail record
        /// </summary>
        [Route("GetNewAPInvDtlUnreceived")]
        [HttpPost]
        public GetNewAPInvDtlUnreceived_OutputModel GetNewAPInvDtlUnreceived(GetNewAPInvDtlUnreceived_InputModel model)
        {
            ___service.GetNewAPInvDtlUnreceived(ref model.Ds, model.IVendorNum, model.CInvoiceNum);

            return new GetNewAPInvDtlUnreceived_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new BOE AP Invoice record
        /// </summary>
        [Route("GetNewAPInvHedBOE")]
        [HttpPost]
        public GetNewAPInvHedBOE_OutputModel GetNewAPInvHedBOE(GetNewAPInvHedBOE_InputModel model)
        {
            ___service.GetNewAPInvHedBOE(model.GroupID, ref model.Ds);

            return new GetNewAPInvHedBOE_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new Debit Memo AP Invoice record
        /// </summary>
        [Route("GetNewAPInvHedInvoice")]
        [HttpPost]
        public GetNewAPInvHedInvoice_OutputModel GetNewAPInvHedInvoice(GetNewAPInvHedInvoice_InputModel model)
        {
            ___service.GetNewAPInvHedInvoice(ref model.Ds, model.CGroupID);

            return new GetNewAPInvHedInvoice_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new Debit Memo AP Invoice record
        /// </summary>
        [Route("GetNewAPInvHedDebitMemo")]
        [HttpPost]
        public GetNewAPInvHedDebitMemo_OutputModel GetNewAPInvHedDebitMemo(GetNewAPInvHedDebitMemo_InputModel model)
        {
            ___service.GetNewAPInvHedDebitMemo(ref model.Ds, model.CGroupID);

            return new GetNewAPInvHedDebitMemo_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new Manual GRNI Clearing record
        /// </summary>
        [Route("GetNewManualGRNIClearing")]
        [HttpPost]
        public GetNewManualGRNIClearing_OutputModel GetNewManualGRNIClearing(GetNewManualGRNIClearing_InputModel model)
        {
            ___service.GetNewManualGRNIClearing(ref model.Ds, model.CGroupID);

            return new GetNewManualGRNIClearing_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new Header/Late Cost charge
        /// </summary>
        [Route("GetNewHdrCharge")]
        [HttpPost]
        public GetNewHdrCharge_OutputModel GetNewHdrCharge(GetNewHdrCharge_InputModel model)
        {
            ___service.GetNewHdrCharge(ref model.Ds, model.IVendorNum, model.CInvoiceNum, model.LcFlag);

            return new GetNewHdrCharge_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when adding a new Header/Late Cost charge for Plastic Packaging Tax Report
        /// </summary>
        [Route("GetNewAPIHAPInvMscPlasticPackTaxCost")]
        [HttpPost]
        public GetNewAPIHAPInvMscPlasticPackTaxCost_OutputModel GetNewAPIHAPInvMscPlasticPackTaxCost(GetNewAPIHAPInvMscPlasticPackTaxCost_InputModel model)
        {
            ___service.GetNewAPIHAPInvMscPlasticPackTaxCost(ref model.Ds, model.VendorNum, model.InvoiceNum, model.PlasticPackTaxReportID);

            return new GetNewAPIHAPInvMscPlasticPackTaxCost_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row into the DataSet with fields populated depending on parent Invoice Line
        /// </summary>
        [Route("GetNewAPInvDtlDEASchPopulated")]
        [HttpPost]
        public GetNewAPInvDtlDEASchPopulated_OutputModel GetNewAPInvDtlDEASchPopulated(GetNewAPInvDtlDEASchPopulated_InputModel model)
        {
            ___service.GetNewAPInvDtlDEASchPopulated(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine);

            return new GetNewAPInvDtlDEASchPopulated_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        ///
        /// </summary>
        [Route("GetPercentFixedAmt")]
        [HttpPost]
        public void GetPercentFixedAmt(GetPercentFixedAmt_InputModel model)
        {
            ___service.GetPercentFixedAmt(model.IpInvDate);
        }

        /// <summary>
        /// This procedure returns the invoices for BOE selection
        /// </summary>
        [Route("GetRefInvoicesForBOE")]
        [HttpPost]
        public GetRefInvoicesForBOE_OutputModel GetRefInvoicesForBOE(GetRefInvoicesForBOE_InputModel model)
        {
            var ___result = ___service.GetRefInvoicesForBOE(model.WhereClause);

            return new GetRefInvoicesForBOE_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Purpose: Used to get additional filter to get the list of purchase points on line level
        /// </summary>
        [Route("GetLinePurPointFilterString")]
        [HttpPost]
        public GetLinePurPointFilterString_OutputModel GetLinePurPointFilterString(GetLinePurPointFilterString_InputModel model)
        {
            string opFilterString;

            ___service.GetLinePurPointFilterString(model.IpVendorNum, model.IpInvoiceNum, out opFilterString);

            return new GetLinePurPointFilterString_OutputModel
            {
                OpFilterString = opFilterString
            };
        }

        /// <param name="APInvHedWhereClause"></param>
        /// <param name="PageSize"></param>
        /// <param name="AbsolutePage"></param>
        /// <param name="MorePages"></param>
        /// <returns></returns>
        [Route("GetListBOEReferences")]
        [HttpPost]
        public GetListBOEReferences_OutputModel GetListBOEReferences(GetListBOEReferences_InputModel model)
        {
            bool MorePages;

            var ___result = ___service.GetListBOEReferences(model.APInvHedWhereClause, model.PageSize, model.AbsolutePage, out MorePages);

            return new GetListBOEReferences_OutputModel
            {
                MorePages = MorePages,
                _Return = ___result
            };
        }

        /// <summary>
        /// Purpose: Used to get additional filter to get the list of purchase orders
        /// </summary>
        [Route("GetPOFilterString")]
        [HttpPost]
        public GetPOFilterString_OutputModel GetPOFilterString(GetPOFilterString_InputModel model)
        {
            string opFilterString;

            ___service.GetPOFilterString(model.IpVendorNum, model.IpInvoiceNum, out opFilterString);

            return new GetPOFilterString_OutputModel
            {
                OpFilterString = opFilterString
            };
        }

        /// <summary>
        /// This method returns the Exchange Rate information for the selected Currency.  The system
        /// may not have an exchange rate between the APInvoice and Base so it may use an middle Currency
        /// so that it will go APInvoice Currency -> Ref Currency -> Base Currency
        /// </summary>
        [Route("GetValueExchageRate")]
        [HttpPost]
        public GetValueExchageRate_OutputModel GetValueExchageRate(GetValueExchageRate_InputModel model)
        {
            System.Decimal vExchangeRate;
            string vXRateLabel;

            ___service.GetValueExchageRate(model.VCurrencyCode, model.VRateGrpCode, out vExchangeRate, out vXRateLabel, ref model.Ds);

            return new GetValueExchageRate_OutputModel
            {
                VExchangeRate = vExchangeRate,
                VXRateLabel = vXRateLabel,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when peforming G/L allocation. This method uses the AllocationID
        /// and AllocationAmount fields from APInvDtl to create the allocation records.  After
        /// this method runs, the APInvDtl and APInvExp records will be passed back.  It is expected
        /// that the AllocationID and AllocationAmount fields will be entered separately from the
        /// other APInvDtl fields since the fields are used only for this method and are not written
        /// to the APInvDtl database table.
        /// </summary>
        [Route("GLAllocation")]
        [HttpPost]
        public GLAllocation_OutputModel GLAllocation(GLAllocation_InputModel model)
        {
            ___service.GLAllocation(model.VCurrSwitch, ref model.Ds);

            return new GLAllocation_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to invoice the selected receipt lines.  This method will run through each
        /// APSelectedRcptLines and create an APInvDtl record.  After this method is called, the
        /// GetRows method should be called to get the invoice lines that were created.
        /// </summary>
        [Route("InvoiceSelectedLines")]
        [HttpPost]
        public InvoiceSelectedLines_OutputModel InvoiceSelectedLines(InvoiceSelectedLines_InputModel model)
        {
            string opLOCMsg;

            ___service.InvoiceSelectedLines(ref model.Ds, out opLOCMsg);

            return new InvoiceSelectedLines_OutputModel
            {
                Ds = model.Ds,
                OpLOCMsg = opLOCMsg
            };
        }

        /// <summary>
        ///
        /// </summary>
        [Route("IsCorrectionInvoice")]
        [HttpPost]
        public IsCorrectionInvoice_OutputModel IsCorrectionInvoice(IsCorrectionInvoice_InputModel model)
        {
            bool opIsCorrectionInvoice;

            ___service.IsCorrectionInvoice(model.CpInvoiceNum, out opIsCorrectionInvoice);

            return new IsCorrectionInvoice_OutputModel
            {
                OpIsCorrectionInvoice = opIsCorrectionInvoice
            };
        }

        /// <summary>
        /// Create multiple ApInvDtl for a BOE ApInvHed from multiple selected invoices.
        /// </summary>
        [Route("MassGenerateBOEapInvDtl")]
        [HttpPost]
        public MassGenerateBOEapInvDtl_OutputModel MassGenerateBOEapInvDtl(MassGenerateBOEapInvDtl_InputModel model)
        {
            string massGenErrorMsg;
            string opWarning;

            var ___result = ___service.MassGenerateBOEapInvDtl(model.IpVendorNum, model.IpInvoiceNum, ref model.Ds, out massGenErrorMsg, out opWarning);

            return new MassGenerateBOEapInvDtl_OutputModel
            {
                Ds = model.Ds,
                MassGenErrorMsg = massGenErrorMsg,
                OpWarning = opWarning,
                _Return = ___result
            };
        }

        /// <summary>
        ///
        /// </summary>
        [Route("MatchLoggedInvoice")]
        [HttpPost]
        public MatchLoggedInvoice_OutputModel MatchLoggedInvoice(MatchLoggedInvoice_InputModel model)
        {
            string confirmMsg;

            ___service.MatchLoggedInvoice(ref model.Ds, model.CGroupID, model.ConfirmCheck, out confirmMsg, model.SkipInactiveVendors, ref model.Ds1);

            return new MatchLoggedInvoice_OutputModel
            {
                Ds = model.Ds,
                ConfirmMsg = confirmMsg,
                Ds1 = model.Ds1
            };
        }

        /// <summary>
        /// This method should be called before the pInvDtl invoice reference has been updated.
        /// Specific to Bill of Exchange invoices.
        /// </summary>
        [Route("OnChangeLineInvoiceRef")]
        [HttpPost]
        public OnChangeLineInvoiceRef_OutputModel OnChangeLineInvoiceRef(OnChangeLineInvoiceRef_InputModel model)
        {
            string opWarning;

            ___service.OnChangeLineInvoiceRef(model.NewInvoiceRef, out opWarning, ref model.Ds);

            return new OnChangeLineInvoiceRef_OutputModel
            {
                OpWarning = opWarning,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method should be called to validate the new apply date entered by the user.
        /// </summary>
        [Route("OnChangeofApplyDate")]
        [HttpPost]
        public OnChangeofApplyDate_OutputModel OnChangeofApplyDate(OnChangeofApplyDate_InputModel model)
        {
            ___service.OnChangeofApplyDate(model.VendorNum, model.InvoiceNum, model.RecalcAmts, model.NewApplyDate, ref model.Ds);

            return new OnChangeofApplyDate_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method should be called to validate the new apply date entered by the user.
        /// </summary>
        [Route("OnChangeofApplyDateEx")]
        [HttpPost]
        public OnChangeofApplyDateEx_OutputModel OnChangeofApplyDateEx(OnChangeofApplyDateEx_InputModel model)
        {
            ___service.OnChangeofApplyDateEx(model.VendorNum, model.InvoiceNum, model.RecalcAmts, model.NewApplyDate, ref model.Ds);

            return new OnChangeofApplyDateEx_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method should be called to validate the new apply date entered by the user.
        /// This method will additionally return a message to present to the user if the date is greater than
        /// the client today date.
        /// </summary>
        [Route("OnChangeofApplyDateWithDateCheck")]
        [HttpPost]
        public OnChangeofApplyDateWithDateCheck_OutputModel OnChangeofApplyDateWithDateCheck(OnChangeofApplyDateWithDateCheck_InputModel model)
        {
            string DateMessage;

            ___service.OnChangeofApplyDateWithDateCheck(model.VendorNum, model.InvoiceNum, model.RecalcAmts, model.NewApplyDate, out DateMessage, ref model.Ds);

            return new OnChangeofApplyDateWithDateCheck_OutputModel
            {
                DateMessage = DateMessage,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method should be called to validate the new tax rate date entered by the user.
        /// </summary>
        [Route("OnChangeofTaxPoint")]
        [HttpPost]
        public OnChangeofTaxPoint_OutputModel OnChangeofTaxPoint(OnChangeofTaxPoint_InputModel model)
        {
            ___service.OnChangeofTaxPoint(model.VendorNum, model.InvoiceNum, model.NewTaxPoint, ref model.Ds);

            return new OnChangeofTaxPoint_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method should be called to validate the new tax rate date entered by the user.
        /// </summary>
        [Route("OnChangeofTaxRateDate")]
        [HttpPost]
        public OnChangeofTaxRateDate_OutputModel OnChangeofTaxRateDate(OnChangeofTaxRateDate_InputModel model)
        {
            ___service.OnChangeofTaxRateDate(model.VendorNum, model.InvoiceNum, model.NewTaxDate, ref model.Ds);

            return new OnChangeofTaxRateDate_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// /// <summary>
        /// This method should be called to validate the new apply date entered by the user for transferred invoice.
        /// </summary>
        [Route("OnChangeofTransApplyDate")]
        [HttpPost]
        public OnChangeofTransApplyDate_OutputModel OnChangeofTransApplyDate(OnChangeofTransApplyDate_InputModel model)
        {
            ___service.OnChangeofTransApplyDate(model.VendorNum, model.InvoiceNum, model.NewTransApplyDate, ref model.Ds);

            return new OnChangeofTransApplyDate_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Sets default values when the TranDocTypeID changes
        /// </summary>
        [Route("OnChangeTranDocTypeID")]
        [HttpPost]
        public OnChangeTranDocTypeID_OutputModel OnChangeTranDocTypeID(OnChangeTranDocTypeID_InputModel model)
        {
            ___service.OnChangeTranDocTypeID(model.IpTranDocTypeID, ref model.Ds);

            return new OnChangeTranDocTypeID_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Call this method when the user enters the ttApInv.BankID
        /// </summary>
        [Route("OnChangeVendBankID")]
        [HttpPost]
        public OnChangeVendBankID_OutputModel OnChangeVendBankID(OnChangeVendBankID_InputModel model)
        {
            ___service.OnChangeVendBankID(model.PcVendBankID, ref model.Ds);

            return new OnChangeVendBankID_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Verifies if a Miscellaneous Charge can be marked as Landed Cost.
        /// </summary>
        [Route("OnLCFlagOfLineMiscChargeChange")]
        [HttpPost]
        public void OnLCFlagOfLineMiscChargeChange(OnLCFlagOfLineMiscChargeChange_InputModel model)
        {
            ___service.OnLCFlagOfLineMiscChargeChange(model.IpMiscCode, model.IpLCFlag);
        }

        /// <summary>
        /// Verifies if a Shipment ID (ContainerHeader.ContainerID) is valid.
        /// </summary>
        [Route("OnShipmentIDChange")]
        [HttpPost]
        public OnShipmentIDChange_OutputModel OnShipmentIDChange(OnShipmentIDChange_InputModel model)
        {
            ___service.OnShipmentIDChange(model.IpShipmentID, ref model.Ds);

            return new OnShipmentIDChange_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Verify selected TH Reference Customer
        /// </summary>
        [Route("OnTHRefVendorIDChange")]
        [HttpPost]
        public OnTHRefVendorIDChange_OutputModel OnTHRefVendorIDChange(OnTHRefVendorIDChange_InputModel model)
        {
            ___service.OnTHRefVendorIDChange(model.VendorID, ref model.Ds);

            return new OnTHRefVendorIDChange_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Verify selected Reference Invoice NUmber
        /// </summary>
        [Route("OnTHRefInvoiceNumChange")]
        [HttpPost]
        public OnTHRefInvoiceNumChange_OutputModel OnTHRefInvoiceNumChange(OnTHRefInvoiceNumChange_InputModel model)
        {
            ___service.OnTHRefInvoiceNumChange(model.ApInvoiceNum, ref model.Ds);

            return new OnTHRefInvoiceNumChange_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Verify selected Reference Invoice NUmber
        /// </summary>
        [Route("OnTHRefInvoiceNumChangeWithUnknownSupplier")]
        [HttpPost]
        public OnTHRefInvoiceNumChangeWithUnknownSupplier_OutputModel OnTHRefInvoiceNumChangeWithUnknownSupplier(OnTHRefInvoiceNumChangeWithUnknownSupplier_InputModel model)
        {
            string opMessage;

            ___service.OnTHRefInvoiceNumChangeWithUnknownSupplier(model.ApInvoiceNum, out opMessage, ref model.Ds);

            return new OnTHRefInvoiceNumChangeWithUnknownSupplier_OutputModel
            {
                OpMessage = opMessage,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method sets the amount to be allocated
        /// on condition of the currency switch
        /// </summary>
        [Route("PreSetAllocationAmt")]
        [HttpPost]
        public PreSetAllocationAmt_OutputModel PreSetAllocationAmt(PreSetAllocationAmt_InputModel model)
        {
            ___service.PreSetAllocationAmt(model.NCurrSwitch, ref model.Ds);

            return new PreSetAllocationAmt_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to selected uninvoiced lines.  This method will run through each
        /// APUninvoicedRcptLines where the SelectLine flag is true, move the record to the
        /// APSelectedRcptLines table and remove it from the APUninvoicedRcptLines table.  This
        /// method can also be called for the SelectAll functionality.  In that case all APUninvoicedRcptLines
        /// must have the SelectLine flag set to true before calling the method.
        /// </summary>
        [Route("SelectUninvoicedRcptLines")]
        [HttpPost]
        public SelectUninvoicedRcptLines_OutputModel SelectUninvoicedRcptLines(SelectUninvoicedRcptLines_InputModel model)
        {
            ___service.SelectUninvoicedRcptLines(ref model.Ds, model.InVendorNum, model.InPurPoint, model.InPONum, model.InPackSlip, model.InDropShip, model.InvoiceNum, model.InGRNIClearing);

            return new SelectUninvoicedRcptLines_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Pre-calculate missing APInxTax records which will be used for WH taxes created on Payment time
        /// <param name="ipGroupID">ipGroupID </param>
        /// </summary>
        [Route("CompletePrecalcWHTax")]
        [HttpPost]
        public void CompletePrecalcWHTax(CompletePrecalcWHTax_InputModel model)
        {
            ___service.CompletePrecalcWHTax(model.IpGroupID);
        }

        /// <summary>
        /// CALCULATE VANTAGE\TAX CONNECT TAX CALCULATIONS UI NEEDS TO CALL A SAVE BEFORE CALLING THIS PROCEDURE
        /// <param name="ipGroupID">ipGroupID </param>
        /// <param name="ipInvoiceNum">ipInvoiceNum </param>
        /// <param name="ipVendorNum">ipVendorNum </param>
        /// <param name="ipCalcAll">ipCalcAll</param>
        /// <param name="ipCalledFromUI">ipCalledFromUI</param>
        /// <param name="ds">APInvoice dataset</param>
        /// </summary>
        [Route("SetReadyToCalc")]
        [HttpPost]
        public SetReadyToCalc_OutputModel SetReadyToCalc(SetReadyToCalc_InputModel model)
        {
            ___service.SetReadyToCalc(model.IpGroupID, model.IpInvoiceNum, model.IpVendorNum, model.IpCalcAll, model.IpCalledFromUI, ref model.Ds);

            return new SetReadyToCalc_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Purpose:
        /// Parameters:  none
        /// Notes:
        /// <param name="ipVendorNum">Vendor Num</param>
        /// <param name="ipInvoiceNum">Invoice Num</param>
        /// <param name="ipInvoiceLine">Invoice Line</param>
        /// <param name="ds">APInvoice dataset</param>
        /// </summary>
        [Route("SubCDataBtnClicked")]
        [HttpPost]
        public SubCDataBtnClicked_OutputModel SubCDataBtnClicked(SubCDataBtnClicked_InputModel model)
        {
            ___service.SubCDataBtnClicked(model.IpVendorNum, model.IpInvoiceNum, model.IpInvoiceLine, ref model.Ds);

            return new SubCDataBtnClicked_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when transferring an invoice to a different group.
        /// </summary>
        [Route("TransferInvoiceToGroup")]
        [HttpPost]
        public TransferInvoiceToGroup_OutputModel TransferInvoiceToGroup(TransferInvoiceToGroup_InputModel model)
        {
            System.Decimal grpTotalInvAmt;
            bool lEnableGenLegalNum;

            ___service.TransferInvoiceToGroup(model.TransferToGroupID, model.XferInvVendorNum, model.XferInvInvoiceNum, model.XferApplyDate, model.CGroupID, out grpTotalInvAmt, out lEnableGenLegalNum);

            return new TransferInvoiceToGroup_OutputModel
            {
                GrpTotalInvAmt = grpTotalInvAmt,
                LEnableGenLegalNum = lEnableGenLegalNum
            };
        }

        /// <summary>
        /// Updates an AP Invoice using a Logged Invoice.
        /// </summary>
        [Route("UpdAPInvoiceMatched")]
        [HttpPost]
        public UpdAPInvoiceMatched_OutputModel UpdAPInvoiceMatched(UpdAPInvoiceMatched_InputModel model)
        {
            ___service.UpdAPInvoiceMatched(model.TxtGroup, model.IntVendorNum, model.TxtInvoiceNum, ref model.Ds);

            return new UpdAPInvoiceMatched_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// </summary>
        [Route("UpdateMaster")]
        [HttpPost]
        public UpdateMaster_OutputModel UpdateMaster(UpdateMaster_InputModel model)
        {
            System.Decimal grpTotalInvAmt;
            bool requiresUserInput;
            string opMessage;
            string opMsgChkBankRef;
            string opChkRevMsg;
            bool lEnableGenLegalNum;
            bool lUpdateRan;
            string opDUAMsg;

            ___service.UpdateMaster(ref model.Ds, model.CGroupID, model.CTableName, model.RunChkCPay, model.RunChkBankRef, model.RunChkRevChrg, model.SuppressUserPrompts, out grpTotalInvAmt, out requiresUserInput, out opMessage, out opMsgChkBankRef, out opChkRevMsg, out lEnableGenLegalNum, out lUpdateRan, out opDUAMsg);

            return new UpdateMaster_OutputModel
            {
                Ds = model.Ds,
                GrpTotalInvAmt = grpTotalInvAmt,
                RequiresUserInput = requiresUserInput,
                OpMessage = opMessage,
                OpMsgChkBankRef = opMsgChkBankRef,
                OpChkRevMsg = opChkRevMsg,
                LEnableGenLegalNum = lEnableGenLegalNum,
                LUpdateRan = lUpdateRan,
                OpDUAMsg = opDUAMsg
            };
        }

        /// <summary>
        ///
        /// </summary>
        [Route("UpdGetLogAPInv")]
        [HttpPost]
        public UpdGetLogAPInv_OutputModel UpdGetLogAPInv(UpdGetLogAPInv_InputModel model)
        {
            ___service.UpdGetLogAPInv(ref model.Ds);

            return new UpdGetLogAPInv_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to determine if Purchase Codes are in use or not.  They are
        /// only in use when Financial Integration is implemented with Purchase Types.
        /// </summary>
        [Route("UsePurchaseCode")]
        [HttpPost]
        public UsePurchaseCode_OutputModel UsePurchaseCode()
        {
            bool UsePurchaseCode;

            ___service.UsePurchaseCode(out UsePurchaseCode);

            return new UsePurchaseCode_OutputModel
            {
                UsePurchaseCode = UsePurchaseCode
            };
        }

        /// <summary>
        /// Validate Banking References
        /// </summary>
        [Route("ValidateBankRefs")]
        [HttpPost]
        public ValidateBankRefs_OutputModel ValidateBankRefs(ValidateBankRefs_InputModel model)
        {
            string cErrorMsg;

            var ___result = ___service.ValidateBankRefs(model.IpGroupID, out cErrorMsg);

            return new ValidateBankRefs_OutputModel
            {
                CErrorMsg = cErrorMsg,
                _Return = ___result
            };
        }

        /// <summary>
        /// Validate InvoiceID and return a true if a logged invoice exist for it.
        /// </summary>
        [Route("ValidateInvoiceID")]
        [HttpPost]
        public ValidateInvoiceID_OutputModel ValidateInvoiceID(ValidateInvoiceID_InputModel model)
        {
            int intVendorNum;
            bool logAPInvFound;

            ___service.ValidateInvoiceID(model.TxtVendorID, model.TxtInvoiceNum, out intVendorNum, out logAPInvFound);

            return new ValidateInvoiceID_OutputModel
            {
                IntVendorNum = intVendorNum,
                LogAPInvFound = logAPInvFound
            };
        }

        /// <summary>
        /// Method to call when changing the rate code on a tax record.  Validates the rate and tax code
        /// </summary>
        [Route("ValidateTaxRateCodes")]
        [HttpPost]
        public ValidateTaxRateCodes_OutputModel ValidateTaxRateCodes(ValidateTaxRateCodes_InputModel model)
        {
            ___service.ValidateTaxRateCodes(model.ProposedRateCode, ref model.Ds);

            return new ValidateTaxRateCodes_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the CycleCode
        /// </summary>
        [Route("OnChangeCycleCode")]
        [HttpPost]
        public OnChangeCycleCode_OutputModel OnChangeCycleCode(OnChangeCycleCode_InputModel model)
        {
            ___service.OnChangeCycleCode(model.IpVendorNum, model.IpInvoiceNum, model.IpCycleCode, ref model.Ds);

            return new OnChangeCycleCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call when changing the CycleCode
        /// </summary>
        [Route("OnChangeRecurring")]
        [HttpPost]
        public OnChangeRecurring_OutputModel OnChangeRecurring(OnChangeRecurring_InputModel model)
        {
            ___service.OnChangeRecurring(model.IpVendorNum, model.IpInvoiceNum, model.IpRecurring, ref model.Ds);

            return new OnChangeRecurring_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Creates Recurring invoices from Source.
        /// </summary>
        [Route("CreateRecurInvoice")]
        [HttpPost]
        public CreateRecurInvoice_OutputModel CreateRecurInvoice(CreateRecurInvoice_InputModel model)
        {
            string opNewInvoiceNum;
            string opErrMsg;
            string inactiveVendorMsg;

            ___service.CreateRecurInvoice(model.IpVendorList, model.IpCycleCodesList, model.IpSelectedVendorNum, model.IpSelectedInvoiceNum, model.IpNewGroupID, model.IpFirstDayOfWeek, out opNewInvoiceNum, out opErrMsg, out inactiveVendorMsg);

            return new CreateRecurInvoice_OutputModel
            {
                OpNewInvoiceNum = opNewInvoiceNum,
                OpErrMsg = opErrMsg,
                InactiveVendorMsg = inactiveVendorMsg
            };
        }

        /// <summary>
        /// Invoices Recurring
        /// </summary>
        [Route("GetAPInvcRecurr")]
        [HttpPost]
        public GetAPInvcRecurr_OutputModel GetAPInvcRecurr(GetAPInvcRecurr_InputModel model)
        {
            ___service.GetAPInvcRecurr(model.VendorNum, model.InvoiceNum, ref model.Ds);

            return new GetAPInvcRecurr_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Invoices Recurring
        /// </summary>
        [Route("GetAPInvRecurInfo")]
        [HttpPost]
        public GetAPInvRecurInfo_OutputModel GetAPInvRecurInfo(GetAPInvRecurInfo_InputModel model)
        {
            System.DateTime? outNexInvDate;

            ___service.GetAPInvRecurInfo(model.IpVendorNum, model.IpInvoiceNum, model.IpFirstDayOfWeek, out outNexInvDate);

            return new GetAPInvRecurInfo_OutputModel
            {
                OutNexInvDate = outNexInvDate
            };
        }

        /// <summary>
        /// Occurs when Invoice Line Deferred Expense switch changed
        /// </summary>
        [Route("OnChangeLineDefferedExp")]
        [HttpPost]
        public OnChangeLineDefferedExp_OutputModel OnChangeLineDefferedExp(OnChangeLineDefferedExp_InputModel model)
        {
            ___service.OnChangeLineDefferedExp(model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.IpDefExp, ref model.Ds);

            return new OnChangeLineDefferedExp_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Validate entered Commodity Code
        /// </summary>
        [Route("OnChangeLineCommodityCode")]
        [HttpPost]
        public OnChangeLineCommodityCode_OutputModel OnChangeLineCommodityCode(OnChangeLineCommodityCode_InputModel model)
        {
            ___service.OnChangeLineCommodityCode(model.NewCommodityCode, ref model.Ds);

            return new OnChangeLineCommodityCode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Occurs when Invoice Line DEA Code changed
        /// </summary>
        [Route("OnChangeLineDEACode")]
        [HttpPost]
        public OnChangeLineDEACode_OutputModel OnChangeLineDEACode(OnChangeLineDEACode_InputModel model)
        {
            ___service.OnChangeLineDEACode(model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.DeaCode, ref model.Ds);

            return new OnChangeLineDEACode_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Occurs when Invoice Line DEA Start Date changed
        /// </summary>
        [Route("OnChangeLineDEAStartDate")]
        [HttpPost]
        public OnChangeLineDEAStartDate_OutputModel OnChangeLineDEAStartDate(OnChangeLineDEAStartDate_InputModel model)
        {
            ___service.OnChangeLineDEAStartDate(model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.StartDate, ref model.Ds);

            return new OnChangeLineDEAStartDate_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Generates Amortization Schedule
        /// </summary>
        [Route("GenerateAmortizationSchedule")]
        [HttpPost]
        public GenerateAmortizationSchedule_OutputModel GenerateAmortizationSchedule(GenerateAmortizationSchedule_InputModel model)
        {
            ___service.GenerateAmortizationSchedule(model.VendorNum, model.InvoiceNum, model.InvoiceLine, ref model.Ds);

            return new GenerateAmortizationSchedule_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Deletes Amortization Schedule
        /// </summary>
        [Route("DeleteAmortizationSchedule")]
        [HttpPost]
        public DeleteAmortizationSchedule_OutputModel DeleteAmortizationSchedule(DeleteAmortizationSchedule_InputModel model)
        {
            ___service.DeleteAmortizationSchedule(model.VendorNum, model.InvoiceNum, model.InvoiceLine, ref model.Ds);

            return new DeleteAmortizationSchedule_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Occurs when DEA Schedule Line Amortization Amount changed
        /// </summary>
        [Route("OnChangeDEAScheduleLineAmount")]
        [HttpPost]
        public OnChangeDEAScheduleLineAmount_OutputModel OnChangeDEAScheduleLineAmount(OnChangeDEAScheduleLineAmount_InputModel model)
        {
            ___service.OnChangeDEAScheduleLineAmount(model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.AmortSeq, model.SrcField, model.PropValue, ref model.Ds);

            return new OnChangeDEAScheduleLineAmount_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Occurs when DEA Schedule Line Fiscal Period changed
        /// </summary>
        [Route("OnChangeDEAScheduleLineFiscalPeriod")]
        [HttpPost]
        public OnChangeDEAScheduleLineFiscalPeriod_OutputModel OnChangeDEAScheduleLineFiscalPeriod(OnChangeDEAScheduleLineFiscalPeriod_InputModel model)
        {
            ___service.OnChangeDEAScheduleLineFiscalPeriod(model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.AmortSeq, model.SrcField, ref model.Ds);

            return new OnChangeDEAScheduleLineFiscalPeriod_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Applies Remaining Amount to the last Schedule Line
        /// </summary>
        [Route("AutocompleteAmortizationSchedule")]
        [HttpPost]
        public AutocompleteAmortizationSchedule_OutputModel AutocompleteAmortizationSchedule(AutocompleteAmortizationSchedule_InputModel model)
        {
            ___service.AutocompleteAmortizationSchedule(model.VendorNum, model.InvoiceNum, model.InvoiceLine, ref model.Ds);

            return new AutocompleteAmortizationSchedule_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Calculates Deferred Expense Amortization Total Amounts
        /// </summary>
        [Route("CalculateAmortizationTotals")]
        [HttpPost]
        public CalculateAmortizationTotals_OutputModel CalculateAmortizationTotals(CalculateAmortizationTotals_InputModel model)
        {
            ___service.CalculateAmortizationTotals(model.VendorNum, model.InvoiceNum, model.InvoiceLine, ref model.Ds);

            return new CalculateAmortizationTotals_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Gets Default Deferred Expense Amortization Accounts
        /// </summary>
        [Route("GetDefaultAmortizationAccounts")]
        [HttpPost]
        public GetDefaultAmortizationAccounts_OutputModel GetDefaultAmortizationAccounts(GetDefaultAmortizationAccounts_InputModel model)
        {
            ___service.GetDefaultAmortizationAccounts(model.VendorNum, model.InvoiceNum, model.InvoiceLine, ref model.Ds);

            return new GetDefaultAmortizationAccounts_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Deletes Amortization Schedules for all Invoice Lines of the Group
        /// </summary>
        [Route("DeleteAmortizationSchedulesOfGroup")]
        [HttpPost]
        public DeleteAmortizationSchedulesOfGroup_OutputModel DeleteAmortizationSchedulesOfGroup(DeleteAmortizationSchedulesOfGroup_InputModel model)
        {
            ___service.DeleteAmortizationSchedulesOfGroup(model.GroupID, model.VendorNum, model.InvoiceNum, model.InvoiceLine, ref model.Ds);

            return new DeleteAmortizationSchedulesOfGroup_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Generates Amortization Schedules for all Invoice Lines of the Group
        /// </summary>
        [Route("GenerateAmortizationSchedulesForGroup")]
        [HttpPost]
        public GenerateAmortizationSchedulesForGroup_OutputModel GenerateAmortizationSchedulesForGroup(GenerateAmortizationSchedulesForGroup_InputModel model)
        {
            ___service.GenerateAmortizationSchedulesForGroup(model.GroupID, model.VendorNum, model.InvoiceNum, model.InvoiceLine, ref model.Ds);

            return new GenerateAmortizationSchedulesForGroup_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Restores default Amortization Schedules for all Invoice Lines of the Group
        /// </summary>
        [Route("RestoreAmortizationSchedulesOfGroup")]
        [HttpPost]
        public RestoreAmortizationSchedulesOfGroup_OutputModel RestoreAmortizationSchedulesOfGroup(RestoreAmortizationSchedulesOfGroup_InputModel model)
        {
            ___service.RestoreAmortizationSchedulesOfGroup(model.GroupID, model.VendorNum, model.InvoiceNum, model.InvoiceLine, ref model.Ds);

            return new RestoreAmortizationSchedulesOfGroup_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Validates that all Deferred Expense Lines are scheduled. If no than throws Exception
        /// </summary>
        [Route("ValidateAllDeferredLinesAreScheduled")]
        [HttpPost]
        public void ValidateAllDeferredLinesAreScheduled(ValidateAllDeferredLinesAreScheduled_InputModel model)
        {
            ___service.ValidateAllDeferredLinesAreScheduled(model.GroupID);
        }

        /// <summary>
        /// Validates that all Deferred Expense Lines have GLAccount selected. If no then throws Exception
        /// </summary>
        [Route("ValidateAllDeferredLinesHaveGLAccount")]
        [HttpPost]
        public void ValidateAllDeferredLinesHaveGLAccount(ValidateAllDeferredLinesHaveGLAccount_InputModel model)
        {
            ___service.ValidateAllDeferredLinesHaveGLAccount(model.GroupID);
        }

        /// <param name="ds"></param>
        /// <param name="VendorNum">The APInvHed Vendor Number</param>
        /// <param name="PurPoint">The PackSlip of the current receipt</param>
        /// <param name="PackSlip">The PackSlip of the current receipt.</param>
        /// <param name="isFirstReceipt">Used to calculate the BaseAmount when is not the fist row</param>
        /// <param name="InvoiceNum">The current InvoiceNum.</param>
        /// <param name="InPONum">The PO Number to retrieve uninvoiced receipts for.  May be blank.</param>
        [Route("GetAPUninvoicedReceiptLines")]
        [HttpPost]
        public GetAPUninvoicedReceiptLines_OutputModel GetAPUninvoicedReceiptLines(GetAPUninvoicedReceiptLines_InputModel model)
        {
            ___service.GetAPUninvoicedReceiptLines(ref model.Ds, model.VendorNum, model.PurPoint, model.PackSlip, model.IsFirstReceipt, model.InvoiceNum, model.InPONum);

            return new GetAPUninvoicedReceiptLines_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Retrieves lines for a DropShipment
        /// </summary>
        [Route("GetAPUninvoicedDropShipmentLines")]
        [HttpPost]
        public GetAPUninvoicedDropShipmentLines_OutputModel GetAPUninvoicedDropShipmentLines(GetAPUninvoicedDropShipmentLines_InputModel model)
        {
            ___service.GetAPUninvoicedDropShipmentLines(model.VendorNum, model.PurPoint, model.PackSlip, model.InvoiceNum, ref model.Ds);

            return new GetAPUninvoicedDropShipmentLines_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method should be called when the Tax Region on the invoice detail record is changed.
        /// </summary>
        [Route("OnChangeofLineTaxRgn")]
        [HttpPost]
        public OnChangeofLineTaxRgn_OutputModel OnChangeofLineTaxRgn(OnChangeofLineTaxRgn_InputModel model)
        {
            ___service.OnChangeofLineTaxRgn(model.ITaxRegionCode, ref model.Ds);

            return new OnChangeofLineTaxRgn_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This methos return APsyst.AllowMultInvcReceipt value.
        /// </summary>
        [Route("GetAllowMultInvcReceiptsValue")]
        [HttpPost]
        public GetAllowMultInvcReceiptsValue_OutputModel GetAllowMultInvcReceiptsValue()
        {
            bool flag;

            ___service.GetAllowMultInvcReceiptsValue(out flag);

            return new GetAllowMultInvcReceiptsValue_OutputModel
            {
                Flag = flag
            };
        }

        /// <summary>
        /// Method to create Not Invoiced Receipts
        /// </summary>
        [Route("CreateNotInvRcptInvoice")]
        [HttpPost]
        public CreateNotInvRcptInvoice_OutputModel CreateNotInvRcptInvoice(CreateNotInvRcptInvoice_InputModel model)
        {
            string opNewInvoiceNum;
            string opErrMsg;

            ___service.CreateNotInvRcptInvoice(ref model.Ds, model.SelectionMode, model.IpVendorList, model.IpNewGroupID, model.InvoiceNum, model.InvoiceDate, model.DocTypeID, out opNewInvoiceNum, out opErrMsg);

            return new CreateNotInvRcptInvoice_OutputModel
            {
                Ds = model.Ds,
                OpNewInvoiceNum = opNewInvoiceNum,
                OpErrMsg = opErrMsg
            };
        }

        /// <summary>
        /// Create COS and WIP:ADJ-PUR transactions and performs variance calculation.
        /// </summary>
        [Route("PostGRNIClearingInvoices")]
        [HttpPost]
        public PostGRNIClearingInvoices_OutputModel PostGRNIClearingInvoices(PostGRNIClearingInvoices_InputModel model)
        {
            string Result;

            ___service.PostGRNIClearingInvoices(out Result, model.GroupID, model.InvoiceNum, model.VendorNum, model.TranDocType, ref model.Ds);

            return new PostGRNIClearingInvoices_OutputModel
            {
                Result = Result,
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to validate if exists an invoiced receipt with unposted invoice
        /// </summary>
        [Route("ValidateNotPostedInvoices")]
        [HttpPost]
        public ValidateNotPostedInvoices_OutputModel ValidateNotPostedInvoices(ValidateNotPostedInvoices_InputModel model)
        {
            var ___result = ___service.ValidateNotPostedInvoices(model.IpVendorList);

            return new ValidateNotPostedInvoices_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// This method populates the APInvHedTransferList table on the loaded group.
        /// </summary>
        [Route("GetAPInvHedTransferList")]
        [HttpPost]
        public GetAPInvHedTransferList_OutputModel GetAPInvHedTransferList(GetAPInvHedTransferList_InputModel model)
        {
            ___service.GetAPInvHedTransferList(ref model.Ds, model.GroupID);

            return new GetAPInvHedTransferList_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Determines if a group id exists in the database.
        /// </summary>
        [Route("ValidateGroupID")]
        [HttpPost]
        public ValidateGroupID_OutputModel ValidateGroupID(ValidateGroupID_InputModel model)
        {
            var ___result = ___service.ValidateGroupID(model.SGroupID);

            return new ValidateGroupID_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Creates a new APInvGrp to transfer Invoices to.
        /// </summary>
        [Route("CreateAPInvGrp")]
        [HttpPost]
        public void CreateAPInvGrp(CreateAPInvGrp_InputModel model)
        {
            ___service.CreateAPInvGrp(model.SFromGroupID, model.SToGrouID);
        }

        /// <summary>
        /// GetDfltDocumentType
        /// </summary>
        [Route("GetDfltDocumentType")]
        [HttpPost]
        public GetDfltDocumentType_OutputModel GetDfltDocumentType(GetDfltDocumentType_InputModel model)
        {
            string outTranDocTypeID;

            ___service.GetDfltDocumentType(model.InSystemTranID, out outTranDocTypeID);

            return new GetDfltDocumentType_OutputModel
            {
                OutTranDocTypeID = outTranDocTypeID
            };
        }

        /// <summary>
        /// Sets default values when the TranDocTypeID changes
        /// </summary>
        [Route("OnChangeCorrTranDocTypeID")]
        [HttpPost]
        public void OnChangeCorrTranDocTypeID(OnChangeCorrTranDocTypeID_InputModel model)
        {
            ___service.OnChangeCorrTranDocTypeID(model.IpTranDocTypeID, model.IpSystemTranID);
        }

        /// <summary>
        /// Commits the DataSet changes to the data store.
        /// </summary>
        [Route("UpdateTaxAdjustment")]
        [HttpPost]
        [System.ObsoleteAttribute("This method is obsolete.")]
        public UpdateTaxAdjustment_OutputModel UpdateTaxAdjustment(UpdateTaxAdjustment_InputModel model)
        {
            ___service.UpdateTaxAdjustment(ref model.Ds);

            return new UpdateTaxAdjustment_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This method will validate if a Invoice requires user Input for Legal Numbers
        /// </summary>
        [Route("PreUpdate")]
        [HttpPost]
        public PreUpdate_OutputModel PreUpdate(PreUpdate_InputModel model)
        {
            bool requiresUserInput;

            ___service.PreUpdate(ref model.Ds, out requiresUserInput);

            return new PreUpdate_OutputModel
            {
                Ds = model.Ds,
                RequiresUserInput = requiresUserInput
            };
        }

        /// <summary>
        /// CSF Poland. Validate unique of PLInvoiceReference for selected supplier
        /// </summary>
        [Route("ValidatePLInvoiceReference")]
        [HttpPost]
        public ValidatePLInvoiceReference_OutputModel ValidatePLInvoiceReference(ValidatePLInvoiceReference_InputModel model)
        {
            bool isLogAPInvFound;
            string logAPInvNum;

            ___service.ValidatePLInvoiceReference(model.IntVendorNum, model.TxtInvoiceNum, model.TxtPLInvoiceReference, out isLogAPInvFound, out logAPInvNum);

            return new ValidatePLInvoiceReference_OutputModel
            {
                IsLogAPInvFound = isLogAPInvFound,
                LogAPInvNum = logAPInvNum
            };
        }

        /// <summary>
        /// Pre-check for UpdateExt to validate and return invoice data
        /// </summary>
        [Route("PreInvoice")]
        [HttpPost]
        public PreInvoice_OutputModel PreInvoice(PreInvoice_InputModel model)
        {
            bool errorsOccurred;

            var ___result = ___service.PreInvoice(ref model.Ds, model.ContinueProcessingOnError, model.RecalculateByExtCost, model.RollbackParentOnChildError, out errorsOccurred);

            return new PreInvoice_OutputModel
            {
                Ds = model.Ds,
                ErrorsOccurred = errorsOccurred,
                _Return = ___result
            };
        }

        /// <summary>
        /// It wraps the UpdateExt to refresh and return up-to-date invoice data
        /// </summary>
        [Route("UpdateMasterExt")]
        [HttpPost]
        public UpdateMasterExt_OutputModel UpdateMasterExt(UpdateMasterExt_InputModel model)
        {
            bool errorsOccurred;

            var ___result = ___service.UpdateMasterExt(ref model.Ds, model.ContinueProcessingOnError, model.RecalculateByExtCost, model.RollbackParentOnChildError, out errorsOccurred);

            return new UpdateMasterExt_OutputModel
            {
                Ds = model.Ds,
                ErrorsOccurred = errorsOccurred,
                _Return = ___result
            };
        }

        /// <summary>
        /// Supplier Tax Id check
        /// </summary>
        [Route("CheckVendorTaxID")]
        [HttpPost]
        public CheckVendorTaxID_OutputModel CheckVendorTaxID(CheckVendorTaxID_InputModel model)
        {
            string errMessage;

            ___service.CheckVendorTaxID(model.VendorID, out errMessage);

            return new CheckVendorTaxID_OutputModel
            {
                ErrMessage = errMessage
            };
        }

        /// <summary>
        /// Check for Vendor TaxId in Payments Group
        /// </summary>
        [Route("CheckGroupTaxID")]
        [HttpPost]
        public CheckGroupTaxID_OutputModel CheckGroupTaxID(CheckGroupTaxID_InputModel model)
        {
            string errMessage;

            ___service.CheckGroupTaxID(model.GroupID, out errMessage);

            return new CheckGroupTaxID_OutputModel
            {
                ErrMessage = errMessage
            };
        }

        /// <summary>
        /// Method to get plastic packaging tax cost lines.
        /// </summary>
        [Route("GetPlasticPackTaxCostLines")]
        [HttpPost]
        public GetPlasticPackTaxCostLines_OutputModel GetPlasticPackTaxCostLines(GetPlasticPackTaxCostLines_InputModel model)
        {
            ___service.GetPlasticPackTaxCostLines(ref model.Ds, model.PlasticPackTaxReportID, model.InvVendorNum, model.InvNum, model.InvMscNum);

            return new GetPlasticPackTaxCostLines_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to get Late Costs from PO Receipts or Containers.
        /// </summary>
        [Route("GetAPLateCosts")]
        [HttpPost]
        public GetAPLateCosts_OutputModel GetAPLateCosts(GetAPLateCosts_InputModel model)
        {
            ___service.GetAPLateCosts(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InPONum, model.InContainerID);

            return new GetAPLateCosts_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to get Late Costs Lines for selected PO Receipt or container
        /// </summary>
        [Route("GetAPLateCostLines")]
        [HttpPost]
        public GetAPLateCostLines_OutputModel GetAPLateCostLines(GetAPLateCostLines_InputModel model)
        {
            ___service.GetAPLateCostLines(ref model.Ds, model.VendorNum, model.PurPoint, model.PackSlip, model.ContainerID, model.InvoiceNum);

            return new GetAPLateCostLines_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to select Late Costs Lines
        /// </summary>
        [Route("SelectUninvoicedLateCosts")]
        [HttpPost]
        public SelectUninvoicedLateCosts_OutputModel SelectUninvoicedLateCosts(SelectUninvoicedLateCosts_InputModel model)
        {
            ___service.SelectUninvoicedLateCosts(ref model.Ds, model.VendorNum, model.PurPoint, model.PackSlip, model.ContainerID, model.InvoiceNum);

            return new SelectUninvoicedLateCosts_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to deselect selected Late Cost Lines
        /// </summary>
        [Route("DeselectSelectedLateCosts")]
        [HttpPost]
        public DeselectSelectedLateCosts_OutputModel DeselectSelectedLateCosts(DeselectSelectedLateCosts_InputModel model)
        {
            ___service.DeselectSelectedLateCosts(ref model.Ds, model.VendorNum, model.PurPoint, model.PackSlip, model.ContainerID, model.InvoiceNum);

            return new DeselectSelectedLateCosts_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Method to call to invoice selected Late Cost Lines
        /// </summary>
        [Route("InvoiceSelectedLateCosts")]
        [HttpPost]
        public InvoiceSelectedLateCosts_OutputModel InvoiceSelectedLateCosts(InvoiceSelectedLateCosts_InputModel model)
        {
            ___service.InvoiceSelectedLateCosts(ref model.Ds);

            return new InvoiceSelectedLateCosts_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// This Method will check if the sum of DocActualAmt values of records in RcvMisc table for an specific packslip and packline won't be negative after deleting the current late cost
        /// </summary>
        [Route("ValidateRcvMiscSumBeforeDeleteLateCost")]
        [HttpPost]
        public ValidateRcvMiscSumBeforeDeleteLateCost_OutputModel ValidateRcvMiscSumBeforeDeleteLateCost(ValidateRcvMiscSumBeforeDeleteLateCost_InputModel model)
        {
            string warningMessage;

            var ___result = ___service.ValidateRcvMiscSumBeforeDeleteLateCost(model.VendorNum, model.InvoiceNum, model.MscNum, out warningMessage);

            return new ValidateRcvMiscSumBeforeDeleteLateCost_OutputModel
            {
                WarningMessage = warningMessage,
                _Return = ___result
            };
        }

        /// <summary>
        /// This Method will check if the sum of DocActualAmt values of records in RcvMisc table for an specific packslip and packline won't be negative after deleting the current late cost
        /// </summary>
        [Route("ValidateRcvMiscBeforeDeleteLateCost")]
        [HttpPost]
        public ValidateRcvMiscBeforeDeleteLateCost_OutputModel ValidateRcvMiscBeforeDeleteLateCost(ValidateRcvMiscBeforeDeleteLateCost_InputModel model)
        {
            string warningMessage;

            var ___result = ___service.ValidateRcvMiscBeforeDeleteLateCost(model.VendorNum, model.InvoiceNum, model.MscNum, model.MiscSeq, out warningMessage);

            return new ValidateRcvMiscBeforeDeleteLateCost_OutputModel
            {
                WarningMessage = warningMessage,
                _Return = ___result
            };
        }

        /// <summary>
        /// This Method will check if the current late cost selected will not create a negative RcvMisc and send a warning message.
        /// </summary>
        [Route("ValidateLateCostBeforeAllocate")]
        [HttpPost]
        public ValidateLateCostBeforeAllocate_OutputModel ValidateLateCostBeforeAllocate(ValidateLateCostBeforeAllocate_InputModel model)
        {
            string warningMessage;

            var ___result = ___service.ValidateLateCostBeforeAllocate(ref model.Ds, out warningMessage);

            return new ValidateLateCostBeforeAllocate_OutputModel
            {
                Ds = model.Ds,
                WarningMessage = warningMessage,
                _Return = ___result
            };
        }

        /// <summary>
        /// This method will change the invoice number on the invoice specified by the vendorNum and oldInvoiceNum values.
        /// </summary>
        [Route("ChangeInvoiceNumber")]
        [HttpPost]
        public ChangeInvoiceNumber_OutputModel ChangeInvoiceNumber(ChangeInvoiceNumber_InputModel model)
        {
            var ___result = ___service.ChangeInvoiceNumber(model.VendorNum, model.OriginalInvoiceNum, model.NewInvoiceNum);

            return new ChangeInvoiceNumber_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvHed")]
        [HttpPost]
        public GetNewAPInvHed_OutputModel GetNewAPInvHed(GetNewAPInvHed_InputModel model)
        {
            ___service.GetNewAPInvHed(ref model.Ds, model.VendorNum);

            return new GetNewAPInvHed_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvHedAttch")]
        [HttpPost]
        public GetNewAPInvHedAttch_OutputModel GetNewAPInvHedAttch(GetNewAPInvHedAttch_InputModel model)
        {
            ___service.GetNewAPInvHedAttch(ref model.Ds, model.VendorNum, model.InvoiceNum);

            return new GetNewAPInvHedAttch_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPIHAPInvExp")]
        [HttpPost]
        public GetNewAPIHAPInvExp_OutputModel GetNewAPIHAPInvExp(GetNewAPIHAPInvExp_InputModel model)
        {
            ___service.GetNewAPIHAPInvExp(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine);

            return new GetNewAPIHAPInvExp_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPIHAPInvExpTGLC")]
        [HttpPost]
        public GetNewAPIHAPInvExpTGLC_OutputModel GetNewAPIHAPInvExpTGLC(GetNewAPIHAPInvExpTGLC_InputModel model)
        {
            ___service.GetNewAPIHAPInvExpTGLC(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.InvExpSeq);

            return new GetNewAPIHAPInvExpTGLC_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPIHAPInvMsc")]
        [HttpPost]
        public GetNewAPIHAPInvMsc_OutputModel GetNewAPIHAPInvMsc(GetNewAPIHAPInvMsc_InputModel model)
        {
            ___service.GetNewAPIHAPInvMsc(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine);

            return new GetNewAPIHAPInvMsc_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewRcvMisc")]
        [HttpPost]
        public GetNewRcvMisc_OutputModel GetNewRcvMisc(GetNewRcvMisc_InputModel model)
        {
            ___service.GetNewRcvMisc(ref model.Ds, model.VendorNum, model.PurPoint, model.PackSlip);

            return new GetNewRcvMisc_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPIHAPLnTax")]
        [HttpPost]
        public GetNewAPIHAPLnTax_OutputModel GetNewAPIHAPLnTax(GetNewAPIHAPLnTax_InputModel model)
        {
            ___service.GetNewAPIHAPLnTax(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.TaxCode, model.RateCode);

            return new GetNewAPIHAPLnTax_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvDtl")]
        [HttpPost]
        public GetNewAPInvDtl_OutputModel GetNewAPInvDtl(GetNewAPInvDtl_InputModel model)
        {
            ___service.GetNewAPInvDtl(ref model.Ds, model.VendorNum, model.InvoiceNum);

            return new GetNewAPInvDtl_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvDtlAttch")]
        [HttpPost]
        public GetNewAPInvDtlAttch_OutputModel GetNewAPInvDtlAttch(GetNewAPInvDtlAttch_InputModel model)
        {
            ___service.GetNewAPInvDtlAttch(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine);

            return new GetNewAPInvDtlAttch_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvDtlDEASch")]
        [HttpPost]
        public GetNewAPInvDtlDEASch_OutputModel GetNewAPInvDtlDEASch(GetNewAPInvDtlDEASch_InputModel model)
        {
            ___service.GetNewAPInvDtlDEASch(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine);

            return new GetNewAPInvDtlDEASch_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvExp")]
        [HttpPost]
        public GetNewAPInvExp_OutputModel GetNewAPInvExp(GetNewAPInvExp_InputModel model)
        {
            ___service.GetNewAPInvExp(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine);

            return new GetNewAPInvExp_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvExpTGLC")]
        [HttpPost]
        public GetNewAPInvExpTGLC_OutputModel GetNewAPInvExpTGLC(GetNewAPInvExpTGLC_InputModel model)
        {
            ___service.GetNewAPInvExpTGLC(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.InvExpSeq);

            return new GetNewAPInvExpTGLC_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewGlbAPIETGLC")]
        [HttpPost]
        public GetNewGlbAPIETGLC_OutputModel GetNewGlbAPIETGLC(GetNewGlbAPIETGLC_InputModel model)
        {
            ___service.GetNewGlbAPIETGLC(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.InvExpSeq);

            return new GetNewGlbAPIETGLC_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvJob")]
        [HttpPost]
        public GetNewAPInvJob_OutputModel GetNewAPInvJob(GetNewAPInvJob_InputModel model)
        {
            ___service.GetNewAPInvJob(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.JobNum, model.AssemblySeq, model.MtlSeq);

            return new GetNewAPInvJob_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvMsc")]
        [HttpPost]
        public GetNewAPInvMsc_OutputModel GetNewAPInvMsc(GetNewAPInvMsc_InputModel model)
        {
            ___service.GetNewAPInvMsc(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine);

            return new GetNewAPInvMsc_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvLnMscTax")]
        [HttpPost]
        public GetNewAPInvLnMscTax_OutputModel GetNewAPInvLnMscTax(GetNewAPInvLnMscTax_InputModel model)
        {
            ___service.GetNewAPInvLnMscTax(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.MscNum, model.ApInvMscSysRowID, model.TaxCode, model.RateCode);

            return new GetNewAPInvLnMscTax_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvPB")]
        [HttpPost]
        public GetNewAPInvPB_OutputModel GetNewAPInvPB(GetNewAPInvPB_InputModel model)
        {
            ___service.GetNewAPInvPB(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine);

            return new GetNewAPInvPB_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPLnTax")]
        [HttpPost]
        public GetNewAPLnTax_OutputModel GetNewAPLnTax(GetNewAPLnTax_InputModel model)
        {
            ___service.GetNewAPLnTax(ref model.Ds, model.VendorNum, model.InvoiceNum, model.InvoiceLine, model.TaxCode, model.RateCode);

            return new GetNewAPLnTax_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvDtlTGLC")]
        [HttpPost]
        public GetNewAPInvDtlTGLC_OutputModel GetNewAPInvDtlTGLC(GetNewAPInvDtlTGLC_InputModel model)
        {
            ___service.GetNewAPInvDtlTGLC(ref model.Ds);

            return new GetNewAPInvDtlTGLC_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvHedMscTax")]
        [HttpPost]
        public GetNewAPInvHedMscTax_OutputModel GetNewAPInvHedMscTax(GetNewAPInvHedMscTax_InputModel model)
        {
            ___service.GetNewAPInvHedMscTax(ref model.Ds, model.VendorNum, model.InvoiceNum, model.MscNum, model.ApInvMscSysRowID, model.TaxCode, model.RateCode);

            return new GetNewAPInvHedMscTax_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvSched")]
        [HttpPost]
        public GetNewAPInvSched_OutputModel GetNewAPInvSched(GetNewAPInvSched_InputModel model)
        {
            ___service.GetNewAPInvSched(ref model.Ds, model.VendorNum, model.InvoiceNum);

            return new GetNewAPInvSched_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewAPInvTax")]
        [HttpPost]
        public GetNewAPInvTax_OutputModel GetNewAPInvTax(GetNewAPInvTax_InputModel model)
        {
            ___service.GetNewAPInvTax(ref model.Ds, model.VendorNum, model.InvoiceNum, model.TaxCode, model.RateCode);

            return new GetNewAPInvTax_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewPESUNATDtl")]
        [HttpPost]
        public GetNewPESUNATDtl_OutputModel GetNewPESUNATDtl(GetNewPESUNATDtl_InputModel model)
        {
            ___service.GetNewPESUNATDtl(ref model.Ds, model.VendorNum, model.InvoiceNum);

            return new GetNewPESUNATDtl_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewEntityGLC")]
        [HttpPost]
        public GetNewEntityGLC_OutputModel GetNewEntityGLC(GetNewEntityGLC_InputModel model)
        {
            ___service.GetNewEntityGLC(ref model.Ds, model.RelatedToFile, model.Key1, model.Key2, model.Key3, model.Key4, model.Key5, model.Key6);

            return new GetNewEntityGLC_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Inserts a new row in the DataSet with defaults populated.
        /// </summary>
        [Route("GetNewPEAPInvTax")]
        [HttpPost]
        public GetNewPEAPInvTax_OutputModel GetNewPEAPInvTax(GetNewPEAPInvTax_InputModel model)
        {
            ___service.GetNewPEAPInvTax(ref model.Ds, model.VendorNum, model.InvoiceNum);

            return new GetNewPEAPInvTax_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Deletes a row given its ID.
        /// </summary>
        [Route("DeleteByID")]
        [HttpPost]
        public void DeleteByID(DeleteByID_InputModel model)
        {
            ___service.DeleteByID(model.VendorNum, model.InvoiceNum);
        }

        /// <summary>
        /// Returns a DataSet given the primary key.
        /// </summary>
        [Route("GetByID")]
        [HttpPost]
        public GetByID_OutputModel GetByID(GetByID_InputModel model)
        {
            var ___result = ___service.GetByID(model.VendorNum, model.InvoiceNum);

            return new GetByID_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Returns a list of rows that satisfy the where clause.
        /// </summary>
        [Route("GetList")]
        [HttpPost]
        public GetList_OutputModel GetList(GetList_InputModel model)
        {
            bool morePages;

            var ___result = ___service.GetList(model.WhereClause, model.PageSize, model.AbsolutePage, out morePages);

            return new GetList_OutputModel
            {
                MorePages = morePages,
                _Return = ___result
            };
        }

        /// <summary>
        /// Returns a dataset containing all rows that satisfy the where clauses.
        /// </summary>
        [Route("GetRows")]
        [HttpPost]
        public GetRows_OutputModel GetRows(GetRows_InputModel model)
        {
            bool morePages;

            var ___result = ___service.GetRows(model.WhereClauseAPInvHed, model.WhereClauseAPInvHedAttch, model.WhereClauseAPIHAPInvExp, model.WhereClauseAPIHAPInvExpTGLC, model.WhereClauseAPIHAPInvMsc, model.WhereClauseRcvMisc, model.WhereClauseAPIHAPLnTax, model.WhereClauseAPInvDtl, model.WhereClauseAPInvDtlAttch, model.WhereClauseAPInvDtlDEASch, model.WhereClauseAPInvExp, model.WhereClauseAPInvExpTGLC, model.WhereClauseGlbAPIETGLC, model.WhereClauseAPInvJob, model.WhereClauseAPInvMsc, model.WhereClauseAPInvLnMscTax, model.WhereClauseAPInvPB, model.WhereClauseAPLnTax, model.WhereClauseAPInvDtlTGLC, model.WhereClauseAPInvHedMscTax, model.WhereClauseAPInvSched, model.WhereClauseAPInvTax, model.WhereClausePESUNATDtl, model.WhereClauseEntityGLC, model.WhereClausePEAPInvTax, model.WhereClauseAdditionalForms_ParametersView, model.WhereClauseLegalNumGenOpts, model.WhereClauseSupplierXRef, model.WhereClauseTaxConnectStatus, model.PageSize, model.AbsolutePage, out morePages);

            return new GetRows_OutputModel
            {
                MorePages = morePages,
                _Return = ___result
            };
        }

        /// <summary>
        /// </summary>
        [Route("GetBySysRowID")]
        [HttpPost]
        public GetBySysRowID_OutputModel GetBySysRowID(GetBySysRowID_InputModel model)
        {
            var ___result = ___service.GetBySysRowID(model.Id);

            return new GetBySysRowID_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// </summary>
        [Route("GetBySysRowIDs")]
        [HttpPost]
        public GetBySysRowIDs_OutputModel GetBySysRowIDs(GetBySysRowIDs_InputModel model)
        {
            var ___result = ___service.GetBySysRowIDs(model.Ids);

            return new GetBySysRowIDs_OutputModel
            {
                _Return = ___result
            };
        }

        /// <summary>
        /// Commits the DataSet changes to the data store.
        /// </summary>
        [Route("Update")]
        [HttpPost]
        public Update_OutputModel Update(Update_InputModel model)
        {
            ___service.Update(ref model.Ds);

            return new Update_OutputModel
            {
                Ds = model.Ds
            };
        }

        /// <summary>
        /// Apply input data to service by calling GetByID/GetNew/Update methods.
        /// </summary>
        [Route("UpdateExt")]
        [HttpPost]
        public UpdateExt_OutputModel UpdateExt(UpdateExt_InputModel model)
        {
            bool errorsOccurred;

            var ___result = ___service.UpdateExt(ref model.Ds, model.ContinueProcessingOnError, model.RollbackParentOnChildError, out errorsOccurred);

            return new UpdateExt_OutputModel
            {
                Ds = model.Ds,
                ErrorsOccurred = errorsOccurred,
                _Return = ___result
            };
        }
    }
}

namespace Erp.Models.BO.APInvoice
{
    public class InvokeLocateGroupID_InputModel
    {
        public string IpLocGrpInvoiceNum;
        public string IpLocGrpVendorID;
    }

    public class InvokeLocateGroupID_OutputModel
    {
        public string OutLocGrpVendorID;
        public string GroupID;
    }

    public class TransferAPInvoices_InputModel
    {
        public string TransferGroupID;
        public string CurrentGroupID;
        public Erp.Tablesets.APInvHedListTableset Ds;
    }

    public class TransferAPInvoices_OutputModel
    {
        public Erp.Tablesets.APInvHedListTableset Ds;
        public string GrpNotFound;
    }

    public class ValidateOriginalInvoice_InputModel
    {
        public string IpInvoiceNum;
    }

    public class ValidateOriginalInvoice_OutputModel
    {
        public int OpVendorNum;
        public bool OpMultipleInvcsFound;
    }

    public class SelectUninvoicedRcptLines_AdditionalActions_InputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
        public int InVendorNum;
        public string InPurPoint;
        public int InPONum;
        public string InPackSlip;
        public bool InDropShip;
        public string InvoiceNum;
        public bool InGRNIClearing;
    }

    public class SelectUninvoicedRcptLines_AdditionalActions_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class DeselectSelectedRcptLines_AdditionalActions_InputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
        public int VendorNum;
        public string PurPoint;
        public string PackSlip;
        public bool IsDropShip;
        public string InvoiceNum;
        public int IPONum;
    }

    public class DeselectSelectedRcptLines_AdditionalActions_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class InvokeInvoiceSelectedLines_InputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class InvokeInvoiceSelectedLines_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
        public string OpLOCMsg;
    }

    public class AddPOMiscChrgToInvoiceHead_InputModel
    {
        public int InvHedVendorNum;
        public string InvHedInvoiceNum;
        public string PoMiscMiscCode;
        public int PoMiscPONum;
        public int PoMiscSeqNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class AddPOMiscChrgToInvoiceHead_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class AddPOMiscChrgToInvoiceLine_InputModel
    {
        public int InvDtlVendorNum;
        public string InvDtlInvoiceNum;
        public int InvDtlInvoiceLine;
        public int POMiscPOLine;
        public int POMiscSeqNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class AddPOMiscChrgToInvoiceLine_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class AllocateLateCost_InputModel
    {
        public Erp.Tablesets.LateCostLinesTableset Ds;
    }

    public class AllocateLateCost_OutputModel
    {
        public Erp.Tablesets.LateCostLinesTableset Ds;
    }

    public class GetRowsForTracker_InputModel
    {
        public int Vendnum;
        public bool All;
        public bool Open;
        public int FromDays;
        public bool InRange;
    }

    public class GetRowsForTracker_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset _Return;
    }

    public class GetRowsForTrackerSite_InputModel
    {
        public int Vendnum;
        public bool All;
        public bool Open;
        public int FromDays;
        public bool InRange;
        public string Plant;
    }

    public class GetRowsForTrackerSite_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset _Return;
    }

    public class GetSiteIsLegalEntity_OutputModel
    {
        public bool _Return;
    }

    public class AssignLegalNumber_InputModel
    {
        public string InGroupID;
        public int InVendor;
        public string InInvNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class AssignLegalNumber_OutputModel
    {
        public string OpLegalNumMsg;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CalculateCOIFRS_PV_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CalculateCOIFRS_PV_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class Update_ttAPInvHed_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class Update_ttAPInvHed_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAPInvSchedPercent_InputModel
    {
        public int PaySeqEdited;
        public Erp.Tablesets.APInvoiceTableset Ts;
    }

    public class ChangeAPInvSchedPercent_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ts;
    }

    public class ChangeAPInvSchedAmount_InputModel
    {
        public int PaySeqEdited;
        public Erp.Tablesets.APInvoiceTableset Ts;
    }

    public class ChangeAPInvSchedAmount_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ts;
    }

    public class ChangeAPInvSchedDays_InputModel
    {
        public int PaySeqEdited;
        public Erp.Tablesets.APInvoiceTableset Ts;
    }

    public class ChangeAPInvSchedDays_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ts;
    }

    public class ChangeAPInvSchedDueDate_InputModel
    {
        public int PaySeqEdited;
        public Erp.Tablesets.APInvoiceTableset Ts;
    }

    public class ChangeAPInvSchedDueDate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ts;
    }

    public class ChangeAdjustmentValue_InputModel
    {
        public System.Decimal ProposedValue;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAdjustmentValue_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAdvancePayAmt_InputModel
    {
        public System.Decimal ProposedAdvancePayAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAdvancePayAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAssemblySeq_InputModel
    {
        public int ProposedAssemblySeq;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAssemblySeq_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeCostPerCode_InputModel
    {
        public string ProposedCostPerCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeCostPerCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeCurrency_InputModel
    {
        public string ProposedCurrencyCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeCurrency_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeCurrencyMaster_InputModel
    {
        public string ProposedCurrencyCode;
        public string VRateGrpCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeCurrencyMaster_OutputModel
    {
        public System.Decimal VExchangeRate;
        public string VXRateLabel;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeExpHeaderAmt_InputModel
    {
        public System.Decimal ProposedAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeExpHeaderAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeExpLineAmt_InputModel
    {
        public System.Decimal ProposedAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeExpLineAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetAPInvoiceRelationshipMap_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int MaxNumOfCards;
    }

    public class GetAPInvoiceRelationshipMap_OutputModel
    {
        public string _Return;
    }

    public class GetGLAccountDesc_InputModel
    {
        public string Company;
        public string COACode;
        public string GLAcctDisp;
    }

    public class GetGLAccountDesc_OutputModel
    {
        public string _Return;
    }

    public class GetGBLGLAccountDesc_InputModel
    {
        public string IpCompany;
        public string IpExtCompany;
        public string IpCOACode;
        public string IpGLAccount;
    }

    public class GetGBLGLAccountDesc_OutputModel
    {
        public string _Return;
    }

    public class ChangeExtCompanyID_InputModel
    {
        public string ProposedExtCompID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeExtCompanyID_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeExtCost_InputModel
    {
        public System.Decimal ProposedExtCost;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeExtCost_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedAmount_InputModel
    {
        public System.Decimal ProposedFixedAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedAmount_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedHedMscAmount_InputModel
    {
        public System.Decimal ProposedFixedAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedHedMscAmount_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedLineAmount_InputModel
    {
        public System.Decimal ProposedFixedAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedLineAmount_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedLnMscAmount_InputModel
    {
        public System.Decimal ProposedFixedAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedLnMscAmount_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeGUITaxBasisAmt_InputModel
    {
        public System.Decimal ProposedGUITaxBasisAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeGUITaxBasisAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceDate_InputModel
    {
        public System.DateTime? ProposedInvoiceDate;
        public string RecalcAmts;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceDate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceDateEx_InputModel
    {
        public System.DateTime? ProposedInvoiceDate;
        public string RecalcAmts;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceDateEx_OutputModel
    {
        public string CMessageText;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceDateWithDateCheck_InputModel
    {
        public System.DateTime? ProposedInvoiceDate;
        public string RecalcAmts;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceDateWithDateCheck_OutputModel
    {
        public string CMessageText;
        public string DateMessage;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeDueDate_InputModel
    {
        public System.DateTime? ProposedDueDate;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeDueDate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoicePurPoint_InputModel
    {
        public string PurPoint;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoicePurPoint_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceRef_InputModel
    {
        public string ProposedInvoiceRef;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceRef_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceVendorAmt_InputModel
    {
        public System.Decimal ProposedInvoiceVendorAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeInvoiceVendorAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeJobMiscCode_InputModel
    {
        public string ProposedJobMisc;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeJobMiscCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeJobMiscProject_InputModel
    {
        public string PropProject;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeJobMiscProject_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeJobNum_InputModel
    {
        public string ProposedJobNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeJobNum_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeLineDiscAmt_InputModel
    {
        public System.Decimal ProposedLineDiscAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeLineDiscAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeLOCID_InputModel
    {
        public string ProposedLOCID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeLOCID_OutputModel
    {
        public string OutMsg;
        public string OutTermsDiff;
        public string OutLocTerms;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeLOCIDInvPosted_InputModel
    {
        public string ProposedLOCID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeLOCIDInvPosted_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeLockRate_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeLockRate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeManualTaxCalculation_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeManualTaxCalculation_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeManualTaxHedMscCalculation_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeManualTaxHedMscCalculation_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeManualTaxLineCalculation_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeManualTaxLineCalculation_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeManualTaxLnMscCalculation_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeManualTaxLnMscCalculation_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMiscAmt_InputModel
    {
        public System.Decimal ProposedMiscAmt;
        public string TableName;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMiscAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMiscCode_InputModel
    {
        public string ProposedMiscCode;
        public string TableName;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMiscCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMiscLCFlag_InputModel
    {
        public bool IpLCFlag;
        public string TableName;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMiscLCFlag_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class Change1099Code_InputModel
    {
        public string FormTypeID;
        public string ProposedCode1099ID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class Change1099Code_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAPIHAPInvMsc1099Code_InputModel
    {
        public string FormTypeID;
        public string ProposedCode1099ID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAPIHAPInvMsc1099Code_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFormType_InputModel
    {
        public string FormType;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFormType_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAPIHAPInvMscFormType_InputModel
    {
        public string FormType;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeAPIHAPInvMscFormType_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMiscPercent_InputModel
    {
        public System.Decimal ProposedPrcnt;
        public string TableName;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMiscPercent_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMtlSeq_InputModel
    {
        public int ProposedMtlSeq;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMtlSeq_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMultiCompany_InputModel
    {
        public bool ProposedMulti;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeMultiCompany_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeOverrideRevCharge_InputModel
    {
        public bool ProposedOverrideRC;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeOverrideRevCharge_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePartNum_InputModel
    {
        public string ProposedPartNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePartNum_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePBDtlValue_InputModel
    {
        public System.Decimal ProposedInvDtlValue;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePBDtlValue_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePBMtlCharge_InputModel
    {
        public System.Decimal ProposedMtlChrg;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePBMtlCharge_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePhaseID_InputModel
    {
        public string PropPhase;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePhaseID_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePMUID_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePMUID_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePMUIDMaster_InputModel
    {
        public int IpPaymentMethod;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePMUIDMaster_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ValidateCreateCancellationInvoice_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
    }

    public class ValidateCreateCancellationInvoice_OutputModel
    {
        public string OpError;
    }

    public class ValidateWBSPhase_InputModel
    {
        public string PropPhase;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ValidateWBSPhase_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string OpMessage;
    }

    public class ValidateUnreceivedLineForPOBeforeChangePOLine_InputModel
    {
        public int ProposedPOLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ValidateUnreceivedLineForPOBeforeChangePOLine_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string OpMessage;
    }

    public class ChangePOLine_InputModel
    {
        public int ProposedPOLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePOLine_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePONum_InputModel
    {
        public int ProposedPONum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePONum_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePORelNum_InputModel
    {
        public int ProposedPORelNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePORelNum_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePrePayment_InputModel
    {
        public string PrepaymentNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePrePayment_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePrePaymentAmt_InputModel
    {
        public System.Decimal PrepaymentAmount;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangePrePaymentAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateCode_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateCodeMaster_InputModel
    {
        public string ProposedRateCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateCodeMaster_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateHedMscCode_InputModel
    {
        public string ProposedRateCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateHedMscCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateLineCode_InputModel
    {
        public string ProposedRateCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateLineCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateLnMscCode_InputModel
    {
        public string ProposedRateCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRateLnMscCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRefPONum_InputModel
    {
        public int ProposedRefPONum;
        public bool ConfirmCheck;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRefPONum_OutputModel
    {
        public string ConfirmMsg;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeReportableAmt_InputModel
    {
        public System.Decimal ProposedReportableAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeReportableAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeReportableHedMscAmt_InputModel
    {
        public System.Decimal ProposedReportableAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeReportableHedMscAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeReportableLineAmt_InputModel
    {
        public System.Decimal ProposedReportableAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeReportableLineAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeReportableLnMscAmt_InputModel
    {
        public System.Decimal ProposedReportableAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeReportableLnMscAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRevChargeMethod_InputModel
    {
        public string ProposedRevChrgMethod;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeRevChargeMethod_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxableAmt_InputModel
    {
        public System.Decimal ProposedTaxableAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxableAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxableHedMscAmt_InputModel
    {
        public System.Decimal ProposedTaxableAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxableHedMscAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxableLineAmt_InputModel
    {
        public System.Decimal ProposedTaxableAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxableLineAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxableLnMscAmt_InputModel
    {
        public System.Decimal ProposedTaxableAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxableLnMscAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxAmt_InputModel
    {
        public System.Decimal ProposedTaxAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxHedMscAmt_InputModel
    {
        public System.Decimal ProposedTaxAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxHedMscAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLineAmt_InputModel
    {
        public System.Decimal ProposedTaxAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLineAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLnMscAmt_InputModel
    {
        public System.Decimal ProposedTaxAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLnMscAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxCatID_InputModel
    {
        public string IpTaxCatID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxCatID_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxCode_InputModel
    {
        public string ProposedTaxCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxHedMscCode_InputModel
    {
        public string ProposedTaxCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxHedMscCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLineCode_InputModel
    {
        public string ProposedTaxCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLineCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLnMscCode_InputModel
    {
        public string ProposedTaxCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLnMscCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxDeductable_InputModel
    {
        public System.Decimal ProposedTaxDeductable;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxDeductable_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxHedMscDeductible_InputModel
    {
        public System.Decimal ProposedTaxDeductable;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxHedMscDeductible_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLineDeductible_InputModel
    {
        public System.Decimal ProposedTaxDeductable;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLineDeductible_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLnMscDeductible_InputModel
    {
        public System.Decimal ProposedTaxDeductable;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLnMscDeductible_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLock_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLock_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxPercent_InputModel
    {
        public System.Decimal ProposedTaxPercent;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxPercent_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxHedMscPercent_InputModel
    {
        public System.Decimal ProposedTaxPercent;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxHedMscPercent_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLinePercent_InputModel
    {
        public System.Decimal ProposedTaxPercent;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLinePercent_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLnMscPercent_InputModel
    {
        public System.Decimal ProposedTaxPercent;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTaxLnMscPercent_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTermsCode_InputModel
    {
        public string ProposedTermsCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeTermsCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedDiscount_InputModel
    {
        public System.Decimal ProposedDiscountAmt;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeFixedDiscount_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeUnitCost_InputModel
    {
        public System.Decimal ProposedUnitCost;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeUnitCost_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeVendorID_InputModel
    {
        public string ProposedVendorID;
        public bool ConfirmCheck;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeVendorID_OutputModel
    {
        public string ConfirmMsg;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeVendorQty_InputModel
    {
        public System.Decimal ProposedVendorQty;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ChangeVendorQty_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckBankRef_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckBankRef_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string OpMessage;
    }

    public class CheckBankReference_InputModel
    {
        public int IpVendorNum;
        public string IpInvoiceNum;
    }

    public class CheckBankReference_OutputModel
    {
        public bool _Return;
    }

    public class CheckCPayBeforeUpdate_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckCPayBeforeUpdate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string OpMessage;
    }

    public class CheckDocumentIsLocked_InputModel
    {
        public string KeyValue;
        public string KeyValue2;
    }

    public class CheckLegalNumsDisplay_InputModel
    {
        public string CGroupID;
    }

    public class CheckLegalNumsDisplay_OutputModel
    {
        public bool LEnabled;
    }

    public class CheckLinePurPoint_InputModel
    {
        public string PurPoint;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckLinePurPoint_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckLineSubTotal_InputModel
    {
        public int IpVendNum;
        public string IpInvNum;
        public int IpInvLine;
        public string IpRoleCd;
        public System.Decimal IpProposedValue;
    }

    public class CheckPaymentMethod_InputModel
    {
        public int IpPaymentMethod;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckPaymentMethod_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckRateGrpCode_InputModel
    {
        public string IpRateGrpCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckRateGrpCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckRevChrgBeforeUpdate_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckRevChrgBeforeUpdate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string OpMessage;
    }

    public class CheckTaxRateGrpCode_InputModel
    {
        public string IpRateGrpCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckTaxRateGrpCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckTaxRgn_InputModel
    {
        public string IpTaxRgnCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CheckTaxRgn_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetRecurInvoiceSourceSearch_InputModel
    {
        public string IpSuppList;
        public string IpCycleCodesList;
        public System.DateTime IpGrpDate;
    }

    public class GetRecurInvoiceSourceSearch_OutputModel
    {
        public Erp.Tablesets.APInvGetRecInvSourceTableset _Return;
    }

    public class GetDMRDMSourceSearch_InputModel
    {
        public string IpSuppList;
    }

    public class GetDMRDMSourceSearch_OutputModel
    {
        public Erp.Tablesets.APInvGetDMRDMSourceTableset _Return;
    }

    public class GetNotInvRecSourceSearch_InputModel
    {
        public string IpSuppList;
        public System.DateTime InvoiceDate;
    }

    public class GetNotInvRecSourceSearch_OutputModel
    {
        public bool AlternateMessage;
        public Erp.Tablesets.APInvGetNotInvRecSourceTableset _Return;
    }

    public class GetNotInvRecFilterSearch_OutputModel
    {
        public Erp.Tablesets.APInvGetNotInvRecSourceTableset _Return;
    }

    public class ValidateGNRIClearingCreation_InputModel
    {
        public string GroupID;
    }

    public class GetDMRDMFilterSearch_OutputModel
    {
        public Erp.Tablesets.APInvGetDMRDMSourceTableset _Return;
    }

    public class CreateCorrectionInvoice_InputModel
    {
        public string GroupID;
        public string SourceInvoiceNum;
        public int SourceVendorNum;
        public string NewInvoiceNum;
        public System.DateTime? NewInvoiceDate;
        public string NewDocType;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CreateCorrectionInvoice_OutputModel
    {
        public System.Decimal GrpTotalInvAmt;
        public bool LEnableGenLegalNum;
    }

    public class CreateCancellationInvoice_InputModel
    {
        public string GroupID;
        public string SourceInvoiceNum;
        public int SourceVendorNum;
        public string NewInvoiceNum;
        public System.DateTime? NewInvoiceDate;
        public string NewDocType;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CreateCancellationInvoice_OutputModel
    {
        public System.Decimal GrpTotalInvAmt;
        public bool LEnableGenLegalNum;
    }

    public class CreateJobMtl_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CreateJobMtl_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class DeleteMaster_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string CGroupID;
        public string KeyValue;
        public string KeyValue2;
    }

    public class DeleteMaster_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public System.Decimal GrpTotalInvAmt;
        public bool LEnableGenLegalNum;
    }

    public class DeselectSelectedRcptLines_InputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
        public int VendorNum;
        public string PurPoint;
        public string PackSlip;
        public bool IsDropShip;
        public string InvoiceNum;
        public int IPONum;
    }

    public class DeselectSelectedRcptLines_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class DecodeISRCodeLine_InputModel
    {
        public string IpISRCodeLine;
    }

    public class DecodeISRCodeLine_OutputModel
    {
        public string OpSlipType;
        public string OpSlipCode;
        public System.Decimal OpAmount;
        public string OpCurrencyCode;
        public string OpCurrencyID;
        public string OpISRRefNum;
        public int OpVendorNum;
        public string OpVendorID;
        public string OpVendorName;
    }

    public class EnableAPDates_OutputModel
    {
        public bool EnApplyDate;
        public bool EnTaxPDate;
        public bool EnTaxRDate;
    }

    public class GenerateRebateInv_InputModel
    {
        public string InvoiceType;
        public string GroupID;
        public Erp.Tablesets.RebateInvTableset Ds;
    }

    public class GenerateRebateInv_OutputModel
    {
        public string OpMsg;
    }

    public class GetRebateInvList_InputModel
    {
        public string InvoiceType;
    }

    public class GetRebateInvList_OutputModel
    {
        public Erp.Tablesets.RebateInvTableset _Return;
    }

    public class GetAPInvPOMisc_InputModel
    {
        public int InVendorNum;
        public string InInvoiceNum;
    }

    public class GetAPInvPOMisc_OutputModel
    {
        public Erp.Tablesets.APInvPOMiscTableset _Return;
    }

    public class GetAPUninvoicedReceipts_InputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
        public int InVendorNum;
        public string InInvoiceNum;
        public int InPONum;
    }

    public class GetAPUninvoicedReceipts_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class GetAPUninvoicedReceiptsSelectAll_InputModel
    {
        public int InVendorNum;
        public string InInvoiceNum;
        public string InPONumList;
    }

    public class GetAPUninvoicedReceiptsSelectAll_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset _Return;
    }

    public class GetAvailTranDocTypes_OutputModel
    {
        public string AvailTypes;
    }

    public class GetCodeDescList_InputModel
    {
        public string TableName;
        public string FieldName;
    }

    public class GetCodeDescList_OutputModel
    {
        public string _Return;
    }

    public class GetDMRCorrInvRequests_InputModel
    {
        public string AddToGroupID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetDMRCorrInvRequests_OutputModel
    {
        public string ReturnMsg;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetDMRDebitMemos_InputModel
    {
        public string SysRowIDList;
        public string SuppList;
        public string AddToGroupID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetDMRDebitMemos_OutputModel
    {
        public string ReturnMsg;
        public System.Decimal GrpTotalInvAmt;
        public bool LEnableGenLegalNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetvalidEAD_InputModel
    {
        public string InTransType;
        public string InDateLabel;
        public System.DateTime? ProposedDate;
    }

    public class GetvalidEAD_OutputModel
    {
        public System.DateTime? ProposedDate;
        public string CMessageText;
    }

    public class GetLegalNumberOpts_InputModel
    {
        public string InGroupID;
        public int InVendor;
        public string InInvNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetLegalNumberOpts_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public bool RequiresUserInput;
        public bool _Return;
    }

    public class GetLegalNumforDebitMemo_InputModel
    {
        public string CGroupID;
    }

    public class VoidLegalNumber_InputModel
    {
        public string IpInvoiceNum;
        public string IpVoidedReason;
        public int IpVendorNum;
    }

    public class VoidLegalNumber_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset _Return;
    }

    public class GetListForAssetAdd_InputModel
    {
        public string WhereClause;
        public int PageSize;
        public int AbsolutePage;
    }

    public class GetListForAssetAdd_OutputModel
    {
        public bool MorePages;
        public Erp.Tablesets.APInvHedListTableset _Return;
    }

    public class GetApInvHeadListLoaded_InputModel
    {
        public string GroupId;
        public int VendorId;
    }

    public class GetApInvHeadListLoaded_OutputModel
    {
        public Erp.Tablesets.APInvHedListTableset _Return;
    }

    public class GetListForLandingPage_InputModel
    {
        public string WhereClause;
        public int PageSize;
        public int AbsolutePage;
    }

    public class GetListForLandingPage_OutputModel
    {
        public bool MorePages;
        public Erp.Tablesets.APInvHedListTableset _Return;
    }

    public class GetNewAPInvDtlAdvance_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int IVendorNum;
        public string CInvoiceNum;
    }

    public class GetNewAPInvDtlAdvance_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlAsset_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int IVendorNum;
        public string CInvoiceNum;
    }

    public class GetNewAPInvDtlAsset_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlDMRCredit_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int IVendorNum;
        public string CInvoiceNum;
        public int IDMRNum;
        public int IDMRActionNum;
    }

    public class GetNewAPInvDtlDMRCredit_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlJobMiscellaneous_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int IVendorNum;
        public string CInvoiceNum;
    }

    public class GetNewAPInvDtlJobMiscellaneous_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlMiscellaneous_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int IVendorNum;
        public string CInvoiceNum;
    }

    public class GetNewAPInvDtlMiscellaneous_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlUnreceived_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int IVendorNum;
        public string CInvoiceNum;
    }

    public class GetNewAPInvDtlUnreceived_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvHedBOE_InputModel
    {
        public string GroupID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvHedBOE_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvHedInvoice_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string CGroupID;
    }

    public class GetNewAPInvHedInvoice_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvHedDebitMemo_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string CGroupID;
    }

    public class GetNewAPInvHedDebitMemo_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewManualGRNIClearing_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string CGroupID;
    }

    public class GetNewManualGRNIClearing_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewHdrCharge_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int IVendorNum;
        public string CInvoiceNum;
        public bool LcFlag;
    }

    public class GetNewHdrCharge_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPIHAPInvMscPlasticPackTaxCost_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public string PlasticPackTaxReportID;
    }

    public class GetNewAPIHAPInvMscPlasticPackTaxCost_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlDEASchPopulated_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
    }

    public class GetNewAPInvDtlDEASchPopulated_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetPercentFixedAmt_InputModel
    {
        public System.DateTime? IpInvDate;
    }

    public class GetRefInvoicesForBOE_InputModel
    {
        public string WhereClause;
    }

    public class GetRefInvoicesForBOE_OutputModel
    {
        public Erp.Tablesets.APInvHedListTableset _Return;
    }

    public class GetLinePurPointFilterString_InputModel
    {
        public int IpVendorNum;
        public string IpInvoiceNum;
    }

    public class GetLinePurPointFilterString_OutputModel
    {
        public string OpFilterString;
    }

    public class GetListBOEReferences_InputModel
    {
        public string APInvHedWhereClause;
        public int PageSize;
        public int AbsolutePage;
    }

    public class GetListBOEReferences_OutputModel
    {
        public bool MorePages;
        public Erp.Tablesets.APInvHedListTableset _Return;
    }

    public class GetPOFilterString_InputModel
    {
        public int IpVendorNum;
        public string IpInvoiceNum;
    }

    public class GetPOFilterString_OutputModel
    {
        public string OpFilterString;
    }

    public class GetValueExchageRate_InputModel
    {
        public string VCurrencyCode;
        public string VRateGrpCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetValueExchageRate_OutputModel
    {
        public System.Decimal VExchangeRate;
        public string VXRateLabel;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GLAllocation_InputModel
    {
        public bool VCurrSwitch;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GLAllocation_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class InvoiceSelectedLines_InputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class InvoiceSelectedLines_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
        public string OpLOCMsg;
    }

    public class IsCorrectionInvoice_InputModel
    {
        public string CpInvoiceNum;
    }

    public class IsCorrectionInvoice_OutputModel
    {
        public bool OpIsCorrectionInvoice;
    }

    public class MassGenerateBOEapInvDtl_InputModel
    {
        public int IpVendorNum;
        public string IpInvoiceNum;
        public Erp.Tablesets.APInvHedListTableset Ds;
    }

    public class MassGenerateBOEapInvDtl_OutputModel
    {
        public Erp.Tablesets.APInvHedListTableset Ds;
        public string MassGenErrorMsg;
        public string OpWarning;
        public Erp.Tablesets.APInvoiceTableset _Return;
    }

    public class MatchLoggedInvoice_InputModel
    {
        public Erp.Tablesets.GetLogAPInvTableset Ds;
        public string CGroupID;
        public bool ConfirmCheck;
        public bool SkipInactiveVendors;
        public Erp.Tablesets.APInvoiceTableset Ds1;
    }

    public class MatchLoggedInvoice_OutputModel
    {
        public Erp.Tablesets.GetLogAPInvTableset Ds;
        public string ConfirmMsg;
        public Erp.Tablesets.APInvoiceTableset Ds1;
    }

    public class OnChangeLineInvoiceRef_InputModel
    {
        public string NewInvoiceRef;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeLineInvoiceRef_OutputModel
    {
        public string OpWarning;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofApplyDate_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public string RecalcAmts;
        public System.DateTime? NewApplyDate;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofApplyDate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofApplyDateEx_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public string RecalcAmts;
        public System.DateTime? NewApplyDate;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofApplyDateEx_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofApplyDateWithDateCheck_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public string RecalcAmts;
        public System.DateTime? NewApplyDate;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofApplyDateWithDateCheck_OutputModel
    {
        public string DateMessage;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofTaxPoint_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public System.DateTime? NewTaxPoint;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofTaxPoint_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofTaxRateDate_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public System.DateTime? NewTaxDate;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofTaxRateDate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofTransApplyDate_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public System.DateTime? NewTransApplyDate;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofTransApplyDate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeTranDocTypeID_InputModel
    {
        public string IpTranDocTypeID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeTranDocTypeID_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeVendBankID_InputModel
    {
        public string PcVendBankID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeVendBankID_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnLCFlagOfLineMiscChargeChange_InputModel
    {
        public string IpMiscCode;
        public bool IpLCFlag;
    }

    public class OnShipmentIDChange_InputModel
    {
        public int IpShipmentID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnShipmentIDChange_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnTHRefVendorIDChange_InputModel
    {
        public string VendorID;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnTHRefVendorIDChange_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnTHRefInvoiceNumChange_InputModel
    {
        public string ApInvoiceNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnTHRefInvoiceNumChange_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnTHRefInvoiceNumChangeWithUnknownSupplier_InputModel
    {
        public string ApInvoiceNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnTHRefInvoiceNumChangeWithUnknownSupplier_OutputModel
    {
        public string OpMessage;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class PreSetAllocationAmt_InputModel
    {
        public bool NCurrSwitch;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class PreSetAllocationAmt_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class SelectUninvoicedRcptLines_InputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
        public int InVendorNum;
        public string InPurPoint;
        public int InPONum;
        public string InPackSlip;
        public bool InDropShip;
        public string InvoiceNum;
        public bool InGRNIClearing;
    }

    public class SelectUninvoicedRcptLines_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class CompletePrecalcWHTax_InputModel
    {
        public string IpGroupID;
    }

    public class SetReadyToCalc_InputModel
    {
        public string IpGroupID;
        public string IpInvoiceNum;
        public int IpVendorNum;
        public bool IpCalcAll;
        public bool IpCalledFromUI;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class SetReadyToCalc_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class SubCDataBtnClicked_InputModel
    {
        public int IpVendorNum;
        public string IpInvoiceNum;
        public int IpInvoiceLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class SubCDataBtnClicked_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class TransferInvoiceToGroup_InputModel
    {
        public string TransferToGroupID;
        public int XferInvVendorNum;
        public string XferInvInvoiceNum;
        public System.DateTime XferApplyDate;
        public string CGroupID;
    }

    public class TransferInvoiceToGroup_OutputModel
    {
        public System.Decimal GrpTotalInvAmt;
        public bool LEnableGenLegalNum;
    }

    public class UpdAPInvoiceMatched_InputModel
    {
        public string TxtGroup;
        public int IntVendorNum;
        public string TxtInvoiceNum;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class UpdAPInvoiceMatched_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class UpdateMaster_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string CGroupID;
        public string CTableName;
        public bool RunChkCPay;
        public bool RunChkBankRef;
        public bool RunChkRevChrg;
        public bool SuppressUserPrompts;
    }

    public class UpdateMaster_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public System.Decimal GrpTotalInvAmt;
        public bool RequiresUserInput;
        public string OpMessage;
        public string OpMsgChkBankRef;
        public string OpChkRevMsg;
        public bool LEnableGenLegalNum;
        public bool LUpdateRan;
        public string OpDUAMsg;
    }

    public class UpdGetLogAPInv_InputModel
    {
        public Erp.Tablesets.GetLogAPInvTableset Ds;
    }

    public class UpdGetLogAPInv_OutputModel
    {
        public Erp.Tablesets.GetLogAPInvTableset Ds;
    }

    public class UsePurchaseCode_OutputModel
    {
        public bool UsePurchaseCode;
    }

    public class ValidateBankRefs_InputModel
    {
        public string IpGroupID;
    }

    public class ValidateBankRefs_OutputModel
    {
        public string CErrorMsg;
        public bool _Return;
    }

    public class ValidateInvoiceID_InputModel
    {
        public string TxtVendorID;
        public string TxtInvoiceNum;
    }

    public class ValidateInvoiceID_OutputModel
    {
        public int IntVendorNum;
        public bool LogAPInvFound;
    }

    public class ValidateTaxRateCodes_InputModel
    {
        public string ProposedRateCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ValidateTaxRateCodes_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeCycleCode_InputModel
    {
        public int IpVendorNum;
        public string IpInvoiceNum;
        public string IpCycleCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeCycleCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeRecurring_InputModel
    {
        public int IpVendorNum;
        public string IpInvoiceNum;
        public bool IpRecurring;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeRecurring_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CreateRecurInvoice_InputModel
    {
        public string IpVendorList;
        public string IpCycleCodesList;
        public string IpSelectedVendorNum;
        public string IpSelectedInvoiceNum;
        public string IpNewGroupID;
        public int IpFirstDayOfWeek;
    }

    public class CreateRecurInvoice_OutputModel
    {
        public string OpNewInvoiceNum;
        public string OpErrMsg;
        public string InactiveVendorMsg;
    }

    public class GetAPInvcRecurr_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public Erp.Tablesets.APRecurringInvTableset Ds;
    }

    public class GetAPInvcRecurr_OutputModel
    {
        public Erp.Tablesets.APRecurringInvTableset Ds;
    }

    public class GetAPInvRecurInfo_InputModel
    {
        public int IpVendorNum;
        public string IpInvoiceNum;
        public int IpFirstDayOfWeek;
    }

    public class GetAPInvRecurInfo_OutputModel
    {
        public System.DateTime? OutNexInvDate;
    }

    public class OnChangeLineDefferedExp_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public bool IpDefExp;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeLineDefferedExp_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeLineCommodityCode_InputModel
    {
        public string NewCommodityCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeLineCommodityCode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeLineDEACode_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public string DeaCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeLineDEACode_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeLineDEAStartDate_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public System.DateTime? StartDate;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeLineDEAStartDate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GenerateAmortizationSchedule_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GenerateAmortizationSchedule_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class DeleteAmortizationSchedule_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class DeleteAmortizationSchedule_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeDEAScheduleLineAmount_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public int AmortSeq;
        public string SrcField;
        public System.Decimal PropValue;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeDEAScheduleLineAmount_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeDEAScheduleLineFiscalPeriod_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public int AmortSeq;
        public string SrcField;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeDEAScheduleLineFiscalPeriod_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class AutocompleteAmortizationSchedule_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class AutocompleteAmortizationSchedule_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CalculateAmortizationTotals_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class CalculateAmortizationTotals_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetDefaultAmortizationAccounts_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetDefaultAmortizationAccounts_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class DeleteAmortizationSchedulesOfGroup_InputModel
    {
        public string GroupID;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class DeleteAmortizationSchedulesOfGroup_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GenerateAmortizationSchedulesForGroup_InputModel
    {
        public string GroupID;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GenerateAmortizationSchedulesForGroup_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class RestoreAmortizationSchedulesOfGroup_InputModel
    {
        public string GroupID;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class RestoreAmortizationSchedulesOfGroup_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ValidateAllDeferredLinesAreScheduled_InputModel
    {
        public string GroupID;
    }

    public class ValidateAllDeferredLinesHaveGLAccount_InputModel
    {
        public string GroupID;
    }

    public class GetAPUninvoicedReceiptLines_InputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
        public int VendorNum;
        public string PurPoint;
        public string PackSlip;
        public bool IsFirstReceipt;
        public string InvoiceNum;
        public int InPONum;
    }

    public class GetAPUninvoicedReceiptLines_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class GetAPUninvoicedDropShipmentLines_InputModel
    {
        public int VendorNum;
        public string PurPoint;
        public string PackSlip;
        public string InvoiceNum;
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class GetAPUninvoicedDropShipmentLines_OutputModel
    {
        public Erp.Tablesets.APInvReceiptBillingTableset Ds;
    }

    public class OnChangeofLineTaxRgn_InputModel
    {
        public string ITaxRegionCode;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class OnChangeofLineTaxRgn_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetAllowMultInvcReceiptsValue_OutputModel
    {
        public bool Flag;
    }

    public class CreateNotInvRcptInvoice_InputModel
    {
        public Erp.Tablesets.APInvGetNotInvRecSourceTableset Ds;
        public string SelectionMode;
        public string IpVendorList;
        public string IpNewGroupID;
        public string InvoiceNum;
        public System.DateTime? InvoiceDate;
        public string DocTypeID;
    }

    public class CreateNotInvRcptInvoice_OutputModel
    {
        public Erp.Tablesets.APInvGetNotInvRecSourceTableset Ds;
        public string OpNewInvoiceNum;
        public string OpErrMsg;
    }

    public class PostGRNIClearingInvoices_InputModel
    {
        public string GroupID;
        public string InvoiceNum;
        public int VendorNum;
        public string TranDocType;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class PostGRNIClearingInvoices_OutputModel
    {
        public string Result;
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class ValidateNotPostedInvoices_InputModel
    {
        public string IpVendorList;
    }

    public class ValidateNotPostedInvoices_OutputModel
    {
        public bool _Return;
    }

    public class GetAPInvHedTransferList_InputModel
    {
        public Erp.Tablesets.APInvHedListTableset Ds;
        public string GroupID;
    }

    public class GetAPInvHedTransferList_OutputModel
    {
        public Erp.Tablesets.APInvHedListTableset Ds;
    }

    public class ValidateGroupID_InputModel
    {
        public string SGroupID;
    }

    public class ValidateGroupID_OutputModel
    {
        public bool _Return;
    }

    public class CreateAPInvGrp_InputModel
    {
        public string SFromGroupID;
        public string SToGrouID;
    }

    public class GetDfltDocumentType_InputModel
    {
        public string InSystemTranID;
    }

    public class GetDfltDocumentType_OutputModel
    {
        public string OutTranDocTypeID;
    }

    public class OnChangeCorrTranDocTypeID_InputModel
    {
        public string IpTranDocTypeID;
        public string IpSystemTranID;
    }

    public class UpdateTaxAdjustment_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class UpdateTaxAdjustment_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class PreUpdate_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class PreUpdate_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public bool RequiresUserInput;
    }

    public class ValidatePLInvoiceReference_InputModel
    {
        public int IntVendorNum;
        public string TxtInvoiceNum;
        public string TxtPLInvoiceReference;
    }

    public class ValidatePLInvoiceReference_OutputModel
    {
        public bool IsLogAPInvFound;
        public string LogAPInvNum;
    }

    public class PreInvoice_InputModel
    {
        public Erp.Tablesets.UpdExtAPInvoiceTableset Ds;
        public bool ContinueProcessingOnError;
        public bool RecalculateByExtCost;
        public bool RollbackParentOnChildError;
    }

    public class PreInvoice_OutputModel
    {
        public Erp.Tablesets.UpdExtAPInvoiceTableset Ds;
        public bool ErrorsOccurred;
        public Ice.BOUpdErrorTableset _Return;
    }

    public class UpdateMasterExt_InputModel
    {
        public Erp.Tablesets.UpdExtAPInvoiceTableset Ds;
        public bool ContinueProcessingOnError;
        public bool RecalculateByExtCost;
        public bool RollbackParentOnChildError;
    }

    public class UpdateMasterExt_OutputModel
    {
        public Erp.Tablesets.UpdExtAPInvoiceTableset Ds;
        public bool ErrorsOccurred;
        public Ice.BOUpdErrorTableset _Return;
    }

    public class CheckVendorTaxID_InputModel
    {
        public string VendorID;
    }

    public class CheckVendorTaxID_OutputModel
    {
        public string ErrMessage;
    }

    public class CheckGroupTaxID_InputModel
    {
        public string GroupID;
    }

    public class CheckGroupTaxID_OutputModel
    {
        public string ErrMessage;
    }

    public class GetPlasticPackTaxCostLines_InputModel
    {
        public Erp.Tablesets.LateCostLinesTableset Ds;
        public string PlasticPackTaxReportID;
        public int InvVendorNum;
        public string InvNum;
        public int InvMscNum;
    }

    public class GetPlasticPackTaxCostLines_OutputModel
    {
        public Erp.Tablesets.LateCostLinesTableset Ds;
    }

    public class GetAPLateCosts_InputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InPONum;
        public int InContainerID;
    }

    public class GetAPLateCosts_OutputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
    }

    public class GetAPLateCostLines_InputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
        public int VendorNum;
        public string PurPoint;
        public string PackSlip;
        public int ContainerID;
        public string InvoiceNum;
    }

    public class GetAPLateCostLines_OutputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
    }

    public class SelectUninvoicedLateCosts_InputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
        public int VendorNum;
        public string PurPoint;
        public string PackSlip;
        public int ContainerID;
        public string InvoiceNum;
    }

    public class SelectUninvoicedLateCosts_OutputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
    }

    public class DeselectSelectedLateCosts_InputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
        public int VendorNum;
        public string PurPoint;
        public string PackSlip;
        public int ContainerID;
        public string InvoiceNum;
    }

    public class DeselectSelectedLateCosts_OutputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
    }

    public class InvoiceSelectedLateCosts_InputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
    }

    public class InvoiceSelectedLateCosts_OutputModel
    {
        public Erp.Tablesets.APLateCostsTableset Ds;
    }

    public class ValidateRcvMiscSumBeforeDeleteLateCost_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int MscNum;
    }

    public class ValidateRcvMiscSumBeforeDeleteLateCost_OutputModel
    {
        public string WarningMessage;
        public bool _Return;
    }

    public class ValidateRcvMiscBeforeDeleteLateCost_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
        public int MscNum;
        public int MiscSeq;
    }

    public class ValidateRcvMiscBeforeDeleteLateCost_OutputModel
    {
        public string WarningMessage;
        public bool _Return;
    }

    public class ValidateLateCostBeforeAllocate_InputModel
    {
        public Erp.Tablesets.LateCostLinesTableset Ds;
    }

    public class ValidateLateCostBeforeAllocate_OutputModel
    {
        public Erp.Tablesets.LateCostLinesTableset Ds;
        public string WarningMessage;
        public bool _Return;
    }

    public class ChangeInvoiceNumber_InputModel
    {
        public int VendorNum;
        public string OriginalInvoiceNum;
        public string NewInvoiceNum;
    }

    public class ChangeInvoiceNumber_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset _Return;
    }

    public class GetNewAPInvHed_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
    }

    public class GetNewAPInvHed_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvHedAttch_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
    }

    public class GetNewAPInvHedAttch_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPIHAPInvExp_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
    }

    public class GetNewAPIHAPInvExp_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPIHAPInvExpTGLC_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public int InvExpSeq;
    }

    public class GetNewAPIHAPInvExpTGLC_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPIHAPInvMsc_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
    }

    public class GetNewAPIHAPInvMsc_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewRcvMisc_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string PurPoint;
        public string PackSlip;
    }

    public class GetNewRcvMisc_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPIHAPLnTax_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public string TaxCode;
        public string RateCode;
    }

    public class GetNewAPIHAPLnTax_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtl_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
    }

    public class GetNewAPInvDtl_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlAttch_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
    }

    public class GetNewAPInvDtlAttch_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlDEASch_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
    }

    public class GetNewAPInvDtlDEASch_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvExp_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
    }

    public class GetNewAPInvExp_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvExpTGLC_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public int InvExpSeq;
    }

    public class GetNewAPInvExpTGLC_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewGlbAPIETGLC_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public int InvExpSeq;
    }

    public class GetNewGlbAPIETGLC_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvJob_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public string JobNum;
        public int AssemblySeq;
        public int MtlSeq;
    }

    public class GetNewAPInvJob_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvMsc_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
    }

    public class GetNewAPInvMsc_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvLnMscTax_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public int MscNum;
        public System.Guid ApInvMscSysRowID;
        public string TaxCode;
        public string RateCode;
    }

    public class GetNewAPInvLnMscTax_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvPB_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
    }

    public class GetNewAPInvPB_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPLnTax_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int InvoiceLine;
        public string TaxCode;
        public string RateCode;
    }

    public class GetNewAPLnTax_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlTGLC_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvDtlTGLC_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvHedMscTax_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public int MscNum;
        public System.Guid ApInvMscSysRowID;
        public string TaxCode;
        public string RateCode;
    }

    public class GetNewAPInvHedMscTax_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvSched_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
    }

    public class GetNewAPInvSched_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewAPInvTax_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
        public string TaxCode;
        public string RateCode;
    }

    public class GetNewAPInvTax_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewPESUNATDtl_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
    }

    public class GetNewPESUNATDtl_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewEntityGLC_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public string RelatedToFile;
        public string Key1;
        public string Key2;
        public string Key3;
        public string Key4;
        public string Key5;
        public string Key6;
    }

    public class GetNewEntityGLC_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class GetNewPEAPInvTax_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
        public int VendorNum;
        public string InvoiceNum;
    }

    public class GetNewPEAPInvTax_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class DeleteByID_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
    }

    public class GetByID_InputModel
    {
        public int VendorNum;
        public string InvoiceNum;
    }

    public class GetByID_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset _Return;
    }

    public class GetList_InputModel
    {
        public string WhereClause;
        public int PageSize;
        public int AbsolutePage;
    }

    public class GetList_OutputModel
    {
        public bool MorePages;
        public Erp.Tablesets.APInvHedListTableset _Return;
    }

    public class GetRows_InputModel
    {
        public string WhereClauseAPInvHed;
        public string WhereClauseAPInvHedAttch;
        public string WhereClauseAPIHAPInvExp;
        public string WhereClauseAPIHAPInvExpTGLC;
        public string WhereClauseAPIHAPInvMsc;
        public string WhereClauseRcvMisc;
        public string WhereClauseAPIHAPLnTax;
        public string WhereClauseAPInvDtl;
        public string WhereClauseAPInvDtlAttch;
        public string WhereClauseAPInvDtlDEASch;
        public string WhereClauseAPInvExp;
        public string WhereClauseAPInvExpTGLC;
        public string WhereClauseGlbAPIETGLC;
        public string WhereClauseAPInvJob;
        public string WhereClauseAPInvMsc;
        public string WhereClauseAPInvLnMscTax;
        public string WhereClauseAPInvPB;
        public string WhereClauseAPLnTax;
        public string WhereClauseAPInvDtlTGLC;
        public string WhereClauseAPInvHedMscTax;
        public string WhereClauseAPInvSched;
        public string WhereClauseAPInvTax;
        public string WhereClausePESUNATDtl;
        public string WhereClauseEntityGLC;
        public string WhereClausePEAPInvTax;
        public string WhereClauseAdditionalForms_ParametersView;
        public string WhereClauseLegalNumGenOpts;
        public string WhereClauseSupplierXRef;
        public string WhereClauseTaxConnectStatus;
        public int PageSize;
        public int AbsolutePage;
    }

    public class GetRows_OutputModel
    {
        public bool MorePages;
        public Erp.Tablesets.APInvoiceTableset _Return;
    }

    public class GetBySysRowID_InputModel
    {
        public System.Guid Id;
    }

    public class GetBySysRowID_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset _Return;
    }

    public class GetBySysRowIDs_InputModel
    {
        public System.Collections.Generic.List<System.Guid> Ids;
    }

    public class GetBySysRowIDs_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset _Return;
    }

    public class Update_InputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class Update_OutputModel
    {
        public Erp.Tablesets.APInvoiceTableset Ds;
    }

    public class UpdateExt_InputModel
    {
        public Erp.Tablesets.UpdExtAPInvoiceTableset Ds;
        public bool ContinueProcessingOnError;
        public bool RollbackParentOnChildError;
    }

    public class UpdateExt_OutputModel
    {
        public Erp.Tablesets.UpdExtAPInvoiceTableset Ds;
        public bool ErrorsOccurred;
        public Ice.BOUpdErrorTableset _Return;
    }
}
