//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Erp.BO.APInvoice.Resources
{
    using System;
    
    
    /// <summary>
    /// A strongly-typed resource class for looking up localized (formatted) strings.
    ///This is a Server Side Strings Resource File. It may contain only string entries.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Ice.Explorer.SingleFileGenerators.StringsDesignerGenerator", "4.2.100.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Strings : Ice.Resources.StringsBase<Erp.BO.APInvoice.Resources.Strings>
    {
        
        protected Strings()
        {
        }
        
        /// <summary>
        /// String: 'Invalid Invoice.'.
        /// </summary>
        internal static string InvalidInvoice
        {
            get
            {
                return GetString("InvalidInvoice");
            }
        }
        
        /// <summary>
        /// String: 'Invalid PO Miscellaneous Charge.'.
        /// </summary>
        internal static string InvalidPOMiscellaneousCharge
        {
            get
            {
                return GetString("InvalidPOMiscellaneousCharge");
            }
        }
        
        /// <summary>
        /// String: 'The balance on the PO Miscellaneous Charge is 0.  Add not allowed.'.
        /// </summary>
        internal static string TheBalanceOnThePOMisceChargeIsAddNotAllowed
        {
            get
            {
                return GetString("TheBalanceOnThePOMisceChargeIsAddNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Invoice Line.'.
        /// </summary>
        internal static string InvalidInvoiceLine
        {
            get
            {
                return GetString("InvalidInvoiceLine");
            }
        }
        
        /// <summary>
        /// String: 'PO Miscellaneous Charge can only be added to invoice lines with a po number.'.
        /// </summary>
        internal static string POMisceChargeCanOnlyBeAddedToInvoiceLinesWithA
        {
            get
            {
                return GetString("POMisceChargeCanOnlyBeAddedToInvoiceLinesWithA");
            }
        }
        
        /// <summary>
        /// String: 'The PO Line number does not match the PO Line number on the Invoice Line.'.
        /// </summary>
        internal static string ThePOLineNumberDoesNotMatchThePOLineNumberOnThe
        {
            get
            {
                return GetString("ThePOLineNumberDoesNotMatchThePOLineNumberOnThe");
            }
        }
        
        /// <summary>
        /// String: 'Maintenance not allowed for posted invoices.'.
        /// </summary>
        internal static string MaintNotAllowedForPostedInvoi
        {
            get
            {
                return GetString("MaintNotAllowedForPostedInvoi");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Distribution Amount.'.
        /// </summary>
        internal static string InvalidDistributionAmount
        {
            get
            {
                return GetString("InvalidDistributionAmount");
            }
        }
        
        /// <summary>
        /// String: 'PO-Line'.
        /// </summary>
        internal static string POLine
        {
            get
            {
                return GetString("POLine");
            }
        }
        
        /// <summary>
        /// String: 'PO-Header'.
        /// </summary>
        internal static string POHeader
        {
            get
            {
                return GetString("POHeader");
            }
        }
        
        /// <summary>
        /// String: 'Manual'.
        /// </summary>
        internal static string Manual
        {
            get
            {
                return GetString("Manual");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice Miscellaneous Charge is linked to a Container Shipment or a Receipt. Delete not allowed.'.
        /// </summary>
        internal static string APInvoiceMisceChargeIsLinkedToAContaShipmOrAReceipt
        {
            get
            {
                return GetString("APInvoiceMisceChargeIsLinkedToAContaShipmOrAReceipt");
            }
        }
        
        /// <summary>
        /// String: 'Miscellaneous Charge cannot be marked as Landed Cost'.
        /// </summary>
        internal static string MisceChargeCannotBeMarkedAsLandedCost
        {
            get
            {
                return GetString("MisceChargeCannotBeMarkedAsLandedCost");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice Miscellaneous Charge is linked and must stay marked as Landed Cost.'.
        /// </summary>
        internal static string APInvoiceMisceChargeIsLinkedAndMustStayMarkedAs
        {
            get
            {
                return GetString("APInvoiceMisceChargeIsLinkedAndMustStayMarkedAs");
            }
        }
        
        /// <summary>
        /// String: 'Receipt of Goods'.
        /// </summary>
        internal static string ReceiptOfGoods
        {
            get
            {
                return GetString("ReceiptOfGoods");
            }
        }
        
        /// <summary>
        /// String: 'Advance Billing'.
        /// </summary>
        internal static string AdvanceBilling
        {
            get
            {
                return GetString("AdvanceBilling");
            }
        }
        
        /// <summary>
        /// String: 'Miscellaneous Billing'.
        /// </summary>
        internal static string MiscellaneousBilling
        {
            get
            {
                return GetString("MiscellaneousBilling");
            }
        }
        
        /// <summary>
        /// String: 'Unreceived Goods'.
        /// </summary>
        internal static string UnreceivedGoods
        {
            get
            {
                return GetString("UnreceivedGoods");
            }
        }
        
        /// <summary>
        /// String: 'Job Miscellaneous Charge'.
        /// </summary>
        internal static string JobMiscellaneousCharge
        {
            get
            {
                return GetString("JobMiscellaneousCharge");
            }
        }
        
        /// <summary>
        /// String: 'Asset'.
        /// </summary>
        internal static string Asset
        {
            get
            {
                return GetString("Asset");
            }
        }
        
        /// <summary>
        /// String: 'Adv.  Bill PO: {0}/{1}'.
        /// </summary>
        internal static string AdvBillPO(object arg0, object arg1)
        {
            return GetString("AdvBillPO", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Line Miscellaneous Charges linked to Container Shipment or Receipt exist.  Delete not allowed.'.
        /// </summary>
        internal static string LineMisceChargesLinkedToContaShipmOrReceiptExist
        {
            get
            {
                return GetString("LineMisceChargesLinkedToContaShipmOrReceiptExist");
            }
        }
        
        /// <summary>
        /// String: 'There is no UOM Selected.'.
        /// </summary>
        internal static string ThereIsNoUOMSelected
        {
            get
            {
                return GetString("ThereIsNoUOMSelected");
            }
        }
        
        /// <summary>
        /// String: 'Invalid PO Number.'.
        /// </summary>
        internal static string InvalidPONumber
        {
            get
            {
                return GetString("InvalidPONumber");
            }
        }
        
        /// <summary>
        /// String: 'PO Currency does not match Invoice Currency.'.
        /// </summary>
        internal static string POCurreDoesNotMatchInvoiceCurre
        {
            get
            {
                return GetString("POCurreDoesNotMatchInvoiceCurre");
            }
        }
        
        /// <summary>
        /// String: 'Invalid PO Line.'.
        /// </summary>
        internal static string InvalidPOLine
        {
            get
            {
                return GetString("InvalidPOLine");
            }
        }
        
        /// <summary>
        /// String: 'Invalid PO Release Num.'.
        /// </summary>
        internal static string InvalidPOReleaseNum
        {
            get
            {
                return GetString("InvalidPOReleaseNum");
            }
        }
        
        /// <summary>
        /// String: 'A consolidated PO may not be selected for Central Payment process.'.
        /// </summary>
        internal static string AConsoPOMayNotBeSelecForCentralPaymentProcess
        {
            get
            {
                return GetString("AConsoPOMayNotBeSelecForCentralPaymentProcess");
            }
        }
        
        /// <summary>
        /// String: 'The line total is invalid.'.
        /// </summary>
        internal static string TheLineTotalIsInvalid
        {
            get
            {
                return GetString("TheLineTotalIsInvalid");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Line Amount.'.
        /// </summary>
        internal static string InvalidLineAmount
        {
            get
            {
                return GetString("InvalidLineAmount");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Tax Category.'.
        /// </summary>
        internal static string InvalidTaxCategory
        {
            get
            {
                return GetString("InvalidTaxCategory");
            }
        }
        
        /// <summary>
        /// String: 'A valid Purchase Code is required.'.
        /// </summary>
        internal static string AValidPurchaseCodeIsRequired
        {
            get
            {
                return GetString("AValidPurchaseCodeIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Invoice not found.'.
        /// </summary>
        internal static string InvoiceNotFound
        {
            get
            {
                return GetString("InvoiceNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Multi-Company Journal license is required.'.
        /// </summary>
        internal static string MultiCompanyJournalLicenseIsRequi
        {
            get
            {
                return GetString("MultiCompanyJournalLicenseIsRequi");
            }
        }
        
        /// <summary>
        /// String: 'A valid External Company ID is required.'.
        /// </summary>
        internal static string AValidExterCompanyIDIsRequi
        {
            get
            {
                return GetString("AValidExterCompanyIDIsRequi");
            }
        }
        
        /// <summary>
        /// String: 'The External Company ID is not allowed to send Multi-Company General Journal for A/P.'.
        /// </summary>
        internal static string TheExterCompanyIDIsNotAllowedToSendMultiCompany
        {
            get
            {
                return GetString("TheExterCompanyIDIsNotAllowedToSendMultiCompany");
            }
        }
        
        /// <summary>
        /// String: 'The External Company ID has an invalid GL Intercompany Account'.
        /// </summary>
        internal static string TheExterCompanyIDHasAnInvalidGLInterAccount
        {
            get
            {
                return GetString("TheExterCompanyIDHasAnInvalidGLInterAccount");
            }
        }
        
        /// <summary>
        /// String: 'Startup Invoices can only be maintained through the Open Invoice Load program.'.
        /// </summary>
        internal static string StartupInvoiCanOnlyBeMaintThroughTheOpenInvoice
        {
            get
            {
                return GetString("StartupInvoiCanOnlyBeMaintThroughTheOpenInvoice");
            }
        }
        
        /// <summary>
        /// String: 'A valid Invoice Number is required.'.
        /// </summary>
        internal static string AValidInvoiceNumberIsRequired
        {
            get
            {
                return GetString("AValidInvoiceNumberIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'The Invoice Number must be unique.'.
        /// </summary>
        internal static string TheInvoiceNumberMustBeUnique
        {
            get
            {
                return GetString("TheInvoiceNumberMustBeUnique");
            }
        }
        
        /// <summary>
        /// String: 'The Invoice Reference is not flagged for Central Payment.'.
        /// </summary>
        internal static string TheInvoiceReferIsNotFlaggedForCentralPayment
        {
            get
            {
                return GetString("TheInvoiceReferIsNotFlaggedForCentralPayment");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Invoice Reference for Central Payment.'.
        /// </summary>
        internal static string InvalidInvoiceReferForCentralPayment
        {
            get
            {
                return GetString("InvalidInvoiceReferForCentralPayment");
            }
        }
        
        /// <summary>
        /// String: 'The Invoice Reference flagged for Central Payment is already closed.'.
        /// </summary>
        internal static string TheInvoiceReferFlaggedForCentralPaymentIsAlready
        {
            get
            {
                return GetString("TheInvoiceReferFlaggedForCentralPaymentIsAlready");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Invoice Reference.'.
        /// </summary>
        internal static string InvalidInvoiceReference
        {
            get
            {
                return GetString("InvalidInvoiceReference");
            }
        }
        
        /// <summary>
        /// String: 'Miscellaneous Charges linked to Container Shipment or Receipt exist.  Delete not allowed.'.
        /// </summary>
        internal static string MisceChargesLinkedToContaShipmOrReceiptExistDelete
        {
            get
            {
                return GetString("MisceChargesLinkedToContaShipmOrReceiptExistDelete");
            }
        }
        
        /// <summary>
        /// String: 'Communication Failure with TaxConnect. Cannot delete.'.
        /// </summary>
        internal static string CommuFailureWithTaxCoCannotDelete
        {
            get
            {
                return GetString("CommuFailureWithTaxCoCannotDelete");
            }
        }
        
        /// <summary>
        /// String: 'Legal Number must be voided first.'.
        /// </summary>
        internal static string LegalNumberMustBeVoidedFirst
        {
            get
            {
                return GetString("LegalNumberMustBeVoidedFirst");
            }
        }
        
        /// <summary>
        /// String: 'Call APInvHedGetNewInvoice or APInvHedGetNewDebitMemo to add a new record.'.
        /// </summary>
        internal static string CallAPInvOrAPInvToAddANewRecord
        {
            get
            {
                return GetString("CallAPInvOrAPInvToAddANewRecord");
            }
        }
        
        /// <summary>
        /// String: 'Creation of Tax Detractions not allowed.'.
        /// </summary>
        internal static string CreatOfTaxDetraNotAllowed
        {
            get
            {
                return GetString("CreatOfTaxDetraNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'No matched log invoice found.'.
        /// </summary>
        internal static string NoMatchedLogInvoiceFound
        {
            get
            {
                return GetString("NoMatchedLogInvoiceFound");
            }
        }
        
        /// <summary>
        /// String: 'A valid Exchange Rate is required.'.
        /// </summary>
        internal static string AValidExchangeRateIsRequired
        {
            get
            {
                return GetString("AValidExchangeRateIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Date cannot be blank.'.
        /// </summary>
        internal static string InvoiceDateCannotBeBlank
        {
            get
            {
                return GetString("InvoiceDateCannotBeBlank");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Reference PO Number.'.
        /// </summary>
        internal static string InvalidReferencePONumber
        {
            get
            {
                return GetString("InvalidReferencePONumber");
            }
        }
        
        /// <summary>
        /// String: 'Must use the same currency as Invoice {0} ({1}).'.
        /// </summary>
        internal static string MustUseTheSameCurreAsInvoice(object arg0, object arg1)
        {
            return GetString("MustUseTheSameCurreAsInvoice", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Invalid Terms Code.'.
        /// </summary>
        internal static string InvalidTermsCode
        {
            get
            {
                return GetString("InvalidTermsCode");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Letter of Credit ID.'.
        /// </summary>
        internal static string InvalidLOCID
        {
            get
            {
                return GetString("InvalidLOCID");
            }
        }
        
        /// <summary>
        /// String: 'LOC is Closed.'.
        /// </summary>
        internal static string LOCIsClosed
        {
            get
            {
                return GetString("LOCIsClosed");
            }
        }
        
        /// <summary>
        /// String: 'Invalid supplier for this Letter of Credit ID.'.
        /// </summary>
        internal static string InvalidSupplierForThisLOCID
        {
            get
            {
                return GetString("InvalidSupplierForThisLOCID");
            }
        }
        
        /// <summary>
        /// String: 'Invalid currency for this Letter of Credit  ID.'.
        /// </summary>
        internal static string InvalidCurrencyForThisLOCID
        {
            get
            {
                return GetString("InvalidCurrencyForThisLOCID");
            }
        }
        
        /// <summary>
        /// String: 'A valid Parent Company is required for Central Payment process.'.
        /// </summary>
        internal static string AValidParentCompanyIsRequiForCentralPaymentProcess
        {
            get
            {
                return GetString("AValidParentCompanyIsRequiForCentralPaymentProcess");
            }
        }
        
        /// <summary>
        /// String: 'Parent Company cannot initiate invoice for Central Payment process.'.
        /// </summary>
        internal static string ParentCompanyCannotInitiInvoiceForCentralPayment
        {
            get
            {
                return GetString("ParentCompanyCannotInitiInvoiceForCentralPayment");
            }
        }
        
        /// <summary>
        /// String: 'This invoice is flagged for Central Payment, Vendor must be Global.'.
        /// </summary>
        internal static string ThisInvoiceIsFlaggedForCentralPaymentVendorMust
        {
            get
            {
                return GetString("ThisInvoiceIsFlaggedForCentralPaymentVendorMust");
            }
        }
        
        /// <summary>
        /// String: 'Only the'.
        /// </summary>
        internal static string OnlyThe
        {
            get
            {
                return GetString("OnlyThe");
            }
        }
        
        /// <summary>
        /// String: ' Due Date,'.
        /// </summary>
        internal static string DueDate
        {
            get
            {
                return GetString("DueDate");
            }
        }
        
        /// <summary>
        /// String: ' Banking Reference, Payment Code,'.
        /// </summary>
        internal static string BankingReferencePaymentCode
        {
            get
            {
                return GetString("BankingReferencePaymentCode");
            }
        }
        
        /// <summary>
        /// String: ' Banking Reference,'.
        /// </summary>
        internal static string BankingReference
        {
            get
            {
                return GetString("BankingReference");
            }
        }
        
        /// <summary>
        /// String: ' SUNAT Reference Number, SUNAT Deposit Number, SUNAT Deposit Date, SUNAT Deposit Amount, AP Payment Number, Computational Cost, DUA Reference Number,'.
        /// </summary>
        internal static string SUNATReferNumberSUNATDepositNumberSUNATDeposit
        {
            get
            {
                return GetString("SUNATReferNumberSUNATDepositNumberSUNATDeposit");
            }
        }
        
        /// <summary>
        /// String: ' Payments Held, Payment Method, Letter of Credit, Invoice Comments  and Recurring Invoice fields can be changed on a posted invoice.'.
        /// </summary>
        internal static string PaymeHeldPaymentMethodLetterOfCreditAndInvoice
        {
            get
            {
                return GetString("PaymeHeldPaymentMethodLetterOfCreditAndInvoice");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Currency Code.'.
        /// </summary>
        internal static string InvalidCurrencyCode
        {
            get
            {
                return GetString("InvalidCurrencyCode");
            }
        }
        
        /// <summary>
        /// String: 'Bank Reference may not be blank.'.
        /// </summary>
        internal static string BankReferenceMayNotBeBlank
        {
            get
            {
                return GetString("BankReferenceMayNotBeBlank");
            }
        }
        
        /// <summary>
        /// String: 'A prepayment Invoice Number should be empty for a Debit Memo.'.
        /// </summary>
        internal static string APrepaInvoiceNumberShouldBeEmptyForADebitMemo
        {
            get
            {
                return GetString("APrepaInvoiceNumberShouldBeEmptyForADebitMemo");
            }
        }
        
        /// <summary>
        /// String: 'The invoice No &apos;&apos;{0}&apos;&apos; does not exist.'.
        /// </summary>
        internal static string TheInvoiceNoDoesNotExist(object arg0)
        {
            return GetString("TheInvoiceNoDoesNotExist", arg0);
        }
        
        /// <summary>
        /// String: 'Less Pre-Payment amount should be greater or equals 0.'.
        /// </summary>
        internal static string LessPrePaymentAmountShouldBeGreaterOrEquals
        {
            get
            {
                return GetString("LessPrePaymentAmountShouldBeGreaterOrEquals");
            }
        }
        
        /// <summary>
        /// String: 'Less Pre-Payment amount should be lesser than an unposted balance of the Prepayment Invoice.'.
        /// </summary>
        internal static string LessPrePaymentAmountShouldBeLesserThanAnUnposBalance
        {
            get
            {
                return GetString("LessPrePaymentAmountShouldBeLesserThanAnUnposBalance");
            }
        }
        
        /// <summary>
        /// String: 'Less Pre-Payment amount should be equals 0 because of non-entered the Prepayment Invoice number.'.
        /// </summary>
        internal static string LessPrePaymentAmountShouldBeEqualsBecauseOfNon
        {
            get
            {
                return GetString("LessPrePaymentAmountShouldBeEqualsBecauseOfNon");
            }
        }
        
        /// <summary>
        /// String: 'A Job Miscellaneous Charge can be added only to Job Miscellanous Invoice Lines.'.
        /// </summary>
        internal static string AJobMisceChargeCanBeAddedOnlyToJobMisceInvoice
        {
            get
            {
                return GetString("AJobMisceChargeCanBeAddedOnlyToJobMisceInvoice");
            }
        }
        
        /// <summary>
        /// String: 'Job is not on file or closed.'.
        /// </summary>
        internal static string JobIsNotOnFileOrClosed
        {
            get
            {
                return GetString("JobIsNotOnFileOrClosed");
            }
        }
        
        /// <summary>
        /// String: 'Assembly is not on file.'.
        /// </summary>
        internal static string AssemblyIsNotOnFile
        {
            get
            {
                return GetString("AssemblyIsNotOnFile");
            }
        }
        
        /// <summary>
        /// String: 'Material is not on file or not a Job Miscellaneous Charge.'.
        /// </summary>
        internal static string MaterIsNotOnFileOrNotAJobMisceCharge
        {
            get
            {
                return GetString("MaterIsNotOnFileOrNotAJobMisceCharge");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Miscellaneous Charge Amount.'.
        /// </summary>
        internal static string InvalidMisceChargeAmount
        {
            get
            {
                return GetString("InvalidMisceChargeAmount");
            }
        }
        
        /// <summary>
        /// String: 'Phase is required.'.
        /// </summary>
        internal static string PhaseIsRequired
        {
            get
            {
                return GetString("PhaseIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Miscellaneous charge is required.'.
        /// </summary>
        internal static string MiscellaneousChargeIsRequired
        {
            get
            {
                return GetString("MiscellaneousChargeIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'The debit memo exceeds the Job Costs.'.
        /// </summary>
        internal static string TheDebitMemoExceedsTheJobCosts
        {
            get
            {
                return GetString("TheDebitMemoExceedsTheJobCosts");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Role Code.'.
        /// </summary>
        internal static string InvalidRoleCode
        {
            get
            {
                return GetString("InvalidRoleCode");
            }
        }
        
        /// <summary>
        /// String: 'PO Release not available.'.
        /// </summary>
        internal static string POReleaseNotAvailable
        {
            get
            {
                return GetString("POReleaseNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'Job Operation not available.'.
        /// </summary>
        internal static string JobOperationNotAvailable
        {
            get
            {
                return GetString("JobOperationNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Project Role Code. Not in Operation role list.'.
        /// </summary>
        internal static string InvalidProjectRoleCodeNotInOperaRoleList
        {
            get
            {
                return GetString("InvalidProjectRoleCodeNotInOperaRoleList");
            }
        }
        
        /// <summary>
        /// String: 'A tax line already exists with the Tax Code and Rate Code.'.
        /// </summary>
        internal static string ATaxLineAlreadyExistsWithTheTaxCodeAndRateCode
        {
            get
            {
                return GetString("ATaxLineAlreadyExistsWithTheTaxCodeAndRateCode");
            }
        }
        
        /// <summary>
        /// String: 'A valid Tax Code is required.'.
        /// </summary>
        internal static string AValidTaxCodeIsRequired
        {
            get
            {
                return GetString("AValidTaxCodeIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'A valid Rate Code is required.'.
        /// </summary>
        internal static string AValidRateCodeIsRequired
        {
            get
            {
                return GetString("AValidRateCodeIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Service'.
        /// </summary>
        internal static string Service
        {
            get
            {
                return GetString("Service");
            }
        }
        
        /// <summary>
        /// String: 'Manufacture'.
        /// </summary>
        internal static string Manufacture
        {
            get
            {
                return GetString("Manufacture");
            }
        }
        
        /// <summary>
        /// String: 'A legal number has already been assigned.'.
        /// </summary>
        internal static string ALegalNumberHasAlreadyBeenAssig
        {
            get
            {
                return GetString("ALegalNumberHasAlreadyBeenAssig");
            }
        }
        
        /// <summary>
        /// String: 'Legal number generation options not found.'.
        /// </summary>
        internal static string LegalNumberGenerOptionsNotFound
        {
            get
            {
                return GetString("LegalNumberGenerOptionsNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Miscellaneous Code.'.
        /// </summary>
        internal static string InvalidMiscellaneousCode
        {
            get
            {
                return GetString("InvalidMiscellaneousCode");
            }
        }
        
        /// <summary>
        /// String: 'APInvHed record not found.'.
        /// </summary>
        internal static string APInvHedRecordNotFound
        {
            get
            {
                return GetString("APInvHedRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice criteria not available.'.
        /// </summary>
        internal static string APInvoiceCriteriaNotAvailable
        {
            get
            {
                return GetString("APInvoiceCriteriaNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'Related PO line is not available.'.
        /// </summary>
        internal static string RelatedPOLineIsNotAvailable
        {
            get
            {
                return GetString("RelatedPOLineIsNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'Advance Payment cannot exceed advance payment balance on PO.'.
        /// </summary>
        internal static string AdvancePaymentCannotExceedAdvancePaymentBalance
        {
            get
            {
                return GetString("AdvancePaymentCannotExceedAdvancePaymentBalance");
            }
        }
        
        /// <summary>
        /// String: 'AP Job Miscellaneous Charge criteria not available.'.
        /// </summary>
        internal static string APJobMisceChargeCriteNotAvail
        {
            get
            {
                return GetString("APJobMisceChargeCriteNotAvail");
            }
        }
        
        /// <summary>
        /// String: 'APIHAPInvExp has not changed.'.
        /// </summary>
        internal static string APIHAPInvExpHasNotChanged
        {
            get
            {
                return GetString("APIHAPInvExpHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'APInvExp has not changed.'.
        /// </summary>
        internal static string APInvExpHasNotChanged
        {
            get
            {
                return GetString("APInvExpHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'Multi-Company General Journal license is required.'.
        /// </summary>
        internal static string MultiCompanyGeneralJournalLicenseIsRequi
        {
            get
            {
                return GetString("MultiCompanyGeneralJournalLicenseIsRequi");
            }
        }
        
        /// <summary>
        /// String: 'The External Company needs to Initialize/Send Multi-Company G/L Accounts and Setup records first.'.
        /// </summary>
        internal static string TheExterCompanyNeedsToInitiSendMultiCompanyGLAccou
        {
            get
            {
                return GetString("TheExterCompanyNeedsToInitiSendMultiCompanyGLAccou");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Line Amount cannot exceed PO Line Advance Payment Balance.'.
        /// </summary>
        internal static string InvoiceLineAmountCannotExceedPOLineAdvancePayment
        {
            get
            {
                return GetString("InvoiceLineAmountCannotExceedPOLineAdvancePayment");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice Tax criteria not available.'.
        /// </summary>
        internal static string APInvoiceTaxCriteNotAvail
        {
            get
            {
                return GetString("APInvoiceTaxCriteNotAvail");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Header is not found.'.
        /// </summary>
        internal static string InvoiceHeaderIsNotFound
        {
            get
            {
                return GetString("InvoiceHeaderIsNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Tax Rate is not available.'.
        /// </summary>
        internal static string TaxRateIsNotAvailable
        {
            get
            {
                return GetString("TaxRateIsNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'ttAPInvDtl table is not modified'.
        /// </summary>
        internal static string TtAPInvDtlTableIsNotModified
        {
            get
            {
                return GetString("TtAPInvDtlTableIsNotModified");
            }
        }
        
        /// <summary>
        /// String: 'An Invoice Reference can be entered for Debit Memos only.'.
        /// </summary>
        internal static string AnInvoiceReferCanBeEnteredForDebitMemosOnly
        {
            get
            {
                return GetString("AnInvoiceReferCanBeEnteredForDebitMemosOnly");
            }
        }
        
        /// <summary>
        /// String: 'Module configuration A/P System Control is missing.'.
        /// </summary>
        internal static string ModuleConfiAPSystemControlIsMissing
        {
            get
            {
                return GetString("ModuleConfiAPSystemControlIsMissing");
            }
        }
        
        /// <summary>
        /// String: 'Entered Revision Number already exists.'.
        /// </summary>
        internal static string EnteredRevisNumberAlreadyExists
        {
            get
            {
                return GetString("EnteredRevisNumberAlreadyExists");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Job not found.'.
        /// </summary>
        internal static string InvoiceJobNotFound
        {
            get
            {
                return GetString("InvoiceJobNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Miscellaneous Charge Code not found.'.
        /// </summary>
        internal static string MisceChargeCodeNotFound
        {
            get
            {
                return GetString("MisceChargeCodeNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Material not found.  Do you want to add one automatically?'.
        /// </summary>
        internal static string MaterNotFoundDoYouWantToAddOneAutom
        {
            get
            {
                return GetString("MaterNotFoundDoYouWantToAddOneAutom");
            }
        }
        
        /// <summary>
        /// String: 'Record not found.'.
        /// </summary>
        internal static string RecordNotFound
        {
            get
            {
                return GetString("RecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Active Project not found.'.
        /// </summary>
        internal static string ActiveProjectNotFound
        {
            get
            {
                return GetString("ActiveProjectNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Maintenance'.
        /// </summary>
        internal static string Maintenance
        {
            get
            {
                return GetString("Maintenance");
            }
        }
        
        /// <summary>
        /// String: 'Project'.
        /// </summary>
        internal static string Project
        {
            get
            {
                return GetString("Project");
            }
        }
        
        /// <summary>
        /// String: 'Related Service Call is not on file or already invoiced.'.
        /// </summary>
        internal static string RelatedServiceCallIsNotOnFileOrAlreadyInvoi
        {
            get
            {
                return GetString("RelatedServiceCallIsNotOnFileOrAlreadyInvoi");
            }
        }
        
        /// <summary>
        /// String: 'Invoice date is outside of LOC date range.'.
        /// </summary>
        internal static string InvoiceDateIsOutsideOfLOCDateRange
        {
            get
            {
                return GetString("InvoiceDateIsOutsideOfLOCDateRange");
            }
        }
        
        /// <summary>
        /// String: 'Invoice terms {0} and LOC terms {1} do not match.  Do you want to update the Invoice Terms with the LOC terms?'.
        /// </summary>
        internal static string InvoiceTermsAndLOCTermsDoNotMatchDoYouWantToUpdate(object arg0, object arg1)
        {
            return GetString("InvoiceTermsAndLOCTermsDoNotMatchDoYouWantToUpdate", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Invalid Tax Code.'.
        /// </summary>
        internal static string InvalidTaxCode
        {
            get
            {
                return GetString("InvalidTaxCode");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Rate Code.'.
        /// </summary>
        internal static string InvalidRateCode
        {
            get
            {
                return GetString("InvalidRateCode");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice Miscellaneous Charge is already linked to a Container Shipment or a Receipt.'.
        /// </summary>
        internal static string APInvoiceMisceChargeIsAlreadyLinkedToAContaShipm
        {
            get
            {
                return GetString("APInvoiceMisceChargeIsAlreadyLinkedToAContaShipm");
            }
        }
        
        /// <summary>
        /// String: 'This Miscellaneous Charge is not a valid Landed Cost Charge.'.
        /// </summary>
        internal static string ThisMisceChargeIsNotAValidLandedCostCharge
        {
            get
            {
                return GetString("ThisMisceChargeIsNotAValidLandedCostCharge");
            }
        }
        
        /// <summary>
        /// String: ' record not available.'.
        /// </summary>
        internal static string RecordNotAvailable
        {
            get
            {
                return GetString("RecordNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'No External Company is set up to send Multi-Company General Journal for A/P.'.
        /// </summary>
        internal static string NoExterCompanyIsSetUpToSendMultiCompanyGeneral
        {
            get
            {
                return GetString("NoExterCompanyIsSetUpToSendMultiCompanyGeneral");
            }
        }
        
        /// <summary>
        /// String: 'None of the External Companies has Initialized/Sent Multi-Company G/L Accounts and Setup records yet.'.
        /// </summary>
        internal static string NoneOfTheExterCompaHasInitiSentMultiCompanyGLAccou
        {
            get
            {
                return GetString("NoneOfTheExterCompaHasInitiSentMultiCompanyGLAccou");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice Line is not available.'.
        /// </summary>
        internal static string APInvoiceLineIsNotAvailable
        {
            get
            {
                return GetString("APInvoiceLineIsNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice Line criteria not available.'.
        /// </summary>
        internal static string APInvoiceLineCriteNotAvail
        {
            get
            {
                return GetString("APInvoiceLineCriteNotAvail");
            }
        }
        
        /// <summary>
        /// String: 'A valid Payment Amount is required.'.
        /// </summary>
        internal static string AValidPaymentAmountIsRequired
        {
            get
            {
                return GetString("AValidPaymentAmountIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Project Billing information not available.'.
        /// </summary>
        internal static string ProjectBillingInforNotAvail
        {
            get
            {
                return GetString("ProjectBillingInforNotAvail");
            }
        }
        
        /// <summary>
        /// String: 'Phase not found.'.
        /// </summary>
        internal static string PhaseNotFound
        {
            get
            {
                return GetString("PhaseNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Phase Job is required.'.
        /// </summary>
        internal static string PhaseJobIsRequired
        {
            get
            {
                return GetString("PhaseJobIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice is not available.'.
        /// </summary>
        internal static string APInvoiceIsNotAvailable
        {
            get
            {
                return GetString("APInvoiceIsNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'A consolidated PO may not be selected.'.
        /// </summary>
        internal static string AConsoPOMayNotBeSelec
        {
            get
            {
                return GetString("AConsoPOMayNotBeSelec");
            }
        }
        
        /// <summary>
        /// String: 'The Purchase Order Line has been closed.'.
        /// </summary>
        internal static string ThePurchOrderLineHasBeenClosed
        {
            get
            {
                return GetString("ThePurchOrderLineHasBeenClosed");
            }
        }
        
        /// <summary>
        /// String: 'PO Line must have an Advance Payment Balance.'.
        /// </summary>
        internal static string POLineMustHaveAnAdvancePaymentBalance
        {
            get
            {
                return GetString("POLineMustHaveAnAdvancePaymentBalance");
            }
        }
        
        /// <summary>
        /// String: 'NonTaxable'.
        /// </summary>
        internal static string NonTaxable
        {
            get
            {
                return GetString("NonTaxable");
            }
        }
        
        /// <summary>
        /// String: 'Existing APInvPB records will be cleared when the line is saved.'.
        /// </summary>
        internal static string ExistAPInvPBRecordsWillBeClearedWhenTheLineIsSaved
        {
            get
            {
                return GetString("ExistAPInvPBRecordsWillBeClearedWhenTheLineIsSaved");
            }
        }
        
        /// <summary>
        /// String: 'A CMI Type PO may not be selected.'.
        /// </summary>
        internal static string ACMITypePOMayNotBeSelected
        {
            get
            {
                return GetString("ACMITypePOMayNotBeSelected");
            }
        }
        
        /// <summary>
        /// String: 'Invalid PO Release Number.'.
        /// </summary>
        internal static string InvalidPOReleaseNumber
        {
            get
            {
                return GetString("InvalidPOReleaseNumber");
            }
        }
        
        /// <summary>
        /// String: 'The prepayment invoice for the related supplier is not found.'.
        /// </summary>
        internal static string ThePrepaInvoiceForTheRelatedSupplIsNotFound
        {
            get
            {
                return GetString("ThePrepaInvoiceForTheRelatedSupplIsNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Reverse Charge Method.'.
        /// </summary>
        internal static string InvalidReverseChargeMethod
        {
            get
            {
                return GetString("InvalidReverseChargeMethod");
            }
        }
        
        /// <summary>
        /// String: 'Invoice line not valid for Reverse Charge with Threshold.'.
        /// </summary>
        internal static string InvoiceLineNotValidForReverseChargeWithThres
        {
            get
            {
                return GetString("InvoiceLineNotValidForReverseChargeWithThres");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice Line not available.'.
        /// </summary>
        internal static string APInvoiceLineNotAvailable
        {
            get
            {
                return GetString("APInvoiceLineNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'Invoice timing for non-invoice taxes is required.'.
        /// </summary>
        internal static string InvoiceTimingForNonInvoiceTaxesIsRequi
        {
            get
            {
                return GetString("InvoiceTimingForNonInvoiceTaxesIsRequi");
            }
        }
        
        /// <summary>
        /// String: 'Deductible amount cannot exceed the TaxAmt or have a different sign.'.
        /// </summary>
        internal static string DeducAmountCannotExceedTheTaxAmtOrHaveADiffeSign
        {
            get
            {
                return GetString("DeducAmountCannotExceedTheTaxAmtOrHaveADiffeSign");
            }
        }
        
        /// <summary>
        /// String: 'Deductible Amount can be only applicable to collection type Invoice and Self-assessed dual entry .'.
        /// </summary>
        internal static string DeducAmountCanBeOnlyAppliToColleTypeInvoiceAnd
        {
            get
            {
                return GetString("DeducAmountCanBeOnlyAppliToColleTypeInvoiceAnd");
            }
        }
        
        /// <summary>
        /// String: 'Change of Tax Percent is allowed only for Manual Tax Lines.'.
        /// </summary>
        internal static string ChangeOfTaxPercentIsAllowedOnlyForManualTaxLines
        {
            get
            {
                return GetString("ChangeOfTaxPercentIsAllowedOnlyForManualTaxLines");
            }
        }
        
        /// <summary>
        /// String: 'Amount entered cannot exceed the reference invoice balance.'.
        /// </summary>
        internal static string AmountEnteredCannotExceedTheReferInvoiceBalance
        {
            get
            {
                return GetString("AmountEnteredCannotExceedTheReferInvoiceBalance");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Vendor.'.
        /// </summary>
        internal static string InvalidVendor
        {
            get
            {
                return GetString("InvalidVendor");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Line not found.'.
        /// </summary>
        internal static string InvoiceLineNotFound
        {
            get
            {
                return GetString("InvoiceLineNotFound");
            }
        }
        
        /// <summary>
        /// String: 'The total of Billing Invoice Value should equal Line Invoice value.'.
        /// </summary>
        internal static string TheTotalOfBillingInvoiceValueShouldEqualLineInvoice
        {
            get
            {
                return GetString("TheTotalOfBillingInvoiceValueShouldEqualLineInvoice");
            }
        }
        
        /// <summary>
        /// String: 'APInvoice has not changed.'.
        /// </summary>
        internal static string APInvoiceHasNotChanged
        {
            get
            {
                return GetString("APInvoiceHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'This payment method is reserved for Bank AP Payment Import.'.
        /// </summary>
        internal static string ThisPaymentMethodIsReserForBankAPPaymentImport
        {
            get
            {
                return GetString("ThisPaymentMethodIsReserForBankAPPaymentImport");
            }
        }
        
        /// <summary>
        /// String: 'A valid Currency Rate Group is required.'.
        /// </summary>
        internal static string AValidCurreRateGroupIsRequi
        {
            get
            {
                return GetString("AValidCurreRateGroupIsRequi");
            }
        }
        
        /// <summary>
        /// String: 'The Bank Reference is not assigned. Do you wish to continue?'.
        /// </summary>
        internal static string TheBankReferIsNotAssigDoYouWishToConti
        {
            get
            {
                return GetString("TheBankReferIsNotAssigDoYouWishToConti");
            }
        }
        
        /// <summary>
        /// String: 'The Bank Reference length is greater than {0} characters.  Do you wish to continue?'.
        /// </summary>
        internal static string TheBankReferLengthIsGreaterThanCharaDoYouWishTo(object arg0)
        {
            return GetString("TheBankReferLengthIsGreaterThanCharaDoYouWishTo", arg0);
        }
        
        /// <summary>
        /// String: 'There are non-numeric characters in Bank Reference.  Do you wish to continue?'.
        /// </summary>
        internal static string ThereAreNonNumericCharaInBankReferDoYouWishToConti
        {
            get
            {
                return GetString("ThereAreNonNumericCharaInBankReferDoYouWishToConti");
            }
        }
        
        /// <summary>
        /// String: 'The Bank Reference entered is not consistent with country Bank Referencing.  Do you wish to continue?'.
        /// </summary>
        internal static string TheBankReferEnteredIsNotConsiWithCountryBankRefer
        {
            get
            {
                return GetString("TheBankReferEnteredIsNotConsiWithCountryBankRefer");
            }
        }
        
        /// <summary>
        /// String: 'This invoice is linked to a Central Payment invoice.  Manual updates must be performed in the source Company to conform with this change.  Do you wish to continue?'.
        /// </summary>
        internal static string ThisInvoiceIsLinkedToACentralPaymentInvoiceManual
        {
            get
            {
                return GetString("ThisInvoiceIsLinkedToACentralPaymentInvoiceManual");
            }
        }
        
        /// <summary>
        /// String: 'This invoice line is linked to a Central Payment invoice.  Manual updates must be performed in the source Company to conform with this change.  Do you wish to continue?'.
        /// </summary>
        internal static string ThisInvoiceLineIsLinkedToACentralPaymentInvoice
        {
            get
            {
                return GetString("ThisInvoiceLineIsLinkedToACentralPaymentInvoice");
            }
        }
        
        /// <summary>
        /// String: 'The Supplier is marked for Reverse Charges but this invoice line is flagged not to create a reverse charge tax line.  Do you wish to continue?'.
        /// </summary>
        internal static string TheSupplIsMarkedForReverseChargesButThisInvoice
        {
            get
            {
                return GetString("TheSupplIsMarkedForReverseChargesButThisInvoice");
            }
        }
        
        /// <summary>
        /// String: 'The Part is marked for Reverse Charges but this invoice line is flagged not to create a reverse charge tax line.  Do you wish to continue?'.
        /// </summary>
        internal static string ThePartIsMarkedForReverseChargesButThisInvoice
        {
            get
            {
                return GetString("ThePartIsMarkedForReverseChargesButThisInvoice");
            }
        }
        
        /// <summary>
        /// String: 'Invoice already exists.'.
        /// </summary>
        internal static string InvoiceAlreadyExists
        {
            get
            {
                return GetString("InvoiceAlreadyExists");
            }
        }
        
        /// <summary>
        /// String: 'Invoice number was not found.'.
        /// </summary>
        internal static string InvoiceNumberWasNotFound
        {
            get
            {
                return GetString("InvoiceNumberWasNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Invoice number specified.'.
        /// </summary>
        internal static string InvalidInvoiceNumberSpecified
        {
            get
            {
                return GetString("InvalidInvoiceNumberSpecified");
            }
        }
        
        /// <summary>
        /// String: 'Invoice has already been corrected by Invoice {0}.'.
        /// </summary>
        internal static string InvoiceHasAlreadyBeenCorreByInvoice(object arg0)
        {
            return GetString("InvoiceHasAlreadyBeenCorreByInvoice", arg0);
        }
        
        /// <summary>
        /// String: 'Job not found.'.
        /// </summary>
        internal static string JobNotFound
        {
            get
            {
                return GetString("JobNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Invalid AP Invoice.'.
        /// </summary>
        internal static string InvalidAPInvoice
        {
            get
            {
                return GetString("InvalidAPInvoice");
            }
        }
        
        /// <summary>
        /// String: 'The invoice has been posted.  Detail lines may not be added.'.
        /// </summary>
        internal static string TheInvoiceHasBeenPostedDetailLinesMayNotBeAdded
        {
            get
            {
                return GetString("TheInvoiceHasBeenPostedDetailLinesMayNotBeAdded");
            }
        }
        
        /// <summary>
        /// String: 'An unreceived line cannot be added to a Debit Memo.'.
        /// </summary>
        internal static string AnUnrecLineCannotBeAddedToADebitMemo
        {
            get
            {
                return GetString("AnUnrecLineCannotBeAddedToADebitMemo");
            }
        }
        
        /// <summary>
        /// String: 'BOE'.
        /// </summary>
        internal static string BOE
        {
            get
            {
                return GetString("BOE");
            }
        }
        
        /// <summary>
        /// String: 'Invalid AP Invoice Group.'.
        /// </summary>
        internal static string InvalidAPInvoiceGroup
        {
            get
            {
                return GetString("InvalidAPInvoiceGroup");
            }
        }
        
        /// <summary>
        /// String: 'Line'.
        /// </summary>
        internal static string Line
        {
            get
            {
                return GetString("Line");
            }
        }
        
        /// <summary>
        /// String: 'Header'.
        /// </summary>
        internal static string Header
        {
            get
            {
                return GetString("Header");
            }
        }
        
        /// <summary>
        /// String: 'None'.
        /// </summary>
        internal static string None
        {
            get
            {
                return GetString("None");
            }
        }
        
        /// <summary>
        /// String: 'Adding uninvoiced receipts to a debit memo is not allowed.'.
        /// </summary>
        internal static string AddingUninvReceiToADebitMemoIsNotAllowed
        {
            get
            {
                return GetString("AddingUninvReceiToADebitMemoIsNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Pending'.
        /// </summary>
        internal static string Pending
        {
            get
            {
                return GetString("Pending");
            }
        }
        
        /// <summary>
        /// String: 'Failed'.
        /// </summary>
        internal static string Failed
        {
            get
            {
                return GetString("Failed");
            }
        }
        
        /// <summary>
        /// String: 'Passed'.
        /// </summary>
        internal static string Passed
        {
            get
            {
                return GetString("Passed");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Group'.
        /// </summary>
        internal static string InvalidGroup
        {
            get
            {
                return GetString("InvalidGroup");
            }
        }
        
        /// <summary>
        /// String: 'DMR Correction Invoice Requests are not available or have already been created.  No new Correction Invoices to create.'.
        /// </summary>
        internal static string DMRCorreInvoiceRequeAreNotAvailOrHaveAlreadyBeen
        {
            get
            {
                return GetString("DMRCorreInvoiceRequeAreNotAvailOrHaveAlreadyBeen");
            }
        }
        
        /// <summary>
        /// String: 'DMR {0}-{1}'.
        /// </summary>
        internal static string DMR(object arg0, object arg1)
        {
            return GetString("DMR", arg0, arg1);
        }
        
        /// <summary>
        /// String: '{0} Debit Memo(s) created.'.
        /// </summary>
        internal static string DebitMemoCreated(object arg0)
        {
            return GetString("DebitMemoCreated", arg0);
        }
        
        /// <summary>
        /// String: 'A fiscal period for today could not be found.'.
        /// </summary>
        internal static string AFiscalPeriodForTodayCouldNotBeFound
        {
            get
            {
                return GetString("AFiscalPeriodForTodayCouldNotBeFound");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice or Debit Memo is not available.'.
        /// </summary>
        internal static string DebitMemoIsNotAvailable
        {
            get
            {
                return GetString("DebitMemoIsNotAvailable");
            }
        }
        
        /// <summary>
        /// String: 'Legal numbers are not generated for manual generation type at the group level. Select a specific debit memo and then select Action..Assign Legal Number.'.
        /// </summary>
        internal static string LegalNumbersAreNotGenerForManualGenerTypeAtThe
        {
            get
            {
                return GetString("LegalNumbersAreNotGenerForManualGenerTypeAtThe");
            }
        }
        
        /// <summary>
        /// String: 'A void reason must be entered.'.
        /// </summary>
        internal static string AVoidReasonMustBeEntered
        {
            get
            {
                return GetString("AVoidReasonMustBeEntered");
            }
        }
        
        /// <summary>
        /// String: 'DMR header record not found.'.
        /// </summary>
        internal static string DMRHeaderRecordNotFound
        {
            get
            {
                return GetString("DMRHeaderRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'DMR Action record not found.'.
        /// </summary>
        internal static string DMRActionRecordNotFound
        {
            get
            {
                return GetString("DMRActionRecordNotFound");
            }
        }
        
        /// <summary>
        /// String: 'The specified DMR does not require supplier credit.'.
        /// </summary>
        internal static string TheSpeciDMRDoesNotRequireSupplCredit
        {
            get
            {
                return GetString("TheSpeciDMRDoesNotRequireSupplCredit");
            }
        }
        
        /// <summary>
        /// String: 'The specified DMR is for a different supplier.'.
        /// </summary>
        internal static string TheSpeciDMRIsForADiffeSuppl
        {
            get
            {
                return GetString("TheSpeciDMRIsForADiffeSuppl");
            }
        }
        
        /// <summary>
        /// String: 'Customer: {0}'.
        /// </summary>
        internal static string Customer(object arg0)
        {
            return GetString("Customer", arg0);
        }
        
        /// <summary>
        /// String: '&lt;unknown&gt;'.
        /// </summary>
        internal static string Unknown
        {
            get
            {
                return GetString("Unknown");
            }
        }
        
        /// <summary>
        /// String: 'Whse:{0} Bin {1}'.
        /// </summary>
        internal static string WhseBin(object arg0, object arg1)
        {
            return GetString("WhseBin", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Job {0} Asm {1} {2} {3}'.
        /// </summary>
        internal static string JobAsm(object arg0, object arg1, object arg2, object arg3)
        {
            return GetString("JobAsm", arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// String: 'Company,CurrencyCode,Description,VendorNum,OpenPayable,InvoiceDate,DueDate,InvoiceHeld,InvoiceNum,'.
        /// </summary>
        internal static string CompanyCurreDescrVendoOpenPInvoiDueDateInvoiInvoi
        {
            get
            {
                return GetString("CompanyCurreDescrVendoOpenPInvoiDueDateInvoiInvoi");
            }
        }
        
        /// <summary>
        /// String: 'DocInvoiceAmt,DocInvoiceBal,LegalNumber,EntryPerson,InvoiceAmt,'.
        /// </summary>
        internal static string DocInDocInLegalEntryInvoi
        {
            get
            {
                return GetString("DocInDocInLegalEntryInvoi");
            }
        }
        
        /// <summary>
        /// String: 'InvoiceBal,DebitMemo,UnpostedBal,DocUnpostedBal,FiscalPeriod, FiscalYear, InvoiceRef,PayHold,'.
        /// </summary>
        internal static string InvoiDebitUnposDocUnFiscaFiscaInvoiPayHold
        {
            get
            {
                return GetString("InvoiDebitUnposDocUnFiscaFiscaInvoiPayHold");
            }
        }
        
        /// <summary>
        /// String: 'Return Tax Liability has to be set up.'.
        /// </summary>
        internal static string ReturnTaxLiabilityHasToBeSetUp
        {
            get
            {
                return GetString("ReturnTaxLiabilityHasToBeSetUp");
            }
        }
        
        /// <summary>
        /// String: 'The Allocation ID is invalid.'.
        /// </summary>
        internal static string TheAllocationIDIsInvalid
        {
            get
            {
                return GetString("TheAllocationIDIsInvalid");
            }
        }
        
        /// <summary>
        /// String: 'An Allocation Amount is required.'.
        /// </summary>
        internal static string AnAllocationAmountIsRequired
        {
            get
            {
                return GetString("AnAllocationAmountIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'A valid Invoice is required.'.
        /// </summary>
        internal static string AValidInvoiceIsRequired
        {
            get
            {
                return GetString("AValidInvoiceIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'The invoice is not a bill of exchange invoice.'.
        /// </summary>
        internal static string TheInvoiceIsNotABillOfExchaInvoice
        {
            get
            {
                return GetString("TheInvoiceIsNotABillOfExchaInvoice");
            }
        }
        
        /// <summary>
        /// String: 'One or more selected invoices were skipped due to validation errors.'.
        /// </summary>
        internal static string OneOrMoreSelecInvoiWereSkippedDueToValidErrors
        {
            get
            {
                return GetString("OneOrMoreSelecInvoiWereSkippedDueToValidErrors");
            }
        }
        
        /// <summary>
        /// String: '
        /// Invoice: {0} , Supplier: {1} . Error - No logged Invoice found.'.
        /// </summary>
        internal static string NInvoiceSupplErrorNoLoggedInvoiceFound(object arg0, object arg1)
        {
            return GetString("NInvoiceSupplErrorNoLoggedInvoiceFound", arg0, arg1);
        }
        
        /// <summary>
        /// String: '
        /// Invoice: {0} , Supplier: {1} . Error - Logged Invoice already exist as AP Invoice.'.
        /// </summary>
        internal static string NInvoiceSupplErrorLoggedInvoiceAlreadyExistAsAP(object arg0, object arg1)
        {
            return GetString("NInvoiceSupplErrorLoggedInvoiceAlreadyExistAsAP", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'APInvJob not found.'.
        /// </summary>
        internal static string APInvJobNotFound
        {
            get
            {
                return GetString("APInvJobNotFound");
            }
        }
        
        /// <summary>
        /// String: 'APInvPB has not changed.'.
        /// </summary>
        internal static string APInvPBHasNotChanged
        {
            get
            {
                return GetString("APInvPBHasNotChanged");
            }
        }
        
        /// <summary>
        /// String: 'ttApInvDtl not found.'.
        /// </summary>
        internal static string TtApInvDtlNotFound
        {
            get
            {
                return GetString("TtApInvDtlNotFound");
            }
        }
        
        /// <summary>
        /// String: 'The Reference Invoice selected cannot be selected.Invoice amount have already been assigned.'.
        /// </summary>
        internal static string TheReferInvoiceSelecCannotBeSelecInvoiceAmount
        {
            get
            {
                return GetString("TheReferInvoiceSelecCannotBeSelecInvoiceAmount");
            }
        }
        
        /// <summary>
        /// String: 'The Reference Invoice selected cannot be selected. Invoice unassigned amount subtracting Detractions amount is zero.'.
        /// </summary>
        internal static string TheReferInvoiceSelecCannotBeSelecInvoiceUnassAmount
        {
            get
            {
                return GetString("TheReferInvoiceSelecCannotBeSelecInvoiceUnassAmount");
            }
        }
        
        /// <summary>
        /// String: 'Record not available.'.
        /// </summary>
        internal static string RecordNotAvailable_0
        {
            get
            {
                return GetString("RecordNotAvailable_0");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Transaction Document Type.'.
        /// </summary>
        internal static string InvalidTransactionDocumentType
        {
            get
            {
                return GetString("InvalidTransactionDocumentType");
            }
        }
        
        /// <summary>
        /// String: 'No Miscellaneous Charge Selected.'.
        /// </summary>
        internal static string NoMiscellaneousChargeSelected
        {
            get
            {
                return GetString("NoMiscellaneousChargeSelected");
            }
        }
        
        /// <summary>
        /// String: 'The record was not modified'.
        /// </summary>
        internal static string TheRecordWasNotModified
        {
            get
            {
                return GetString("TheRecordWasNotModified");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Shipment ID.'.
        /// </summary>
        internal static string InvalidShipmentID
        {
            get
            {
                return GetString("InvalidShipmentID");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Date is required before legal number can be generated.'.
        /// </summary>
        internal static string InvoiceDateIsRequiBeforeLegalNumberCanBeGener
        {
            get
            {
                return GetString("InvoiceDateIsRequiBeforeLegalNumberCanBeGener");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Invoice number.'.
        /// </summary>
        internal static string InvalidInvoiceNumber
        {
            get
            {
                return GetString("InvalidInvoiceNumber");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Uninvoiced Receipt.'.
        /// </summary>
        internal static string InvalidUninvoicedReceipt
        {
            get
            {
                return GetString("InvalidUninvoicedReceipt");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Detail not found.'.
        /// </summary>
        internal static string InvoiceDetailNotFound
        {
            get
            {
                return GetString("InvoiceDetailNotFound");
            }
        }
        
        /// <summary>
        /// String: 'The Vendor is invalid.'.
        /// </summary>
        internal static string TheVendorIsInvalid
        {
            get
            {
                return GetString("TheVendorIsInvalid");
            }
        }
        
        /// <summary>
        /// String: 'The Invoice does not exist.'.
        /// </summary>
        internal static string TheInvoiceDoesNotExist
        {
            get
            {
                return GetString("TheInvoiceDoesNotExist");
            }
        }
        
        /// <summary>
        /// String: 'The invoice is already in group {0}.'.
        /// </summary>
        internal static string TheInvoiceIsAlreadyInGroup(object arg0)
        {
            return GetString("TheInvoiceIsAlreadyInGroup", arg0);
        }
        
        /// <summary>
        /// String: 'The Group is invalid.'.
        /// </summary>
        internal static string TheGroupIsInvalid
        {
            get
            {
                return GetString("TheGroupIsInvalid");
            }
        }
        
        /// <summary>
        /// String: 'No AP Invoice selected.'.
        /// </summary>
        internal static string NoAPInvoiceSelected
        {
            get
            {
                return GetString("NoAPInvoiceSelected");
            }
        }
        
        /// <summary>
        /// String: 'No Logged Invoice found.'.
        /// </summary>
        internal static string NoLoggedInvoiceFound
        {
            get
            {
                return GetString("NoLoggedInvoiceFound");
            }
        }
        
        /// <summary>
        /// String: '
        /// Invoice: {0} , Supplier: {1} . Error - Invalid Reference PO Number.'.
        /// </summary>
        internal static string NInvoiceSupplErrorInvalidReferPONumber(object arg0, object arg1)
        {
            return GetString("NInvoiceSupplErrorInvalidReferPONumber", arg0, arg1);
        }
        
        /// <summary>
        /// String: '
        /// Invoice: {0} , Supplier: {1} . Error - A consolidated PO may not be selected.'.
        /// </summary>
        internal static string NInvoiceSupplErrorAConsoPOMayNotBeSelec(object arg0, object arg1)
        {
            return GetString("NInvoiceSupplErrorAConsoPOMayNotBeSelec", arg0, arg1);
        }
        
        /// <summary>
        /// String: '
        /// Invoice: {0} , Supplier: {1} . Error - A consolidated PO may not be selected for Central Payment process..'.
        /// </summary>
        internal static string NInvoiceSupplErrorAConsoPOMayNotBeSelecForCentral(object arg0, object arg1)
        {
            return GetString("NInvoiceSupplErrorAConsoPOMayNotBeSelecForCentral", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'A valid A/P System Control record is required.'.
        /// </summary>
        internal static string AValidAPSystemControlRecordIsRequi
        {
            get
            {
                return GetString("AValidAPSystemControlRecordIsRequi");
            }
        }
        
        /// <summary>
        /// String: 'Invalid supplier.'.
        /// </summary>
        internal static string InvalidSupplier
        {
            get
            {
                return GetString("InvalidSupplier");
            }
        }
        
        /// <summary>
        /// String: 'This invoice already exists as a Bill of Exchange for the selected supplier.'.
        /// </summary>
        internal static string ThisInvoiceAlreadyExistsAsABillOfExchaForTheSelec
        {
            get
            {
                return GetString("ThisInvoiceAlreadyExistsAsABillOfExchaForTheSelec");
            }
        }
        
        /// <summary>
        /// String: 'This invoice already exists for the selected supplier.'.
        /// </summary>
        internal static string ThisInvoiceAlreadyExistsForTheSelecSuppl
        {
            get
            {
                return GetString("ThisInvoiceAlreadyExistsForTheSelecSuppl");
            }
        }
        
        /// <summary>
        /// String: 'Selected invoice already exists as a Logged Invoice and has been voided.'.
        /// </summary>
        internal static string SelecInvoiceAlreadyExistsAsALoggedInvoiceAndHas
        {
            get
            {
                return GetString("SelecInvoiceAlreadyExistsAsALoggedInvoiceAndHas");
            }
        }
        
        /// <summary>
        /// String: 'Selected invoice already exists as a Logged Invoice but has not been approved.'.
        /// </summary>
        internal static string SelecInvoiceAlreadyExistsAsALoggedInvoiceButHas
        {
            get
            {
                return GetString("SelecInvoiceAlreadyExistsAsALoggedInvoiceButHas");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Reference not found.'.
        /// </summary>
        internal static string InvoiceReferenceNotFound
        {
            get
            {
                return GetString("InvoiceReferenceNotFound");
            }
        }
        
        /// <summary>
        /// String: 'The invoice is already assigned to a bill of exchange invoice.'.
        /// </summary>
        internal static string TheInvoiceIsAlreadyAssigToABillOfExchaInvoice
        {
            get
            {
                return GetString("TheInvoiceIsAlreadyAssigToABillOfExchaInvoice");
            }
        }
        
        /// <summary>
        /// String: 'BoE amount should be lesser than the Reference Invoice balance subtracting Detractions amount.'.
        /// </summary>
        internal static string BOEAmountShouldBeLesserThanTheReferInvoiceBalance
        {
            get
            {
                return GetString("BOEAmountShouldBeLesserThanTheReferInvoiceBalance");
            }
        }
        
        /// <summary>
        /// String: 'Existing invoice number cannot be the same as the new invoice number.'.
        /// </summary>
        internal static string ExistInvoiceNumberCannotBeTheSameAsTheNewInvoice
        {
            get
            {
                return GetString("ExistInvoiceNumberCannotBeTheSameAsTheNewInvoice");
            }
        }
        
        /// <summary>
        /// String: 'Reference Invoice not found.'.
        /// </summary>
        internal static string ReferenceInvoiceNotFound
        {
            get
            {
                return GetString("ReferenceInvoiceNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Reference Invoice supplier does not match the Invoice supplier.'.
        /// </summary>
        internal static string ReferInvoiceSupplDoesNotMatchTheInvoiceSuppl
        {
            get
            {
                return GetString("ReferInvoiceSupplDoesNotMatchTheInvoiceSuppl");
            }
        }
        
        /// <summary>
        /// String: 'Reference Invoice must be posted.'.
        /// </summary>
        internal static string ReferenceInvoiceMustBePosted
        {
            get
            {
                return GetString("ReferenceInvoiceMustBePosted");
            }
        }
        
        /// <summary>
        /// String: 'Reference Invoice must be open.'.
        /// </summary>
        internal static string ReferenceInvoiceMustBeOpen
        {
            get
            {
                return GetString("ReferenceInvoiceMustBeOpen");
            }
        }
        
        /// <summary>
        /// String: 'The currency for all invoice references linked to the Bill of Exchange Invoice must match.'.
        /// </summary>
        internal static string TheCurreForAllInvoiceReferLinkedToTheBillOfExcha
        {
            get
            {
                return GetString("TheCurreForAllInvoiceReferLinkedToTheBillOfExcha");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Miscellaneous Charge Code.'.
        /// </summary>
        internal static string InvalidMiscellaneousChargeCode
        {
            get
            {
                return GetString("InvalidMiscellaneousChargeCode");
            }
        }
        
        /// <summary>
        /// String: 'A tax line already exists for tax code {0}.'.
        /// </summary>
        internal static string ATaxLineAlreadyExistsForTaxCode(object arg0)
        {
            return GetString("ATaxLineAlreadyExistsForTaxCode", arg0);
        }
        
        /// <summary>
        /// String: 'Invoice: {0}'.
        /// </summary>
        internal static string Invoice(object arg0)
        {
            return GetString("Invoice", arg0);
        }
        
        /// <summary>
        /// String: 'A logged Invoice already exist for the vendor : {0} Invoice: {1}'.
        /// </summary>
        internal static string ALoggedInvoiceAlreadyExistForTheVendorInvoice(object arg0, object arg1)
        {
            return GetString("ALoggedInvoiceAlreadyExistForTheVendorInvoice", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'This Invoice is matched to a Logged invoice and override value is false. 
        /// Delete of Tax Line is not allowed.'.
        /// </summary>
        internal static string ThisInvoiceIsMatchedToALoggedInvoiceAndOverrValue
        {
            get
            {
                return GetString("ThisInvoiceIsMatchedToALoggedInvoiceAndOverrValue");
            }
        }
        
        /// <summary>
        /// String: 'R{0}-{1}'.
        /// </summary>
        internal static string Resource_0(object arg0, object arg1)
        {
            return GetString("Resource_0", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'The follow Logged Invoice(s) had issue(s) and were not created. 
        /// {0}'.
        /// </summary>
        internal static string TheFollowLoggedInvoiceSHadIssueSAndWereNotCreated(object arg0)
        {
            return GetString("TheFollowLoggedInvoiceSHadIssueSAndWereNotCreated", arg0);
        }
        
        /// <summary>
        /// String: 'A fiscal period for {0} cound not be found.'.
        /// </summary>
        internal static string FiscalPeriodNotFound(object arg0)
        {
            return GetString("FiscalPeriodNotFound", arg0);
        }
        
        /// <summary>
        /// String: 'Corrective Invoice cannot be created for a Revision of Corrective Invoice.'.
        /// </summary>
        internal static string CorrectiveInvoiceCannotBeCreated
        {
            get
            {
                return GetString("CorrectiveInvoiceCannotBeCreated");
            }
        }
        
        /// <summary>
        /// String: 'Mtl'.
        /// </summary>
        internal static string Mtl
        {
            get
            {
                return GetString("Mtl");
            }
        }
        
        /// <summary>
        /// String: 'Opr'.
        /// </summary>
        internal static string Opr
        {
            get
            {
                return GetString("Opr");
            }
        }
        
        /// <summary>
        /// String: 'There were errors during getting account for this transaction. The error is: {0}.'.
        /// </summary>
        internal static string ThereWereErrorsDuringGettingAccountForThisTrans(object arg0)
        {
            return GetString("ThereWereErrorsDuringGettingAccountForThisTrans", arg0);
        }
        
        /// <summary>
        /// String: 'Error generating BOE details'.
        /// </summary>
        internal static string ErrorBOEDetails
        {
            get
            {
                return GetString("ErrorBOEDetails");
            }
        }
        
        /// <summary>
        /// String: 'Maintenance not allowed with  Tax Inclusive Liability'.
        /// </summary>
        internal static string MaintenanceNotAllowedTaxInclLiability
        {
            get
            {
                return GetString("MaintenanceNotAllowedTaxInclLiability");
            }
        }
        
        /// <summary>
        /// String: 'This Tax Records are summary only. Delete not allowed.'.
        /// </summary>
        internal static string ThisInvoiceHasInPriceTaxes
        {
            get
            {
                return GetString("ThisInvoiceHasInPriceTaxes");
            }
        }
        
        /// <summary>
        /// String: 'The collection method should be Invoicing.'.
        /// </summary>
        internal static string ColMethodInvoicing
        {
            get
            {
                return GetString("ColMethodInvoicing");
            }
        }
        
        /// <summary>
        /// String: 'Total Inclusive Tax Amount cannot exceed related Misc Charge Amount.'.
        /// </summary>
        internal static string TotalInclTaxHeader
        {
            get
            {
                return GetString("TotalInclTaxHeader");
            }
        }
        
        /// <summary>
        /// String: 'Tax Inclusive Liability allowed when AP Invoice has only Miscellaneous, Receipt, Unreceived or Advance Billing lines.'.
        /// </summary>
        internal static string TaxInclNotAllwd
        {
            get
            {
                return GetString("TaxInclNotAllwd");
            }
        }
        
        /// <summary>
        /// String: 'Tax Liability is not valid'.
        /// </summary>
        internal static string TaxLiabilityNotValid
        {
            get
            {
                return GetString("TaxLiabilityNotValid");
            }
        }
        
        /// <summary>
        /// String: 'A Legal Number Configuration for Bill Of Exchange must exist before invoices can be created'.
        /// </summary>
        internal static string LegalNumCnfgBoe
        {
            get
            {
                return GetString("LegalNumCnfgBoe");
            }
        }
        
        /// <summary>
        /// String: 'A Legal Number Configuration for Debit Memos must exist before invoices can be created.'.
        /// </summary>
        internal static string LegalNumCnfgDM
        {
            get
            {
                return GetString("LegalNumCnfgDM");
            }
        }
        
        /// <summary>
        /// String: 'A Legal Number Configuration for AP Invoices must exist before invoices can be created'.
        /// </summary>
        internal static string LegalNumCnfgInvoice
        {
            get
            {
                return GetString("LegalNumCnfgInvoice");
            }
        }
        
        /// <summary>
        /// String: 'Employee is not on file'.
        /// </summary>
        internal static string EmplNotOnFile
        {
            get
            {
                return GetString("EmplNotOnFile");
            }
        }
        
        /// <summary>
        /// String: 'Linked Expense is not on file'.
        /// </summary>
        internal static string LinkExpenseNotOnFile
        {
            get
            {
                return GetString("LinkExpenseNotOnFile");
            }
        }
        
        /// <summary>
        /// String: 'Linked Expense should be Approved.'.
        /// </summary>
        internal static string LinkExpenseShouldAppvd
        {
            get
            {
                return GetString("LinkExpenseShouldAppvd");
            }
        }
        
        /// <summary>
        /// String: 'Linked Expense should be non-Reimbursable'.
        /// </summary>
        internal static string LinkExpenseShouldNotNonReim
        {
            get
            {
                return GetString("LinkExpenseShouldNotNonReim");
            }
        }
        
        /// <summary>
        /// String: 'Currency code of the linked Expense and the Invoice should be the same.'.
        /// </summary>
        internal static string LinkExpenseCurrencyCode
        {
            get
            {
                return GetString("LinkExpenseCurrencyCode");
            }
        }
        
        /// <summary>
        /// String: 'Expense has been already linked to another Invoice Job Charge.'.
        /// </summary>
        internal static string LinkExpenseJobCharge
        {
            get
            {
                return GetString("LinkExpenseJobCharge");
            }
        }
        
        /// <summary>
        /// String: 'Charge code of the linked Expense and the Invoice should be the same.'.
        /// </summary>
        internal static string LinkExpenseMiscCode
        {
            get
            {
                return GetString("LinkExpenseMiscCode");
            }
        }
        
        /// <summary>
        /// String: 'WBS Phase of the linked Expense and the Invoice should be the same'.
        /// </summary>
        internal static string LinkExpensePhase
        {
            get
            {
                return GetString("LinkExpensePhase");
            }
        }
        
        /// <summary>
        /// String: 'Banking reference is empty for invoice(s): {0}
        ///Please confirm if there are NO banking reference numbers to enter.'.
        /// </summary>
        internal static string BankingReferenceIsEmptyForInvoices(object arg0)
        {
            return GetString("BankingReferenceIsEmptyForInvoices", arg0);
        }
        
        /// <summary>
        /// String: 'Source invoice is not found.'.
        /// </summary>
        internal static string Sourceinvoiceisnotfound
        {
            get
            {
                return GetString("Sourceinvoiceisnotfound");
            }
        }
        
        /// <summary>
        /// String: 'AP Invoice Group is not found	'.
        /// </summary>
        internal static string APInvGrpNotFound
        {
            get
            {
                return GetString("APInvGrpNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Header is not found'.
        /// </summary>
        internal static string InvoiceHeaderNotFound
        {
            get
            {
                return GetString("InvoiceHeaderNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Recurring cycle is not found.'.
        /// </summary>
        internal static string RecurringCycleNotFound
        {
            get
            {
                return GetString("RecurringCycleNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Cycle Code should be entered'.
        /// </summary>
        internal static string CycleCodeEntered
        {
            get
            {
                return GetString("CycleCodeEntered");
            }
        }
        
        /// <summary>
        /// String: 'Duration must be equal or greater than 1'.
        /// </summary>
        internal static string DurationEqualGreater
        {
            get
            {
                return GetString("DurationEqualGreater");
            }
        }
        
        /// <summary>
        /// String: 'Duration must be equal or greater than the number of already generated recurring invoices'.
        /// </summary>
        internal static string DurationEqualGreater2
        {
            get
            {
                return GetString("DurationEqualGreater2");
            }
        }
        
        /// <summary>
        /// String: 'End Date must be equal or later than the date of the last created recurring invoice'.
        /// </summary>
        internal static string RecurInvLastDate
        {
            get
            {
                return GetString("RecurInvLastDate");
            }
        }
        
        /// <summary>
        /// String: 'Maximum Value must be greater than 0'.
        /// </summary>
        internal static string RecurInvMaxValue
        {
            get
            {
                return GetString("RecurInvMaxValue");
            }
        }
        
        /// <summary>
        /// String: 'Maximum Value must be equal or greater than the total amount of  already generated recurring invoices'.
        /// </summary>
        internal static string RecurInvMaxValueEqualGreater
        {
            get
            {
                return GetString("RecurInvMaxValueEqualGreater");
            }
        }
        
        /// <summary>
        /// String: 'Source Recurring invoice number cannot contain more than 45 characters'.
        /// </summary>
        internal static string SourceRecurLen
        {
            get
            {
                return GetString("SourceRecurLen");
            }
        }
        
        /// <summary>
        /// String: 'Goods Receipt Date must be later or same as PO Date'.
        /// </summary>
        internal static string GoodsReceiptDateMustBeLaterPODate
        {
            get
            {
                return GetString("GoodsReceiptDateMustBeLaterPODate");
            }
        }
        
        /// <summary>
        /// String: 'A valid Payment Method is required.'.
        /// </summary>
        internal static string InvalidPaymentMethod
        {
            get
            {
                return GetString("InvalidPaymentMethod");
            }
        }
        
        /// <summary>
        /// String: 'Received Date is mandatory (Poland localization).'.
        /// </summary>
        internal static string ReceivedDateIsMandatory
        {
            get
            {
                return GetString("ReceivedDateIsMandatory");
            }
        }
        
        /// <summary>
        /// String: 'GUI Format Code, Tax Type, Deduction and Document Type are required.'.
        /// </summary>
        internal static string GUIFieldsArEmpty
        {
            get
            {
                return GetString("GUIFieldsArEmpty");
            }
        }
        
        /// <summary>
        /// String: 'GUI Invoice Number already exists.'.
        /// </summary>
        internal static string GUIUnique
        {
            get
            {
                return GetString("GUIUnique");
            }
        }
        
        /// <summary>
        /// String: 'DUA No. {0} already exists.'.
        /// </summary>
        internal static string DUANoExists(object arg0)
        {
            return GetString("DUANoExists", arg0);
        }
        
        /// <summary>
        /// String: 'Manually adding Detracciones Tax is not allowed.'.
        /// </summary>
        internal static string ManualAddingDetracciones
        {
            get
            {
                return GetString("ManualAddingDetracciones");
            }
        }
        
        /// <summary>
        /// String: 'Letter of Credit is inactive'.
        /// </summary>
        internal static string LetterofCreditisinactive
        {
            get
            {
                return GetString("LetterofCreditisinactive");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Detractions taxes have not yet been paid for invoice(s) {0} to National Bank.'.
        /// </summary>
        internal static string InvoiceDetraTaxesHaveNotYetBeenPaidForInvoiceS(object arg0)
        {
            return GetString("InvoiceDetraTaxesHaveNotYetBeenPaidForInvoiceS", arg0);
        }
        
        /// <summary>
        /// String: 'Invalid Prepayment Amount'.
        /// </summary>
        internal static string InvalidPrepaymentAmount
        {
            get
            {
                return GetString("InvalidPrepaymentAmount");
            }
        }
        
        /// <summary>
        /// String: 'Prepayment Currency does not match Invoice Currency'.
        /// </summary>
        internal static string PrepaymentCurrencyMatch
        {
            get
            {
                return GetString("PrepaymentCurrencyMatch");
            }
        }
        
        /// <summary>
        /// String: 'Tax ID, Branch ID, DM Reason,'.
        /// </summary>
        internal static string TaxIDBranchIDDMReason
        {
            get
            {
                return GetString("TaxIDBranchIDDMReason");
            }
        }
        
        /// <summary>
        /// String: 'The Slip Type {0} is not allowed for currency {1}.'.
        /// </summary>
        internal static string TheSlipTypeIsNotAllowedForCurrency(object arg0, object arg1)
        {
            return GetString("TheSlipTypeIsNotAllowedForCurrency", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'The ISR Code Line is incorrect.'.
        /// </summary>
        internal static string TheISRCodeLineIsIncorrect
        {
            get
            {
                return GetString("TheISRCodeLineIsIncorrect");
            }
        }
        
        /// <summary>
        /// String: 'Do you wish to continue ?'.
        /// </summary>
        internal static string DoYouWishToContinue
        {
            get
            {
                return GetString("DoYouWishToContinue");
            }
        }
        
        /// <summary>
        /// String: 'ISR Code Line and ISR Reference Number must be entered.'.
        /// </summary>
        internal static string ISRCodeLineAndISRRefNumMustBeEntered
        {
            get
            {
                return GetString("ISRCodeLineAndISRRefNumMustBeEntered");
            }
        }
        
        /// <summary>
        /// String: 'The ISR Reference Number does not match ISR Code Line.'.
        /// </summary>
        internal static string TheISRRefNumDoesNotMatchISRCodeLine
        {
            get
            {
                return GetString("TheISRRefNumDoesNotMatchISRCodeLine");
            }
        }
        
        /// <summary>
        /// String: 'The ISR Reference Number length is greater than 27 characters.'.
        /// </summary>
        internal static string TheISRRefNumLengthIsGreaterThanChara
        {
            get
            {
                return GetString("TheISRRefNumLengthIsGreaterThanChara");
            }
        }
        
        /// <summary>
        /// String: 'There are non numeric character in ISR Reference Number.'.
        /// </summary>
        internal static string ThereAreNonNumericCharaInISRRefNum
        {
            get
            {
                return GetString("ThereAreNonNumericCharaInISRRefNum");
            }
        }
        
        /// <summary>
        /// String: 'Urgent Payment'.
        /// </summary>
        internal static string UrgentPayment
        {
            get
            {
                return GetString("UrgentPayment");
            }
        }
        
        /// <summary>
        /// String: 'Check-Digit validation fails for ISR Code Line'.
        /// </summary>
        internal static string CheckDigitValidationFails
        {
            get
            {
                return GetString("CheckDigitValidationFails");
            }
        }
        
        /// <summary>
        /// String: 'The Amount is invalid.'.
        /// </summary>
        internal static string TheAmountIsInvalid
        {
            get
            {
                return GetString("TheAmountIsInvalid");
            }
        }
        
        /// <summary>
        /// String: 'The ISR Party Number is invalid.'.
        /// </summary>
        internal static string TheISRPartyNumberIsInvalid
        {
            get
            {
                return GetString("TheISRPartyNumberIsInvalid");
            }
        }
        
        /// <summary>
        /// String: 'The ISR Reference Number is invalid.'.
        /// </summary>
        internal static string TheISRReferenceNumberIsInvalid
        {
            get
            {
                return GetString("TheISRReferenceNumberIsInvalid");
            }
        }
        
        /// <summary>
        /// String: 'Currency ISO Code for Invoice currency must be CHF.'.
        /// </summary>
        internal static string CurrencyISOCodeForInvoiceCurrMustBeCHF
        {
            get
            {
                return GetString("CurrencyISOCodeForInvoiceCurrMustBeCHF");
            }
        }
        
        /// <summary>
        /// String: 'Currency ISO Code for Invoice currency must be EUR or CHF.'.
        /// </summary>
        internal static string CurrencyISOCodeForInvoiceCurrMustBeEUROrCHF
        {
            get
            {
                return GetString("CurrencyISOCodeForInvoiceCurrMustBeEUROrCHF");
            }
        }
        
        /// <summary>
        /// String: 'Currency ISO Code for Supplier {0} must be EUR or CHF.'.
        /// </summary>
        internal static string CurrencyISOCodeForSupplierMustBeEUROrCHF(object arg0)
        {
            return GetString("CurrencyISOCodeForSupplierMustBeEUROrCHF", arg0);
        }
        
        /// <summary>
        /// String: 'Currency with ISO Code &apos;CHF&apos; is not found.'.
        /// </summary>
        internal static string CurrencyWithISOCodeIsNotFound
        {
            get
            {
                return GetString("CurrencyWithISOCodeIsNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Supplier Bank for ISR Party Number {0} and Bank Customer Number {1} could not be found.'.
        /// </summary>
        internal static string SupplBankForISRPartyIDAndBankCustNumCouldNotBeFound(object arg0, object arg1)
        {
            return GetString("SupplBankForISRPartyIDAndBankCustNumCouldNotBeFound", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Supplier Bank for ISR Party Number {0} could not be found.'.
        /// </summary>
        internal static string SupplBankForISRPartyIDCouldNotBeFound(object arg0)
        {
            return GetString("SupplBankForISRPartyIDCouldNotBeFound", arg0);
        }
        
        /// <summary>
        /// String: 'Supplier does not correspond to ISR Code Line.'.
        /// </summary>
        internal static string SupplDoesNotCorrespondToISRCodeLine
        {
            get
            {
                return GetString("SupplDoesNotCorrespondToISRCodeLine");
            }
        }
        
        /// <summary>
        /// String: 'Supplier does not have a Bank with ISR Party Number {0}.'.
        /// </summary>
        internal static string SupplDoesNotHaveABankWithISRPartyID(object arg0)
        {
            return GetString("SupplDoesNotHaveABankWithISRPartyID", arg0);
        }
        
        /// <summary>
        /// String: 'invoice(s) created.'.
        /// </summary>
        internal static string RecInvoicesCreated
        {
            get
            {
                return GetString("RecInvoicesCreated");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Correction Invoice number, the new invoice number can not be blank or match select invoice number.'.
        /// </summary>
        internal static string InvalidNewCorrectionInvoiceNumber
        {
            get
            {
                return GetString("InvalidNewCorrectionInvoiceNumber");
            }
        }
        
        /// <summary>
        /// String: 'Negative amount is not allowed for non correction invoice.'.
        /// </summary>
        internal static string NegativeAmount
        {
            get
            {
                return GetString("NegativeAmount");
            }
        }
        
        /// <summary>
        /// String: 'Wrong invoice number format (X-9999-99999999).'.
        /// </summary>
        internal static string WrongInvoiceNumberFormat
        {
            get
            {
                return GetString("WrongInvoiceNumberFormat");
            }
        }
        
        /// <summary>
        /// String: 'The invoice letter must be A,B,C,E,M.'.
        /// </summary>
        internal static string TheInvoiceLetterMustBeABCEM
        {
            get
            {
                return GetString("TheInvoiceLetterMustBeABCEM");
            }
        }
        
        /// <summary>
        /// String: 'The invoicing number must be numeric.'.
        /// </summary>
        internal static string TheInvoicingNumberMustBeNumeric
        {
            get
            {
                return GetString("TheInvoicingNumberMustBeNumeric");
            }
        }
        
        /// <summary>
        /// String: 'The invoicing point must be numeric.'.
        /// </summary>
        internal static string TheInvoicingPointMustBeNumeric
        {
            get
            {
                return GetString("TheInvoicingPointMustBeNumeric");
            }
        }
        
        /// <summary>
        /// String: 'The CAI CAE Expiration Date must be different of blank.'.
        /// </summary>
        internal static string TheCAICAEExpirationDateMustBeDifferentOfBlank
        {
            get
            {
                return GetString("TheCAICAEExpirationDateMustBeDifferentOfBlank");
            }
        }
        
        /// <summary>
        /// String: 'The CAI CAE Number must be different of blank.'.
        /// </summary>
        internal static string TheCAICAENumberMustBeDifferentOfBlank
        {
            get
            {
                return GetString("TheCAICAENumberMustBeDifferentOfBlank");
            }
        }
        
        /// <summary>
        /// String: '... and more.'.
        /// </summary>
        internal static string AndMore
        {
            get
            {
                return GetString("AndMore");
            }
        }
        
        /// <summary>
        /// String: 'Multiple suppliers have been found for the ISR Party Number {0} and reference number {1}.
        ///Please verify position and length of the Bank Customer Number in supplier banks for:{2}'.
        /// </summary>
        internal static string MultipleSupplHaveBeenFoundForISRPartyIDAndRefNumber(object arg0, object arg1, object arg2)
        {
            return GetString("MultipleSupplHaveBeenFoundForISRPartyIDAndRefNumber", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Supplier'.
        /// </summary>
        internal static string Supplier
        {
            get
            {
                return GetString("Supplier");
            }
        }
        
        /// <summary>
        /// String: 'Miscellaneous Charge {0} is inactive.'.
        /// </summary>
        internal static string MiscChargeInactive(object arg0)
        {
            return GetString("MiscChargeInactive", arg0);
        }
        
        /// <summary>
        /// String: 'The Postal Bank Account is invalid.'.
        /// </summary>
        internal static string TheISRPOBankAccountIsInvalid
        {
            get
            {
                return GetString("TheISRPOBankAccountIsInvalid");
            }
        }
        
        /// <summary>
        /// String: 'Supplier does not have a Bank with Postal Account {0}.'.
        /// </summary>
        internal static string SupplDoesNotHaveABankWithISRPOAccount(object arg0)
        {
            return GetString("SupplDoesNotHaveABankWithISRPOAccount", arg0);
        }
        
        /// <summary>
        /// String: 'Please specify a Internation Securities Id Num value consisting of two capital letters followed by 10 digits or capital letters.'.
        /// </summary>
        internal static string InternationSecutitiesIdNumIsWrong
        {
            get
            {
                return GetString("InternationSecutitiesIdNumIsWrong");
            }
        }
        
        /// <summary>
        /// String: 'MXFiscalFolio,'.
        /// </summary>
        internal static string MXFiscalFolio
        {
            get
            {
                return GetString("MXFiscalFolio");
            }
        }
        
        /// <summary>
        /// String: 'Cannot change the deferred expense flag to No because at least one expense amortization period has been posted.'.
        /// </summary>
        internal static string CannotChangeTheDeferExpFlagToNoBecauseAtLeast
        {
            get
            {
                return GetString("CannotChangeTheDeferExpFlagToNoBecauseAtLeast");
            }
        }
        
        /// <summary>
        /// String: 'End Date must be later than Start Date.'.
        /// </summary>
        internal static string EndDateMustBeLaterStartDate
        {
            get
            {
                return GetString("EndDateMustBeLaterStartDate");
            }
        }
        
        /// <summary>
        /// String: 'Amortization Amount must be positive.'.
        /// </summary>
        internal static string AmortAmtMustBePositive
        {
            get
            {
                return GetString("AmortAmtMustBePositive");
            }
        }
        
        /// <summary>
        /// String: 'Remaining Amount must be zero.'.
        /// </summary>
        internal static string RemainingMustBeZero
        {
            get
            {
                return GetString("RemainingMustBeZero");
            }
        }
        
        /// <summary>
        /// String: 'There is no available Fiscal Period between Start and End Dates.'.
        /// </summary>
        internal static string ThereIsNoAvailFiscalPeriodBetweenStartAndEndDates
        {
            get
            {
                return GetString("ThereIsNoAvailFiscalPeriodBetweenStartAndEndDates");
            }
        }
        
        /// <summary>
        /// String: 'There is already a line for Fiscal Year = {0} Suffix = &apos;{1}&apos; Period = {2}.'.
        /// </summary>
        internal static string ThereIsAlreadyLineForFiscalYearSuffixPeriod(object arg0, object arg1, object arg2)
        {
            return GetString("ThereIsAlreadyLineForFiscalYearSuffixPeriod", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Amortization date {0} is within Fiscal Year = {1} Suffix = &apos;{2}&apos; Period = {3}.'.
        /// </summary>
        internal static string AmortDateIsWithinFiscalYearSuffixPeriod(object arg0, object arg1, object arg2, object arg3)
        {
            return GetString("AmortDateIsWithinFiscalYearSuffixPeriod", arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// String: 'Cannot find a valid fiscal period for amortization date {0}'.
        /// </summary>
        internal static string CannotFindAValidFiscalPeriodForAmortDate(object arg0)
        {
            return GetString("CannotFindAValidFiscalPeriodForAmortDate", arg0);
        }
        
        /// <summary>
        /// String: 'Amortization date {0} must be within Start and End Dates.'.
        /// </summary>
        internal static string AmortDateMustBeBetweenStartAndEndDates(object arg0)
        {
            return GetString("AmortDateMustBeBetweenStartAndEndDates", arg0);
        }
        
        /// <summary>
        /// String: 'There is no any schedule line to add the remaining amount.'.
        /// </summary>
        internal static string ThereIsNoScheduleLineToAddTheRemainingAmount
        {
            get
            {
                return GetString("ThereIsNoScheduleLineToAddTheRemainingAmount");
            }
        }
        
        /// <summary>
        /// String: 'Reference invoice is already referenced by unposted Bill of Exchange.'.
        /// </summary>
        internal static string ReferenceInvoiceIsAlreadyReferencedByUnpostedBOE
        {
            get
            {
                return GetString("ReferenceInvoiceIsAlreadyReferencedByUnpostedBOE");
            }
        }
        
        /// <summary>
        /// String: 'Fiscal Year = {0} Suffix = &apos;{1}&apos; Period = {2} is not between Start and End Dates.'.
        /// </summary>
        internal static string FiscalPeriodIsNotBetweenStartAndEndDates(object arg0, object arg1, object arg2)
        {
            return GetString("FiscalPeriodIsNotBetweenStartAndEndDates", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Some Lines with Deferred Expenses don&apos;t have Amortization Schedule.'.
        /// </summary>
        internal static string SomeLinesWithDeferredExpensesDontHaveAmortSchedule
        {
            get
            {
                return GetString("SomeLinesWithDeferredExpensesDontHaveAmortSchedule");
            }
        }
        
        /// <summary>
        /// String: 'There is already a line for Fiscal Year = {0} Period = {1}.'.
        /// </summary>
        internal static string ThereIsAlreadyLineForFiscalYearPeriod(object arg0, object arg1)
        {
            return GetString("ThereIsAlreadyLineForFiscalYearPeriod", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Expected banking reference number format is 999/9999/99999.
        ///The banking reference number will not be validated.
        ///Would you like to continue?
        ///'.
        /// </summary>
        internal static string BankReferenceNotValidFormat
        {
            get
            {
                return GetString("BankReferenceNotValidFormat");
            }
        }
        
        /// <summary>
        /// String: 'A valid Bill of Exchange number is required.'.
        /// </summary>
        internal static string AValidBillOfExchangeNumberIsRequired
        {
            get
            {
                return GetString("AValidBillOfExchangeNumberIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'A valid supplier is required.'.
        /// </summary>
        internal static string AValidSupplierIsRequired
        {
            get
            {
                return GetString("AValidSupplierIsRequired");
            }
        }
        
        /// <summary>
        /// String: '&apos;{0}&apos; is not a valid Expense Amortization Code.'.
        /// </summary>
        internal static string IsNotValidExpenseAmortCode(object arg0)
        {
            return GetString("IsNotValidExpenseAmortCode", arg0);
        }
        
        /// <summary>
        /// String: 'MXRetentionCode,'.
        /// </summary>
        internal static string MXRetentionCode
        {
            get
            {
                return GetString("MXRetentionCode");
            }
        }
        
        /// <summary>
        /// String: 'PO/Line fields are required'.
        /// </summary>
        internal static string POLineFieldsAreRequired
        {
            get
            {
                return GetString("POLineFieldsAreRequired");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Letter of Credit ({0}) does not match PO Letter of Credit ({1}) related to lines  {2}.'.
        /// </summary>
        internal static string LOCNotMatch(object arg0, object arg1, object arg2)
        {
            return GetString("LOCNotMatch", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Base Currency was not found.'.
        /// </summary>
        internal static string BaseCurrency
        {
            get
            {
                return GetString("BaseCurrency");
            }
        }
        
        /// <summary>
        /// String: 'Transaction reason code has not been entered for supplier {0}.'.
        /// </summary>
        internal static string TransReasonCodesHasNotBeenEnteredForSuppl(object arg0)
        {
            return GetString("TransReasonCodesHasNotBeenEnteredForSuppl", arg0);
        }
        
        /// <summary>
        /// String: 'Invalid Transaction Reason Code!'.
        /// </summary>
        internal static string InvalidTransReasonCode
        {
            get
            {
                return GetString("InvalidTransReasonCode");
            }
        }
        
        /// <summary>
        /// String: ' Transaction Reason Code,'.
        /// </summary>
        internal static string TransReasonCode
        {
            get
            {
                return GetString("TransReasonCode");
            }
        }
        
        /// <summary>
        /// String: 'Apply Date cannot be blank. Enter a valid date.'.
        /// </summary>
        internal static string InvalidApplyDate
        {
            get
            {
                return GetString("InvalidApplyDate");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Date cannot be blank. Enter a valid date.'.
        /// </summary>
        internal static string InvalidInvoiceDate
        {
            get
            {
                return GetString("InvalidInvoiceDate");
            }
        }
        
        /// <summary>
        /// String: 'Tax Point Date cannot be blank. Enter a valid date.'.
        /// </summary>
        internal static string InvalidTaxPointDate
        {
            get
            {
                return GetString("InvalidTaxPointDate");
            }
        }
        
        /// <summary>
        /// String: 'Tax Rate Date cannot be blank. Enter a valid date.'.
        /// </summary>
        internal static string InvalidTaxRateDate
        {
            get
            {
                return GetString("InvalidTaxRateDate");
            }
        }
        
        /// <summary>
        /// String: 'TAR Code should be numeric. The maximum number of characters is 3.'.
        /// </summary>
        internal static string TARCodeShouldBeNumeric
        {
            get
            {
                return GetString("TARCodeShouldBeNumeric");
            }
        }
        
        /// <summary>
        /// String: 'MXTARCode,'.
        /// </summary>
        internal static string MXTARCode
        {
            get
            {
                return GetString("MXTARCode");
            }
        }
        
        /// <summary>
        /// String: 'Due Date cannot be blank. Please enter a valid date.'.
        /// </summary>
        internal static string DueDateCannotBeBlank
        {
            get
            {
                return GetString("DueDateCannotBeBlank");
            }
        }
        
        /// <summary>
        /// String: 'Tax Liability &apos;Inclusive&apos;/&apos;Exclusive&apos;  of PO does not match to the Tax Liability of Invoice'.
        /// </summary>
        internal static string TaxLiabilityFlagNotMatch
        {
            get
            {
                return GetString("TaxLiabilityFlagNotMatch");
            }
        }
        
        /// <summary>
        /// String: 'Tax Liability Inclusive/Exclusive type should match PO related to Invoice lines'.
        /// </summary>
        internal static string TaxLiabTypeMatchPo
        {
            get
            {
                return GetString("TaxLiabTypeMatchPo");
            }
        }
        
        /// <summary>
        /// String: 'This invoice line cannot be set as Final Invoice. There are unposted partial invoices for this receipt line under Group ID &quot;{0}&quot;.'.
        /// </summary>
        internal static string PendingInvoiceToBePosted(object arg0)
        {
            return GetString("PendingInvoiceToBePosted", arg0);
        }
        
        /// <summary>
        /// String: 'Only Withholding Tax code could be added if Tax Liablity is &apos;Tax Inclusive Pricing&apos; or Company set up is &apos;AP Tax Records for Invoice lines&apos;'.
        /// </summary>
        internal static string InvalidTaxCodeForTaxIncl
        {
            get
            {
                return GetString("InvalidTaxCodeForTaxIncl");
            }
        }
        
        /// <summary>
        /// String: 'All Selected'.
        /// </summary>
        internal static string AllSelected
        {
            get
            {
                return GetString("AllSelected");
            }
        }
        
        /// <summary>
        /// String: 'Partial invoicing requires partial quantity to invoice. Please enter a supplier qty less than {0} before making this invoice line partial.'.
        /// </summary>
        internal static string PartialInvoicingRequiresPartialQty(object arg0)
        {
            return GetString("PartialInvoicingRequiresPartialQty", arg0);
        }
        
        /// <summary>
        /// String: 'Manual GRNI Clearing invoices cannot be processed in the same group as normal Invoices.'.
        /// </summary>
        internal static string UnableToCreateGRNIClearingWithExistingNormalInvoice
        {
            get
            {
                return GetString("UnableToCreateGRNIClearingWithExistingNormalInvoice");
            }
        }
        
        /// <summary>
        /// String: 'GRNI Clearing invoices cannot be processed in the same group as normal Invoices.'.
        /// </summary>
        internal static string UnableToCreateGRNIClearing
        {
            get
            {
                return GetString("UnableToCreateGRNIClearing");
            }
        }
        
        /// <summary>
        /// String: 'Mix items subject and NOT subject to Detractions or items with different detraction rates are not allowed'.
        /// </summary>
        internal static string MixedDetractionRatesNotAllowed
        {
            get
            {
                return GetString("MixedDetractionRatesNotAllowed");
            }
        }
        
        /// <summary>
        /// String: '{0} cannot be blank. Please enter a valid date.'.
        /// </summary>
        internal static string DateCannotBeBlank(object arg0)
        {
            return GetString("DateCannotBeBlank", arg0);
        }
        
        /// <summary>
        /// String: '{0} cannot be earlier than invoice date.'.
        /// </summary>
        internal static string DateCannotBeEarlierInvDate(object arg0)
        {
            return GetString("DateCannotBeEarlierInvDate", arg0);
        }
        
        /// <summary>
        /// String: 'Not Defined'.
        /// </summary>
        internal static string NotDefined
        {
            get
            {
                return GetString("NotDefined");
            }
        }
        
        /// <summary>
        /// String: 'Supplier is missing payment proposal schedule configuration.'.
        /// </summary>
        internal static string SuppIsMissingPaymentProposalSchedConfi
        {
            get
            {
                return GetString("SuppIsMissingPaymentProposalSchedConfi");
            }
        }
        
        /// <summary>
        /// String: 'Tax records exist, cannot switch to a Tax Exclusive Liability.'.
        /// </summary>
        internal static string CannotChgToTaxExclusive
        {
            get
            {
                return GetString("CannotChgToTaxExclusive");
            }
        }
        
        /// <summary>
        /// String: 'Tax records exist, cannot switch to a Tax Inclusive Liability.'.
        /// </summary>
        internal static string CannotChgToTaxInclusive
        {
            get
            {
                return GetString("CannotChgToTaxInclusive");
            }
        }
        
        /// <summary>
        /// String: 'Reference to Debit Memo is not allowed'.
        /// </summary>
        internal static string THDebitMemoRefNotAllowed
        {
            get
            {
                return GetString("THDebitMemoRefNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Self-reference is not allowed'.
        /// </summary>
        internal static string THSelfRefNotAllowed
        {
            get
            {
                return GetString("THSelfRefNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Cannot delete Tax Adjustment invoice created in Payment Statement.'.
        /// </summary>
        internal static string CannotDeleteTaxAdjustment
        {
            get
            {
                return GetString("CannotDeleteTaxAdjustment");
            }
        }
        
        /// <summary>
        /// String: 'Cannot delete line of Tax Adjustment invoice created in Payment Statement.'.
        /// </summary>
        internal static string CannotDeleteTaxAdjustmentLine
        {
            get
            {
                return GetString("CannotDeleteTaxAdjustmentLine");
            }
        }
        
        /// <summary>
        /// String: 'Only posted invoices can be used as reference.'.
        /// </summary>
        internal static string THRefToPostedInvOnly
        {
            get
            {
                return GetString("THRefToPostedInvOnly");
            }
        }
        
        /// <summary>
        /// String: 'Withholding tax type is not allowed at Line or Misc Charge Level, only at Header Level.'.
        /// </summary>
        internal static string WithholdingTaxNotAllowedAtLineLevel
        {
            get
            {
                return GetString("WithholdingTaxNotAllowedAtLineLevel");
            }
        }
        
        /// <summary>
        /// String: 'Invoice'.
        /// </summary>
        internal static string InvoiceCollection
        {
            get
            {
                return GetString("InvoiceCollection");
            }
        }
        
        /// <summary>
        /// String: 'Self-Assessment'.
        /// </summary>
        internal static string SelfAssessment
        {
            get
            {
                return GetString("SelfAssessment");
            }
        }
        
        /// <summary>
        /// String: 'Self-Assessment, Dual Entry'.
        /// </summary>
        internal static string SelfAssessmentDual
        {
            get
            {
                return GetString("SelfAssessmentDual");
            }
        }
        
        /// <summary>
        /// String: 'WithHolding'.
        /// </summary>
        internal static string Withholding
        {
            get
            {
                return GetString("Withholding");
            }
        }
        
        /// <summary>
        /// String: 'Invalid commodity code'.
        /// </summary>
        internal static string InvalidCommodityCode
        {
            get
            {
                return GetString("InvalidCommodityCode");
            }
        }
        
        /// <summary>
        /// String: 'Commodity Code should be set.'.
        /// </summary>
        internal static string EmptyCommodityCode
        {
            get
            {
                return GetString("EmptyCommodityCode");
            }
        }
        
        /// <summary>
        /// String: 'Product Tax Category should be set.'.
        /// </summary>
        internal static string EmptyProductTaxCategory
        {
            get
            {
                return GetString("EmptyProductTaxCategory");
            }
        }
        
        /// <summary>
        /// String: 'Cannot delete a Payment Schedule.'.
        /// </summary>
        internal static string CannotDeletePaymentSchedule
        {
            get
            {
                return GetString("CannotDeletePaymentSchedule");
            }
        }
        
        /// <summary>
        /// String: 'Please enter country of import.'.
        /// </summary>
        internal static string ImportCountryMustBeEntered
        {
            get
            {
                return GetString("ImportCountryMustBeEntered");
            }
        }
        
        /// <summary>
        /// String: 'Please enter import date.'.
        /// </summary>
        internal static string ImportDateMustBeEntered
        {
            get
            {
                return GetString("ImportDateMustBeEntered");
            }
        }
        
        /// <summary>
        /// String: 'Please enter import number.'.
        /// </summary>
        internal static string ImportNumberMustBeEntered
        {
            get
            {
                return GetString("ImportNumberMustBeEntered");
            }
        }
        
        /// <summary>
        /// String: 'Terms,'.
        /// </summary>
        internal static string TermsCode
        {
            get
            {
                return GetString("TermsCode");
            }
        }
        
        /// <summary>
        /// String: 'Supplier Number is required.'.
        /// </summary>
        internal static string SupplierRequired
        {
            get
            {
                return GetString("SupplierRequired");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Purchase Point is invalid.'.
        /// </summary>
        internal static string TheInvoicePurPointIsInvalid
        {
            get
            {
                return GetString("TheInvoicePurPointIsInvalid");
            }
        }
        
        /// <summary>
        /// String: 'Only Purchase Points with Tax Liability {0} are allowed.'.
        /// </summary>
        internal static string PurPointsWithHeaderTaxLiabilityIsAllowed(object arg0)
        {
            return GetString("PurPointsWithHeaderTaxLiabilityIsAllowed", arg0);
        }
        
        /// <summary>
        /// String: 'Another Job Charge in this invoice has already been linked to the same Job Miscellaneous Charge for Non-Reimbursable Expense. Please update the existing Invoice Job Charge instead.'.
        /// </summary>
        internal static string MultipleJobChargesNotAllowed
        {
            get
            {
                return GetString("MultipleJobChargesNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'Sum of Invoice Value cannot be greater than Line sub total.'.
        /// </summary>
        internal static string SumOfInvoiceValueCannotBeGreaterThanLineSubTotal
        {
            get
            {
                return GetString("SumOfInvoiceValueCannotBeGreaterThanLineSubTotal");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Deferred Expense GL Account {2} Book {3} for Invoice {0} Line {1}. '.
        /// </summary>
        internal static string InvalidAccountAmortizationDoc(object arg0, object arg1, object arg2, object arg3)
        {
            return GetString("InvalidAccountAmortizationDoc", arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// String: 'Invalid GL Account {2} Book {3} for Invoice {0} Line {1}.'.
        /// </summary>
        internal static string InvalidAccountDoc(object arg0, object arg1, object arg2, object arg3)
        {
            return GetString("InvalidAccountDoc", arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// String: 'Invalid External GL Account {2} Book {3} for Invoice {0} Line {1}. '.
        /// </summary>
        internal static string InvalidExtAccountDoc(object arg0, object arg1, object arg2, object arg3)
        {
            return GetString("InvalidExtAccountDoc", arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// String: 'Please review Lines/Amortization Tab.'.
        /// </summary>
        internal static string ReviewAmortizationTab
        {
            get
            {
                return GetString("ReviewAmortizationTab");
            }
        }
        
        /// <summary>
        /// String: 'Please review Lines/GL Analysis Tab.'.
        /// </summary>
        internal static string ReviewGLAnalysisTab
        {
            get
            {
                return GetString("ReviewGLAnalysisTab");
            }
        }
        
        /// <summary>
        /// String: 'Invalid GL Account {1}  Book {2} for Invoice {0}.'.
        /// </summary>
        internal static string InvalidHeaderAccountDoc(object arg0, object arg1, object arg2)
        {
            return GetString("InvalidHeaderAccountDoc", arg0, arg1, arg2);
        }
        
        /// <summary>
        /// String: 'Please review Header/Misc Charges/GL Analysis Tab.'.
        /// </summary>
        internal static string ReviewHeaderGLAnalysisTab
        {
            get
            {
                return GetString("ReviewHeaderGLAnalysisTab");
            }
        }
        
        /// <summary>
        /// String: 'Supplier {0} is Inactive. Are you sure you want to continue with this supplier?'.
        /// </summary>
        internal static string InactiveSupplierConfirmation(object arg0)
        {
            return GetString("InactiveSupplierConfirmation", arg0);
        }
        
        /// <summary>
        /// String: 'One or more suppliers are Inactive. Are you sure you want to match approved logged invoice(s)?'.
        /// </summary>
        internal static string InactiveSupplierConfirmationLoggedInv
        {
            get
            {
                return GetString("InactiveSupplierConfirmationLoggedInv");
            }
        }
        
        /// <summary>
        /// String: 'Supplier {0} is Inactive. Miscellaneous lines cannot be added to invoice.'.
        /// </summary>
        internal static string InactiveSupplierMiscLines(object arg0)
        {
            return GetString("InactiveSupplierMiscLines", arg0);
        }
        
        /// <summary>
        /// String: 'One or more suppliers are inactive. Invoice(s) for inactive suppliers were not created.'.
        /// </summary>
        internal static string InactiveSupplierRecurringInvoice
        {
            get
            {
                return GetString("InactiveSupplierRecurringInvoice");
            }
        }
        
        /// <summary>
        /// String: 'Legal number has not been defined for transaction document type {0}'.
        /// </summary>
        internal static string PLLegalNumberNotDefinedForTranDocType(object arg0)
        {
            return GetString("PLLegalNumberNotDefinedForTranDocType", arg0);
        }
        
        /// <summary>
        /// String: 'Transaction Document Type has not been defined'.
        /// </summary>
        internal static string PLTranDocTypeNotDefined
        {
            get
            {
                return GetString("PLTranDocTypeNotDefined");
            }
        }
        
        /// <summary>
        /// String: 'GL Account {0} can&apos;t be validated.'.
        /// </summary>
        internal static string GLAccountCantbeValidated(object arg0)
        {
            return GetString("GLAccountCantbeValidated", arg0);
        }
        
        /// <summary>
        /// String: 'Supplier {0} is Inactive. Asset lines cannot be added to invoice.'.
        /// </summary>
        internal static string InactiveSupplierAssetLines(object arg0)
        {
            return GetString("InactiveSupplierAssetLines", arg0);
        }
        
        /// <summary>
        /// String: 'Supplier {0} is Inactive. Job Miscellaneous lines cannot be added to invoice.'.
        /// </summary>
        internal static string InactiveSupplierJobMiscLines(object arg0)
        {
            return GetString("InactiveSupplierJobMiscLines", arg0);
        }
        
        /// <summary>
        /// String: 'The debit memo job charge exceeds the current Job Material Miscellaneous Charge Costs.'.
        /// </summary>
        internal static string TheDebitMemoExceedsTheJobCharge
        {
            get
            {
                return GetString("TheDebitMemoExceedsTheJobCharge");
            }
        }
        
        /// <summary>
        /// String: 'The Tax Record is reversing the Prepayment tax. Delete not allowed.'.
        /// </summary>
        internal static string ThisTaxRecPrepayReverse
        {
            get
            {
                return GetString("ThisTaxRecPrepayReverse");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Reference Number is required'.
        /// </summary>
        internal static string PLInvoiceReferenceEmpty
        {
            get
            {
                return GetString("PLInvoiceReferenceEmpty");
            }
        }
        
        /// <summary>
        /// String: 'Expense Amortization Code is required.'.
        /// </summary>
        internal static string AmortizationCodeIsRequired
        {
            get
            {
                return GetString("AmortizationCodeIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Invalid {0} Invoice number, the new invoice number can not be blank or match select invoice number.'.
        /// </summary>
        internal static string InvalidNewInvoiceNumber(object arg0)
        {
            return GetString("InvalidNewInvoiceNumber", arg0);
        }
        
        /// <summary>
        /// String: 'Invoice has already been cancelled by Invoice {0}.'.
        /// </summary>
        internal static string InvoiceHasAlreadyBeenCancelByInvoice(object arg0)
        {
            return GetString("InvoiceHasAlreadyBeenCancelByInvoice", arg0);
        }
        
        /// <summary>
        /// String: 'Invalid type of Invoice creation.'.
        /// </summary>
        internal static string typeOfCreation
        {
            get
            {
                return GetString("typeOfCreation");
            }
        }
        
        /// <summary>
        /// String: 'Debit Memos cannot be cancelled.'.
        /// </summary>
        internal static string HasDebitMemos
        {
            get
            {
                return GetString("HasDebitMemos");
            }
        }
        
        /// <summary>
        /// String: 'Final invoice exist for the Receipt referenced on this invoice. Unable to {0} this invoice.'.
        /// </summary>
        internal static string FinalInvoiceExists(object arg0)
        {
            return GetString("FinalInvoiceExists", arg0);
        }
        
        /// <summary>
        /// String: 'This invoice has line types that cannot be cancelled'.
        /// </summary>
        internal static string LineNotSupported
        {
            get
            {
                return GetString("LineNotSupported");
            }
        }
        
        /// <summary>
        /// String: 'This invoice has posted payments. Unable to create cancellation. Please void the payments first.'.
        /// </summary>
        internal static string PostedPaymentExists
        {
            get
            {
                return GetString("PostedPaymentExists");
            }
        }
        
        /// <summary>
        /// String: 'Invoice contains a pre-payment. Unable to cancel.'.
        /// </summary>
        internal static string TheInvoiceHasPrepayments
        {
            get
            {
                return GetString("TheInvoiceHasPrepayments");
            }
        }
        
        /// <summary>
        /// String: 'Correction Invoices can&apos;t be {0}.'.
        /// </summary>
        internal static string IsCorrectionInvoice(object arg0)
        {
            return GetString("IsCorrectionInvoice", arg0);
        }
        
        /// <summary>
        /// String: 'The invoice has Open Payments'.
        /// </summary>
        internal static string UnpostedPayments
        {
            get
            {
                return GetString("UnpostedPayments");
            }
        }
        
        /// <summary>
        /// String: 'Can&apos;t Cancel Prepayments'.
        /// </summary>
        internal static string CantCancelPrepayments
        {
            get
            {
                return GetString("CantCancelPrepayments");
            }
        }
        
        /// <summary>
        /// String: 'Cancellation'.
        /// </summary>
        internal static string Cancellation
        {
            get
            {
                return GetString("Cancellation");
            }
        }
        
        /// <summary>
        /// String: 'Correction'.
        /// </summary>
        internal static string Correction
        {
            get
            {
                return GetString("Correction");
            }
        }
        
        /// <summary>
        /// String: 'Cancellation Invoices can&apos;t be cancellated.'.
        /// </summary>
        internal static string IsCancellationInvoice
        {
            get
            {
                return GetString("IsCancellationInvoice");
            }
        }
        
        /// <summary>
        /// String: 'Unable to cancel correction invoices'.
        /// </summary>
        internal static string UnableToCancelCorrectionInvoices
        {
            get
            {
                return GetString("UnableToCancelCorrectionInvoices");
            }
        }
        
        /// <summary>
        /// String: 'Unable to correct cancellation invoices.'.
        /// </summary>
        internal static string UnableToCorrectCancellationInvoices
        {
            get
            {
                return GetString("UnableToCorrectCancellationInvoices");
            }
        }
        
        /// <summary>
        /// String: 'Unable to Cancel Invoice with Late Cost'.
        /// </summary>
        internal static string LateCostExist
        {
            get
            {
                return GetString("LateCostExist");
            }
        }
        
        /// <summary>
        /// String: 'Invoice {0} is being used in an open Netting transaction'.
        /// </summary>
        internal static string InvoiceUsedInNetting(object arg0)
        {
            return GetString("InvoiceUsedInNetting", arg0);
        }
        
        /// <summary>
        /// String: 'PO number does not match receipt.'.
        /// </summary>
        internal static string PODoesNotMatchReceipt
        {
            get
            {
                return GetString("PODoesNotMatchReceipt");
            }
        }
        
        /// <summary>
        /// String: 'Receipt not found.'.
        /// </summary>
        internal static string ReceiptNotFound
        {
            get
            {
                return GetString("ReceiptNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Receipt not found or is invoiced.'.
        /// </summary>
        internal static string ReceiptNotFoundOrIsInvoiced
        {
            get
            {
                return GetString("ReceiptNotFoundOrIsInvoiced");
            }
        }
        
        /// <summary>
        /// String: 'Cannot cancel invoice with posted amortization'.
        /// </summary>
        internal static string InvcWithPostedAmortization
        {
            get
            {
                return GetString("InvcWithPostedAmortization");
            }
        }
        
        /// <summary>
        /// String: 'Taxes at line level not allowed.'.
        /// </summary>
        internal static string LineTaxNotAllowed
        {
            get
            {
                return GetString("LineTaxNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'New GL not allowed.'.
        /// </summary>
        internal static string NewGLNotAllowed
        {
            get
            {
                return GetString("NewGLNotAllowed");
            }
        }
        
        /// <summary>
        /// String: 'A valid Supplier ID is Required'.
        /// </summary>
        internal static string AValidSupplierIdIsRequired
        {
            get
            {
                return GetString("AValidSupplierIdIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Multiple entries located with this invoice number, enter the supplier ID to narrow the search.'.
        /// </summary>
        internal static string EnterVendorID
        {
            get
            {
                return GetString("EnterVendorID");
            }
        }
        
        /// <summary>
        /// String: 'No record located for this invoice number.'.
        /// </summary>
        internal static string NoInvoiceLocated
        {
            get
            {
                return GetString("NoInvoiceLocated");
            }
        }
        
        /// <summary>
        /// String: 'Please, Provide a valid GroupID.'.
        /// </summary>
        internal static string GroupIDInvalid
        {
            get
            {
                return GetString("GroupIDInvalid");
            }
        }
        
        /// <summary>
        /// String: 'GroupID not found. Add new?'.
        /// </summary>
        internal static string GroupIDNotFound
        {
            get
            {
                return GetString("GroupIDNotFound");
            }
        }
        
        /// <summary>
        /// String: 'No Records have been selected.'.
        /// </summary>
        internal static string NoRecordsSelected
        {
            get
            {
                return GetString("NoRecordsSelected");
            }
        }
        
        /// <summary>
        /// String: 'The value provided on Apply Date is not a valid date. Please review.'.
        /// </summary>
        internal static string InvalidTransferApplyDate
        {
            get
            {
                return GetString("InvalidTransferApplyDate");
            }
        }
        
        /// <summary>
        /// String: 'Cannot disable logged invoice override. Delete overridden invoice and match it again.'.
        /// </summary>
        internal static string CannotDisableAllowOverrideLI
        {
            get
            {
                return GetString("CannotDisableAllowOverrideLI");
            }
        }
        
        /// <summary>
        /// String: 'Invoice is locked or posted.  Site cannot be changed.'.
        /// </summary>
        internal static string InvIsLockedOrPosted
        {
            get
            {
                return GetString("InvIsLockedOrPosted");
            }
        }
        
        /// <summary>
        /// String: 'Site cannot be blank.'.
        /// </summary>
        internal static string SiteCannotBeBlank
        {
            get
            {
                return GetString("SiteCannotBeBlank");
            }
        }
        
        /// <summary>
        /// String: 'Cannot create a line from drop shipments for GRNI invoices'.
        /// </summary>
        internal static string CannotDropShipGRNI
        {
            get
            {
                return GetString("CannotDropShipGRNI");
            }
        }
        
        /// <summary>
        /// String: 'Invalid Late Cost header.'.
        /// </summary>
        internal static string InvalidAPLateCost
        {
            get
            {
                return GetString("InvalidAPLateCost");
            }
        }
        
        /// <summary>
        /// String: 'Late Cost Totals not found.'.
        /// </summary>
        internal static string LateCostTotalsNotFound
        {
            get
            {
                return GetString("LateCostTotalsNotFound");
            }
        }
        
        /// <summary>
        /// String: 'No Container Header was found for this RcvHead.'.
        /// </summary>
        internal static string RcvHeadContainerNotFound
        {
            get
            {
                return GetString("RcvHeadContainerNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Cannot delete line of posted invoice.'.
        /// </summary>
        internal static string CannotDeleteLineOfPostedInvoice
        {
            get
            {
                return GetString("CannotDeleteLineOfPostedInvoice");
            }
        }
        
        /// <summary>
        /// String: 'Plastic Packaging Tax Report has already been selected for costing.'.
        /// </summary>
        internal static string PlasticPackTaxReportHasAlreadyBeenSelected
        {
            get
            {
                return GetString("PlasticPackTaxReportHasAlreadyBeenSelected");
            }
        }
        
        /// <summary>
        /// String: 'Plastic Packaging Tax Report is not found.'.
        /// </summary>
        internal static string PlasticPackTaxReportIsNotFound
        {
            get
            {
                return GetString("PlasticPackTaxReportIsNotFound");
            }
        }
        
        /// <summary>
        /// String: 'Plastic Packaging Tax Report is not submitted.'.
        /// </summary>
        internal static string PlasticPackTaxReportIsNotSubmitted
        {
            get
            {
                return GetString("PlasticPackTaxReportIsNotSubmitted");
            }
        }
        
        /// <summary>
        /// String: 'Deleting Late cost will result in negative charge amount for PackSlip {0} - {1}.'.
        /// </summary>
        internal static string CannotDeleteLateCost(object arg0, object arg1)
        {
            return GetString("CannotDeleteLateCost", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Do you want to continue?'.
        /// </summary>
        internal static string WantToContinue
        {
            get
            {
                return GetString("WantToContinue");
            }
        }
        
        /// <summary>
        /// String: 'QR Reference is required.'.
        /// </summary>
        internal static string QRReferenceIsRequired
        {
            get
            {
                return GetString("QRReferenceIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'QR IBAN, QR Reference,'.
        /// </summary>
        internal static string QRIBANQRReference
        {
            get
            {
                return GetString("QRIBANQRReference");
            }
        }
        
        /// <summary>
        /// String: 'You have entered a negative Late Cost Charge. Answering yes will cause a negative part costs which are not supported by the system.'.
        /// </summary>
        internal static string NegativeLateCost
        {
            get
            {
                return GetString("NegativeLateCost");
            }
        }
        
        /// <summary>
        /// String: 'This PO line already has an unreceived line Invoice created. Multiple invoicing of receipts is not supported by the Invoice Receipt Match. Do you want to continue?'.
        /// </summary>
        internal static string ThePurchaseOrderAlreadyHasAnUnreceivedLineInv
        {
            get
            {
                return GetString("ThePurchaseOrderAlreadyHasAnUnreceivedLineInv");
            }
        }
        
        /// <summary>
        /// String: 'Unable to Cancel Central Payment invoices.'.
        /// </summary>
        internal static string CannotCancelCCPayInvoices
        {
            get
            {
                return GetString("CannotCancelCCPayInvoices");
            }
        }
        
        /// <summary>
        /// String: 'Unable to Cancel Inter-Company invoices.'.
        /// </summary>
        internal static string CannotCancelInterCompanyInvoices
        {
            get
            {
                return GetString("CannotCancelInterCompanyInvoices");
            }
        }
        
        /// <summary>
        /// String: 'Invoice Number {0} already exists.'.
        /// </summary>
        internal static string InvoiceAlreadyExistsNewInvoiceNum(object arg0)
        {
            return GetString("InvoiceAlreadyExistsNewInvoiceNum", arg0);
        }
        
        /// <summary>
        /// String: 'The new invoice number may not be blank.'.
        /// </summary>
        internal static string NewInvoiceNumMayNotBeBlank
        {
            get
            {
                return GetString("NewInvoiceNumMayNotBeBlank");
            }
        }
        
        /// <summary>
        /// String: 'Invoice number changed from {0} to {1}.'.
        /// </summary>
        internal static string LegalNumberVoidReason(object arg0, object arg1)
        {
            return GetString("LegalNumberVoidReason", arg0, arg1);
        }
        
        /// <summary>
        /// String: 'Invoice not found with new invoice number {0}.'.
        /// </summary>
        internal static string InvoiceNotFoundWithNewNumber(object arg0)
        {
            return GetString("InvoiceNotFoundWithNewNumber", arg0);
        }
        
        /// <summary>
        /// String: 'The selected WBS is inactive.'.
        /// </summary>
        internal static string WBSIsInactive
        {
            get
            {
                return GetString("WBSIsInactive");
            }
        }
        
        /// <summary>
        /// String: 'Document Type is required.'.
        /// </summary>
        internal static string DocumentTypeIsRequired
        {
            get
            {
                return GetString("DocumentTypeIsRequired");
            }
        }
        
        /// <summary>
        /// String: 'Group {0} is in use by another user.'.
        /// </summary>
        internal static string GroupIsInUseByAnotherUser(object arg0)
        {
            return GetString("GroupIsInUseByAnotherUser", arg0);
        }
    }
}
